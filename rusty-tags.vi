!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ALL_CHANNELS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    const ALL_CHANNELS: [i32; 2] = [1, 2];$/;"	c
ALL_FORMATS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    const ALL_FORMATS: [oboe::AudioFormat; 2] = [oboe::AudioFormat::I16, oboe::AudioFormat::F32];$/;"	c
ALL_HOSTS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub const ALL_HOSTS: &'static [HostId] = &[$/;"	c
Abi	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    type Abi = wasm_bindgen::convert::WasmOption<u32>;$/;"	T
Args	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^        type Args = render_callback::Args<data::Raw>;$/;"	T
Args	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^        type Args = render_callback::Args<data::Raw>;$/;"	T
AsList	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub struct AsList<S>(S);$/;"	s
AsMap	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub struct AsMap<S>(S);$/;"	s
AtomicUsize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^struct AtomicUsize {$/;"	s
AudioClientFlow	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^pub enum AudioClientFlow {$/;"	g
AudioInput	/opt/work/rust/tuner/src/main.rs	/^pub struct AudioInput {$/;"	s
AudioObjectPropertyListener	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/property_listener.rs	/^pub struct AudioObjectPropertyListener {$/;"	s
AvxArray	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^pub trait AvxArray<T: AvxNum> {$/;"	t
AvxArrayMut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^pub trait AvxArrayMut<T: AvxNum> {$/;"	t
AvxNum	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^pub trait AvxNum: FftNum {$/;"	t
AvxPlannerInternal	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^struct AvxPlannerInternal<A: AvxNum, T: FftNum> {$/;"	s
AvxPlannerInternalAPI	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^trait AvxPlannerInternalAPI<T: FftNum>: Send {$/;"	t
AvxVector	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^pub trait AvxVector: Copy + Debug + Send + Sync {$/;"	t
AvxVector128	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^pub trait AvxVector128: AvxVector {$/;"	t
AvxVector256	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^pub trait AvxVector256: AvxVector {$/;"	t
BATCH_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/base.rs	/^const BATCH_SIZE: usize = 100;$/;"	c
BackendSpecificError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/error.rs	/^pub struct BackendSpecificError {$/;"	s
BigScratchAlgorithm	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^pub struct BigScratchAlgorithm {$/;"	s
BluesteinsAlgorithm	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/bluesteins_algorithm.rs	/^pub struct BluesteinsAlgorithm<T> {$/;"	s
BluesteinsAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^pub struct BluesteinsAvx<A: AvxNum, T> {$/;"	s
BufferSize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub enum BufferSize {$/;"	g
BuildStreamError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/error.rs	/^pub enum BuildStreamError {$/;"	g
Builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^pub struct Builder {$/;"	s
Builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub struct Builder {$/;"	s
Butterfly1	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly1<T> {$/;"	s
Butterfly11	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly11<T> {$/;"	s
Butterfly11Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly11Avx<T> {$/;"	s
Butterfly11Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly11Avx64<T> {$/;"	s
Butterfly128Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly128Avx<T> {$/;"	s
Butterfly128Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly128Avx64<T> {$/;"	s
Butterfly12Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly12Avx<T> {$/;"	s
Butterfly12Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly12Avx64<T> {$/;"	s
Butterfly13	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly13<T> {$/;"	s
Butterfly16	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly16<T> {$/;"	s
Butterfly16Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly16Avx<T> {$/;"	s
Butterfly16Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly16Avx64<T> {$/;"	s
Butterfly17	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly17<T> {$/;"	s
Butterfly18Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly18Avx64<T> {$/;"	s
Butterfly19	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly19<T> {$/;"	s
Butterfly2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly2<T> {$/;"	s
Butterfly23	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly23<T> {$/;"	s
Butterfly24Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly24Avx<T> {$/;"	s
Butterfly24Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly24Avx64<T> {$/;"	s
Butterfly256Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly256Avx<T> {$/;"	s
Butterfly256Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly256Avx64<T> {$/;"	s
Butterfly27	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly27<T> {$/;"	s
Butterfly27Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly27Avx<T> {$/;"	s
Butterfly27Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly27Avx64<T> {$/;"	s
Butterfly29	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly29<T> {$/;"	s
Butterfly3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly3<T> {$/;"	s
Butterfly31	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly31<T> {$/;"	s
Butterfly32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly32<T> {$/;"	s
Butterfly32Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly32Avx<T> {$/;"	s
Butterfly32Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly32Avx64<T> {$/;"	s
Butterfly36Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly36Avx<T> {$/;"	s
Butterfly36Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly36Avx64<T> {$/;"	s
Butterfly4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly4<T> {$/;"	s
Butterfly48Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly48Avx<T> {$/;"	s
Butterfly5	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly5<T> {$/;"	s
Butterfly512Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly512Avx<T> {$/;"	s
Butterfly512Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly512Avx64<T> {$/;"	s
Butterfly54Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly54Avx<T> {$/;"	s
Butterfly5Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly5Avx<T> {$/;"	s
Butterfly5Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly5Avx64<T> {$/;"	s
Butterfly6	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly6<T> {$/;"	s
Butterfly64Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly64Avx<T> {$/;"	s
Butterfly64Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly64Avx64<T> {$/;"	s
Butterfly7	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly7<T> {$/;"	s
Butterfly72Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly72Avx<T> {$/;"	s
Butterfly7Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly7Avx<T> {$/;"	s
Butterfly7Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly7Avx64<T> {$/;"	s
Butterfly8	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly8<T> {$/;"	s
Butterfly8Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly8Avx<T> {$/;"	s
Butterfly8Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly8Avx64<T> {$/;"	s
Butterfly9	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^pub struct Butterfly9<T> {$/;"	s
Butterfly9Avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^pub struct Butterfly9Avx<T> {$/;"	s
Butterfly9Avx64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^pub struct Butterfly9Avx64<T> {$/;"	s
CHANNEL_MASKS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^const CHANNEL_MASKS: [i32; 2] = [$/;"	c
CHANNEL_OUT_MONO	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/android_media.rs	/^pub const CHANNEL_OUT_MONO: i32 = 4;$/;"	c
CHANNEL_OUT_STEREO	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/android_media.rs	/^pub const CHANNEL_OUT_STEREO: i32 = 12;$/;"	c
CLOCK_MONOTONIC	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/convert.rs	/^    const CLOCK_MONOTONIC: i32 = 1;$/;"	c
COMMON_SAMPLE_RATES	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^const COMMON_SAMPLE_RATES: &[SampleRate] = &[$/;"	c
COMPLEX_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    const COMPLEX_PER_VECTOR: usize = 1;$/;"	c
COMPLEX_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    const COMPLEX_PER_VECTOR: usize = 2;$/;"	c
COMPLEX_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    const COMPLEX_PER_VECTOR: usize = 4;$/;"	c
COMPLEX_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    const COMPLEX_PER_VECTOR: usize;$/;"	c
COMPLEX_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    const COMPLEX_PER_VECTOR: usize = 1;$/;"	c
COMPLEX_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    const COMPLEX_PER_VECTOR: usize = 2;$/;"	c
COMPLEX_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    const COMPLEX_PER_VECTOR: usize;$/;"	c
COMPLEX_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    const COMPLEX_PER_VECTOR: usize = 1;$/;"	c
COMPLEX_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    const COMPLEX_PER_VECTOR: usize = 2;$/;"	c
COMPLEX_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    const COMPLEX_PER_VECTOR: usize;$/;"	c
CacheLocation	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^        enum CacheLocation {$/;"	g
ChannelCount	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub type ChannelCount = u16;$/;"	T
ChosenFftPlanner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^enum ChosenFftPlanner<T: FftNum> {$/;"	g
Color	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^pub enum Color {$/;"	g
ComInitialized	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/com.rs	/^struct ComInitialized {$/;"	s
Command	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^pub enum Command {$/;"	g
CommonSimdData	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^struct CommonSimdData<T, V> {$/;"	s
ComplexToReal	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^pub trait ComplexToReal<T>: Sync + Send {$/;"	t
ComplexToRealEven	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^pub struct ComplexToRealEven<T> {$/;"	s
ComplexToRealOdd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^pub struct ComplexToRealOdd<T> {$/;"	s
Consumer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^pub struct Consumer<T, R: RbRef>$/;"	s
Container	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/storage.rs	/^pub unsafe trait Container<T> {$/;"	t
ControlFlow	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^enum ControlFlow {$/;"	g
Count	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    struct Count(usize);$/;"	s
CpalInputCallback	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/input_callback.rs	/^pub struct CpalInputCallback<I, C> {$/;"	s
CpalOutputCallback	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/output_callback.rs	/^pub struct CpalOutputCallback<I, C> {$/;"	s
DEFAULT_BUFFER_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^const DEFAULT_BUFFER_SIZE: usize = 2048;$/;"	c
DEFAULT_BUFFER_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^const DEFAULT_BUFFER_SIZE: usize = 2048;$/;"	c
DEFAULT_FILTER_ENV	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub const DEFAULT_FILTER_ENV: &str = "RUST_LOG";$/;"	c
DEFAULT_NUM_CHANNELS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^const DEFAULT_NUM_CHANNELS: u16 = 2;$/;"	c
DEFAULT_SAMPLE_RATE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^const DEFAULT_SAMPLE_RATE: SampleRate = SampleRate(44_100);$/;"	c
DEFAULT_SAMPLE_RATE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^const DEFAULT_SAMPLE_RATE: SampleRate = SampleRate(44_100);$/;"	c
DEFAULT_SUPPORTED_CHANNELS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^const DEFAULT_SUPPORTED_CHANNELS: [u16; 10] = [1, 2, 4, 6, 8, 16, 24, 32, 48, 64];$/;"	c
DEFAULT_WRITE_STYLE_ENV	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub const DEFAULT_WRITE_STYLE_ENV: &str = "RUST_LOG_STYLE";$/;"	c
Data	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub struct Data {$/;"	s
DefaultFormat	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^struct DefaultFormat<'a> {$/;"	s
DefaultStreamConfigError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/error.rs	/^pub enum DefaultStreamConfigError {$/;"	g
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    type Device = Device;$/;"	T
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^pub struct Device {$/;"	s
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^pub struct Device {$/;"	s
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    type Device = Device;$/;"	T
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    type Device = Device;$/;"	T
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^pub struct Device;$/;"	s
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    type Device = Device;$/;"	T
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^pub struct Device {$/;"	s
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    type Device = Device;$/;"	T
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^pub struct Device;$/;"	s
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^pub struct Device {$/;"	s
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    type Device = Device;$/;"	T
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    type Device = Device;$/;"	T
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^pub struct Device;$/;"	s
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    type Device = Device;$/;"	T
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^pub struct Device(Option<oboe::AudioDeviceInfo>);$/;"	s
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^pub struct Device {$/;"	s
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^    type Device = Device;$/;"	T
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    type Device = Device;$/;"	T
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^pub struct Device;$/;"	s
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            type Device = Device;$/;"	T
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub struct Device(DeviceInner);$/;"	s
Device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    type Device: DeviceTrait;$/;"	T
DeviceHandles	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^struct DeviceHandles {$/;"	s
DeviceInner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub enum DeviceInner {$/;"	g
DeviceNameError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/error.rs	/^pub enum DeviceNameError {$/;"	g
DeviceTrait	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^pub trait DeviceTrait {$/;"	t
DeviceType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^pub enum DeviceType {$/;"	g
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/enumerate.rs	/^pub struct Devices {$/;"	s
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    type Devices = Devices;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^pub struct Devices {$/;"	s
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    type Devices = Devices;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/enumerate.rs	/^pub struct Devices(VecIntoIter<Device>);$/;"	s
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    type Devices = Devices;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/enumerate.rs	/^pub struct Devices(VecIntoIter<AudioDeviceID>);$/;"	s
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    type Devices = Devices;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    type Devices = Devices;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^pub struct Devices(bool);$/;"	s
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    type Devices = Devices;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^pub type Devices = std::vec::IntoIter<Device>;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    type Devices = Devices;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^pub struct Devices;$/;"	s
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    type Devices = Devices;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^pub type Devices = VecIntoIter<Device>;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^pub struct Devices {$/;"	s
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^    type Devices = Devices;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    type Devices = Devices;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^pub struct Devices(bool);$/;"	s
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            type Devices = Devices;$/;"	T
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub struct Devices(DevicesInner);$/;"	s
Devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    type Devices: Iterator<Item = Self::Device>;$/;"	T
DevicesError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/error.rs	/^pub enum DevicesError {$/;"	g
DevicesInner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub enum DevicesInner {$/;"	g
Dft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/dft.rs	/^pub struct Dft<T> {$/;"	s
Direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^pub trait Direction {$/;"	t
Directive	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^struct Directive {$/;"	s
Dropper	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/drop.rs	/^struct Dropper<'a> {$/;"	s
ENCODING_PCM_16BIT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/android_media.rs	/^pub const ENCODING_PCM_16BIT: i32 = 2;$/;"	c
ENCODING_PCM_FLOAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/android_media.rs	/^pub const ENCODING_PCM_FLOAT: i32 = 4;$/;"	c
ENUMERATOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^static ENUMERATOR: Lazy<Enumerator> = Lazy::new(|| {$/;"	c
EXPECT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^        const EXPECT: &str = "expected at least one valid webaudio stream config";$/;"	c
EXPECT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^        const EXPECT: &str = "expected at least one valid webaudio stream config";$/;"	c
Endpoint	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^struct Endpoint {$/;"	s
Enumerator	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^struct Enumerator(Audio::IMMDeviceEnumerator);$/;"	s
Env	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub struct Env<'a> {$/;"	s
Err	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    type Err = ParseLevelError;$/;"	T
ErrDeviceNotAvailable	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^trait ErrDeviceNotAvailable: From<BackendSpecificError> {$/;"	t
Error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^pub struct Error {$/;"	s
ErrorCallbackPtr	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^type ErrorCallbackPtr = Arc<Mutex<dyn FnMut(StreamError) + Send + 'static>>;$/;"	T
ExpectedData	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^        struct ExpectedData {$/;"	s
Extract	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        struct Extract(Option<u64>);$/;"	s
Extract	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        struct Extract<'v>(Option<&'v str>);$/;"	s
FFT_LEN	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^        const FFT_LEN: usize = $num_rows * $num_cols;$/;"	c
FFT_LEN	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^        const FFT_LEN: usize = $num_rows * $num_cols;$/;"	c
FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    const FORMAT: SampleFormat = SampleFormat::F32;$/;"	c
FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    const FORMAT: SampleFormat = SampleFormat::F64;$/;"	c
FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    const FORMAT: SampleFormat = SampleFormat::I16;$/;"	c
FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    const FORMAT: SampleFormat = SampleFormat::I32;$/;"	c
FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    const FORMAT: SampleFormat = SampleFormat::I64;$/;"	c
FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    const FORMAT: SampleFormat = SampleFormat::I8;$/;"	c
FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    const FORMAT: SampleFormat = SampleFormat::U16;$/;"	c
FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    const FORMAT: SampleFormat = SampleFormat::U32;$/;"	c
FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    const FORMAT: SampleFormat = SampleFormat::U64;$/;"	c
FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    const FORMAT: SampleFormat = SampleFormat::U8;$/;"	c
FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    const FORMAT: SampleFormat;$/;"	c
FORMATS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^        const FORMATS: [(SampleFormat, alsa::pcm::Format); 8] = [$/;"	c
FORMATS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    const FORMATS: [SampleFormat; 2] = [SampleFormat::I16, SampleFormat::F32];$/;"	c
FORMATTER	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^                static FORMATTER: RefCell<Option<Formatter>> = RefCell::new(None);$/;"	c
Fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^pub trait Fft<T: FftNum>: Length + Direction + Sync + Send {$/;"	t
FftControl	/opt/work/rust/tuner/src/main.rs	/^struct FftControl {$/;"	s
FftDirection	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^pub enum FftDirection {$/;"	g
FftError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^pub enum FftError {$/;"	g
FftNum	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/common.rs	/^pub trait FftNum: Copy + FromPrimitive + Signed + Sync + Send + Debug + 'static {}$/;"	t
FftPlanner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^pub struct FftPlanner<T: FftNum> {$/;"	s
FftPlannerAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^pub struct FftPlannerAvx<T: FftNum> {$/;"	s
FftPlannerAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^        pub struct FftPlannerAvx<T: FftNum> {$/;"	s
FftPlannerNeon	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^        pub struct FftPlannerNeon<T: FftNum> {$/;"	s
FftPlannerNeon	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^pub struct FftPlannerNeon<T: FftNum> {$/;"	s
FftPlannerScalar	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^pub struct FftPlannerScalar<T: FftNum> {$/;"	s
FftPlannerSse	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^        pub struct FftPlannerSse<T: FftNum> {$/;"	s
FftPlannerSse	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^pub struct FftPlannerSse<T: FftNum> {$/;"	s
Filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^pub struct Filter {$/;"	s
Filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/regex.rs	/^pub struct Filter {$/;"	s
Filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/string.rs	/^pub struct Filter {$/;"	s
Foo	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        struct Foo(u64);$/;"	s
Formatter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^pub struct Formatter {$/;"	s
FrameCount	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub type FrameCount = u32;$/;"	T
FrameType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/input_callback.rs	/^    type FrameType = (T, C);$/;"	T
FrameType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/output_callback.rs	/^    type FrameType = (T, C);$/;"	T
FullVector	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    type FullVector = __m256;$/;"	T
FullVector	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    type FullVector = __m256d;$/;"	T
FullVector	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    type FullVector: AvxVector256<HalfVector = Self>;$/;"	T
Get	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    struct Get<'k, 'v> {$/;"	s
GoodThomasAlgorithm	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^pub struct GoodThomasAlgorithm<T> {$/;"	s
GoodThomasAlgorithmSmall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^pub struct GoodThomasAlgorithmSmall<T> {$/;"	s
HZ_44100	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^                const HZ_44100: SampleRate = SampleRate(44_100);$/;"	c
HZ_44100	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^        const HZ_44100: SampleRate = SampleRate(44_100);$/;"	c
HalfVector	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    type HalfVector = __m128;$/;"	T
HalfVector	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    type HalfVector = __m128d;$/;"	T
HalfVector	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    type HalfVector: AvxVector128<FullVector = Self>;$/;"	T
HeapConsumer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/alias.rs	/^pub type HeapConsumer<T> = Consumer<T, Arc<HeapRb<T>>>;$/;"	T
HeapProducer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/alias.rs	/^pub type HeapProducer<T> = Producer<T, Arc<HeapRb<T>>>;$/;"	T
HeapRb	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/alias.rs	/^pub type HeapRb<T> = SharedRb<T, Vec<MaybeUninit<T>>>;$/;"	T
Host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^pub struct Host;$/;"	s
Host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^pub struct Host {$/;"	s
Host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^pub struct Host;$/;"	s
Host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^pub struct Host;$/;"	s
Host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^pub struct Host;$/;"	s
Host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^pub struct Host {$/;"	s
Host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^pub struct Host;$/;"	s
Host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^pub struct Host;$/;"	s
Host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^pub struct Host;$/;"	s
Host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^pub struct Host;$/;"	s
Host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub struct Host(HostInner);$/;"	s
HostId	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub enum HostId {$/;"	g
HostInner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub enum HostInner {$/;"	g
HostTrait	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^pub trait HostTrait {$/;"	t
HostUnavailable	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/error.rs	/^pub struct HostUnavailable;$/;"	s
IAudioClientWrapper	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^struct IAudioClientWrapper(Audio::IAudioClient);$/;"	s
INITIALIZED	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^const INITIALIZED: usize = 2;$/;"	c
INITIALIZING	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^const INITIALIZING: usize = 1;$/;"	c
IdRAII	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^            struct IdRAII(windows::core::PWSTR);$/;"	s
IndentWrapper	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^                struct IndentWrapper<'a, 'b: 'a> {$/;"	s
Inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^enum Inner {$/;"	g
InputCallbackInfo	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub struct InputCallbackInfo {$/;"	s
InputDevices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub type InputDevices<I> = std::iter::Filter<I, fn(&<I as Iterator>::Item) -> bool>;$/;"	T
InputStreamTimestamp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub struct InputStreamTimestamp {$/;"	s
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/enumerate.rs	/^    type Item = Device;$/;"	T
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^    type Item = Device;$/;"	T
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/enumerate.rs	/^    type Item = Device;$/;"	T
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/enumerate.rs	/^    type Item = Device;$/;"	T
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    type Item = Device;$/;"	T
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    type Item = Device;$/;"	T
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    type Item = SupportedStreamConfigRange;$/;"	T
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    type Item = Device;$/;"	T
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    type Item = Device;$/;"	T
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            type Item = Device;$/;"	T
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            type Item = crate::SupportedStreamConfigRange;$/;"	T
Item	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    type Item = T;$/;"	T
JACK_SAMPLE_FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^const JACK_SAMPLE_FORMAT: SampleFormat = SampleFormat::F32;$/;"	c
JackNotificationHandler	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^struct JackNotificationHandler {$/;"	s
Key	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^pub struct Key<'k> {$/;"	s
KeyValues	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^struct KeyValues<'a>(&'a dyn kv::Source);$/;"	s
LEVEL_PARSE_ERROR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static LEVEL_PARSE_ERROR: &str =$/;"	c
LOG_LEVEL_NAMES	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static LOG_LEVEL_NAMES: [&str; 6] = ["OFF", "ERROR", "WARN", "INFO", "DEBUG", "TRACE"];$/;"	c
Length	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^pub trait Length {$/;"	t
Level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub enum Level {$/;"	g
LevelEnum	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        struct LevelEnum;$/;"	s
LevelFilter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub enum LevelFilter {$/;"	g
LevelFilterEnum	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        struct LevelFilterEnum;$/;"	s
LevelFilterIdentifier	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        struct LevelFilterIdentifier;$/;"	s
LevelIdentifier	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^        struct LevelIdentifier;$/;"	s
LocalProcessHandler	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^struct LocalProcessHandler {$/;"	s
LocalRb	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^pub struct LocalRb<T, C: Container<T>> {$/;"	s
Log	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub trait Log: Sync + Send {$/;"	t
Logger	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub struct Logger {$/;"	s
MAX_BUFFER_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^const MAX_BUFFER_SIZE: u32 = u32::MAX;$/;"	c
MAX_BUFFER_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^const MAX_BUFFER_SIZE: u32 = u32::MAX;$/;"	c
MAX_CHANNELS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^const MAX_CHANNELS: u16 = 32;$/;"	c
MAX_CHANNELS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^const MAX_CHANNELS: u16 = 32;$/;"	c
MAX_LEVEL_INNER	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Debug;$/;"	c
MAX_LEVEL_INNER	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Error;$/;"	c
MAX_LEVEL_INNER	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Info;$/;"	c
MAX_LEVEL_INNER	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Off;$/;"	c
MAX_LEVEL_INNER	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Trace;$/;"	c
MAX_LEVEL_INNER	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        const MAX_LEVEL_INNER: LevelFilter = LevelFilter::Warn;$/;"	c
MAX_LOG_LEVEL_FILTER	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static MAX_LOG_LEVEL_FILTER: AtomicUsize = AtomicUsize::new(0);$/;"	c
MAX_RADER_PRIME_FACTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^const MAX_RADER_PRIME_FACTOR: usize = 23; \/\/ don't use Raders if the inner fft length has prime factor larger than this$/;"	c
MAX_RADER_PRIME_FACTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^const MAX_RADER_PRIME_FACTOR: usize = 23; \/\/ don't use Raders if the inner fft length has prime factor larger than this$/;"	c
MAX_RADER_PRIME_FACTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^const MAX_RADER_PRIME_FACTOR: usize = 23; \/\/ don't use Raders if the inner fft length has prime factor larger than this$/;"	c
MAX_SAMPLE_RATE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^const MAX_SAMPLE_RATE: SampleRate = SampleRate(96_000);$/;"	c
MAX_SAMPLE_RATE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^const MAX_SAMPLE_RATE: SampleRate = SampleRate(96_000);$/;"	c
MIN_BLUESTEIN_MIXED_RADIX_LEN	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^const MIN_BLUESTEIN_MIXED_RADIX_LEN: usize = 90; \/\/ only use mixed radix for the inner fft of Bluestein if length is larger than this$/;"	c
MIN_BLUESTEIN_MIXED_RADIX_LEN	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^const MIN_BLUESTEIN_MIXED_RADIX_LEN: usize = 90; \/\/ only use mixed radix for the inner fft of Bluestein if length is larger than this$/;"	c
MIN_BLUESTEIN_MIXED_RADIX_LEN	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^const MIN_BLUESTEIN_MIXED_RADIX_LEN: usize = 90; \/\/ only use mixed radix for the inner fft of Bluestein if length is larger than this$/;"	c
MIN_BUFFER_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^const MIN_BUFFER_SIZE: u32 = 1;$/;"	c
MIN_BUFFER_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^const MIN_BUFFER_SIZE: u32 = 1;$/;"	c
MIN_CHANNELS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^const MIN_CHANNELS: u16 = 1;$/;"	c
MIN_CHANNELS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^const MIN_CHANNELS: u16 = 1;$/;"	c
MIN_RADIX3_FACTORS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^const MIN_RADIX3_FACTORS: u32 = 4; \/\/ smallest number of factors of 3 to consider radix 4 an option is 3^4=81. any smaller and we want to use butterflies directly.$/;"	c
MIN_RADIX4_BITS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^const MIN_RADIX4_BITS: u32 = 6; \/\/ smallest size to consider radix 4 an option is 2^6 = 64$/;"	c
MIN_RADIX4_BITS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^const MIN_RADIX4_BITS: u32 = 5; \/\/ smallest size to consider radix 4 an option is 2^5 = 32$/;"	c
MIN_RADIX4_BITS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^const MIN_RADIX4_BITS: u32 = 6; \/\/ smallest size to consider radix 4 an option is 2^6 = 64$/;"	c
MIN_SAMPLE_RATE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^const MIN_SAMPLE_RATE: SampleRate = SampleRate(8_000);$/;"	c
MIN_SAMPLE_RATE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^const MIN_SAMPLE_RATE: SampleRate = SampleRate(8_000);$/;"	c
MaybeStaticStr	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^enum MaybeStaticStr<'a> {$/;"	g
Metadata	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct Metadata<'a> {$/;"	s
MetadataBuilder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct MetadataBuilder<'a> {$/;"	s
MixedRadix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/mixed_radix.rs	/^pub struct MixedRadix<T> {$/;"	s
MixedRadix11xnAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^pub struct MixedRadix11xnAvx<A: AvxNum, T> {$/;"	s
MixedRadix12xnAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^pub struct MixedRadix12xnAvx<A: AvxNum, T> {$/;"	s
MixedRadix16xnAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^pub struct MixedRadix16xnAvx<A: AvxNum, T> {$/;"	s
MixedRadix2xnAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^pub struct MixedRadix2xnAvx<A: AvxNum, T> {$/;"	s
MixedRadix3xnAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^pub struct MixedRadix3xnAvx<A: AvxNum, T> {$/;"	s
MixedRadix4xnAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^pub struct MixedRadix4xnAvx<A: AvxNum, T> {$/;"	s
MixedRadix5xnAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^pub struct MixedRadix5xnAvx<A: AvxNum, T> {$/;"	s
MixedRadix6xnAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^pub struct MixedRadix6xnAvx<A: AvxNum, T> {$/;"	s
MixedRadix7xnAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^pub struct MixedRadix7xnAvx<A: AvxNum, T> {$/;"	s
MixedRadix8xnAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^pub struct MixedRadix8xnAvx<A: AvxNum, T> {$/;"	s
MixedRadix9xnAvx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^pub struct MixedRadix9xnAvx<A: AvxNum, T> {$/;"	s
MixedRadixBase	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^enum MixedRadixBase {$/;"	g
MixedRadixPlan	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^pub struct MixedRadixPlan {$/;"	s
MixedRadixSmall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/mixed_radix.rs	/^pub struct MixedRadixSmall<T> {$/;"	s
MyRecordAsList	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            pub struct MyRecordAsList<'a> {$/;"	s
MyRecordAsMap	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            pub struct MyRecordAsMap<'a> {$/;"	s
N	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/skip.rs	/^    static N: usize = 10;$/;"	c
NOP	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        static NOP: NopLogger = NopLogger;$/;"	c
NUM_POWERS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^        const NUM_POWERS: usize = 5;$/;"	c
Neon32Butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^enum Neon32Butterfly<T> {$/;"	g
Neon32Radix4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^pub struct Neon32Radix4<T> {$/;"	s
Neon64Butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^enum Neon64Butterfly<T> {$/;"	g
Neon64Radix4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^pub struct Neon64Radix4<T> {$/;"	s
NeonArray	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^pub trait NeonArray {$/;"	t
NeonArrayMut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^pub trait NeonArrayMut {$/;"	t
NeonF32Butterfly1	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly1<T> {$/;"	s
NeonF32Butterfly10	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly10<T> {$/;"	s
NeonF32Butterfly11	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF32Butterfly11<T> {$/;"	s
NeonF32Butterfly12	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly12<T> {$/;"	s
NeonF32Butterfly13	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF32Butterfly13<T> {$/;"	s
NeonF32Butterfly15	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly15<T> {$/;"	s
NeonF32Butterfly16	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly16<T> {$/;"	s
NeonF32Butterfly17	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF32Butterfly17<T> {$/;"	s
NeonF32Butterfly19	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF32Butterfly19<T> {$/;"	s
NeonF32Butterfly2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly2<T> {$/;"	s
NeonF32Butterfly23	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF32Butterfly23<T> {$/;"	s
NeonF32Butterfly29	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF32Butterfly29<T> {$/;"	s
NeonF32Butterfly3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly3<T> {$/;"	s
NeonF32Butterfly31	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF32Butterfly31<T> {$/;"	s
NeonF32Butterfly32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly32<T> {$/;"	s
NeonF32Butterfly4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly4<T> {$/;"	s
NeonF32Butterfly5	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly5<T> {$/;"	s
NeonF32Butterfly6	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly6<T> {$/;"	s
NeonF32Butterfly7	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF32Butterfly7<T> {$/;"	s
NeonF32Butterfly8	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly8<T> {$/;"	s
NeonF32Butterfly9	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF32Butterfly9<T> {$/;"	s
NeonF64Butterfly1	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly1<T> {$/;"	s
NeonF64Butterfly10	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly10<T> {$/;"	s
NeonF64Butterfly11	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF64Butterfly11<T> {$/;"	s
NeonF64Butterfly12	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly12<T> {$/;"	s
NeonF64Butterfly13	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF64Butterfly13<T> {$/;"	s
NeonF64Butterfly15	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly15<T> {$/;"	s
NeonF64Butterfly16	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly16<T> {$/;"	s
NeonF64Butterfly17	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF64Butterfly17<T> {$/;"	s
NeonF64Butterfly19	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF64Butterfly19<T> {$/;"	s
NeonF64Butterfly2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly2<T> {$/;"	s
NeonF64Butterfly23	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF64Butterfly23<T> {$/;"	s
NeonF64Butterfly29	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF64Butterfly29<T> {$/;"	s
NeonF64Butterfly3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly3<T> {$/;"	s
NeonF64Butterfly31	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF64Butterfly31<T> {$/;"	s
NeonF64Butterfly32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly32<T> {$/;"	s
NeonF64Butterfly4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly4<T> {$/;"	s
NeonF64Butterfly5	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly5<T> {$/;"	s
NeonF64Butterfly6	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly6<T> {$/;"	s
NeonF64Butterfly7	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^pub struct NeonF64Butterfly7<T> {$/;"	s
NeonF64Butterfly8	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly8<T> {$/;"	s
NeonF64Butterfly9	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^pub struct NeonF64Butterfly9<T> {$/;"	s
NopLogger	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^struct NopLogger;$/;"	s
NotSendSyncAcrossAllPlatforms	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^struct NotSendSyncAcrossAllPlatforms(std::marker::PhantomData<*mut ()>);$/;"	s
OnePair	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        struct OnePair {$/;"	s
Output	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    type Output = Self;$/;"	T
OutputCallbackInfo	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub struct OutputCallbackInfo {$/;"	s
OutputDevices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub type OutputDevices<I> = std::iter::Filter<I, fn(&<I as Iterator>::Item) -> bool>;$/;"	T
OutputStreamTimestamp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub struct OutputStreamTimestamp {$/;"	s
ParseLevelError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct ParseLevelError(());$/;"	s
PartialFactors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^pub struct PartialFactors {$/;"	s
PauseStreamError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/error.rs	/^pub enum PauseStreamError {$/;"	g
PlayStreamError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/error.rs	/^pub enum PlayStreamError {$/;"	g
PollDescriptorsFlow	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^enum PollDescriptorsFlow {$/;"	g
PopIterator	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^pub struct PopIterator<'a, T, R: RbRef + ?Sized>$/;"	s
PostponedConsumer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^pub type PostponedConsumer<T, R> = Consumer<T, RbWrap<RbReadCache<T, R>>>;$/;"	T
PostponedProducer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^pub type PostponedProducer<T, R> = Producer<T, RbWrap<RbWriteCache<T, R>>>;$/;"	T
PrimeFactor	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^pub struct PrimeFactor {$/;"	s
PrimeFactors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^pub struct PrimeFactors {$/;"	s
Producer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^pub struct Producer<T, R: RbRef>$/;"	s
PropertyListenerCallbackWrapper	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/property_listener.rs	/^struct PropertyListenerCallbackWrapper(Box<dyn FnMut() -> ()>);$/;"	s
RATES	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^            const RATES: [libc::c_uint; 13] = [$/;"	c
RB_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/base.rs	/^const RB_SIZE: usize = 256;$/;"	c
RB_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/iter.rs	/^const RB_SIZE: usize = 1024;$/;"	c
RB_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/parts.rs	/^const RB_SIZE: usize = 256;$/;"	c
RB_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/slice.rs	/^const RB_SIZE: usize = 1024;$/;"	c
RB_SIZE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/lib.rs	/^const RB_SIZE: usize = 1;$/;"	c
RNG_SEED	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^const RNG_SEED: [u8; 32] = [$/;"	c
ROW_COUNT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^            const ROW_COUNT: usize = $row_count;$/;"	c
ROW_COUNT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^        const ROW_COUNT : usize = $row_count;$/;"	c
ROW_COUNT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^        const ROW_COUNT: usize = 16;$/;"	c
RadersAlgorithm	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/raders_algorithm.rs	/^pub struct RadersAlgorithm<T> {$/;"	s
RadersAvx2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^pub struct RadersAvx2<A: AvxNum, T> {$/;"	s
Radix3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix3.rs	/^pub struct Radix3<T> {$/;"	s
Radix4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix4.rs	/^pub struct Radix4<T> {$/;"	s
RawSlice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^pub struct RawSlice<T> {$/;"	s
RawSliceMut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^pub struct RawSliceMut<T> {$/;"	s
Rb	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    type Rb = B;$/;"	T
Rb	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    type Rb: ?Sized;$/;"	T
Rb	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^pub trait Rb<T>: RbRead<T> + RbWrite<T> {$/;"	t
RbBase	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^pub trait RbBase<T> {$/;"	t
RbRead	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^pub trait RbRead<T>: RbBase<T> {$/;"	t
RbReadCache	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^pub struct RbReadCache<T, R: RbRef>$/;"	s
RbRef	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^pub trait RbRef: Deref<Target = Self::Rb> {$/;"	t
RbWrap	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^pub struct RbWrap<B: ?Sized>(pub B);$/;"	s
RbWrite	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^pub trait RbWrite<T>: RbBase<T> {$/;"	t
RbWriteCache	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^pub struct RbWriteCache<T, R: RbRef>$/;"	s
RealFftPlanner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^pub struct RealFftPlanner<T: FftNum> {$/;"	s
RealToComplex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^pub trait RealToComplex<T>: Sync + Send {$/;"	t
RealToComplexEven	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^pub struct RealToComplexEven<T> {$/;"	s
RealToComplexOdd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^pub struct RealToComplexOdd<T> {$/;"	s
Recipe	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^pub enum Recipe {$/;"	g
Recipe	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^pub enum Recipe {$/;"	g
Recipe	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^pub enum Recipe {$/;"	g
Record	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct Record<'a> {$/;"	s
RecordBuilder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct RecordBuilder<'a> {$/;"	s
Res	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^type Res<T> = Result<T, FftError>;$/;"	T
Rotate90F32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub struct Rotate90F32 {$/;"	s
Rotate90F32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub struct Rotate90F32 {$/;"	s
Rotation90	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^pub struct Rotation90<V>(V);$/;"	s
RunContext	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^struct RunContext {$/;"	s
SAMPLE_RATES	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^const SAMPLE_RATES: [i32; 13] = [$/;"	c
SCALAR_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    const SCALAR_PER_VECTOR: usize = 2;$/;"	c
SCALAR_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    const SCALAR_PER_VECTOR: usize = 4;$/;"	c
SCALAR_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    const SCALAR_PER_VECTOR: usize = 8;$/;"	c
SCALAR_PER_VECTOR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    const SCALAR_PER_VECTOR: usize;$/;"	c
SET_LOGGER_ERROR	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static SET_LOGGER_ERROR: &str = "attempted to set a logger after the logging system \\$/;"	c
STATE	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static STATE: AtomicUsize = AtomicUsize::new(0);$/;"	c
STATIC_MAX_LEVEL	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub const STATIC_MAX_LEVEL: LevelFilter = MAX_LEVEL_INNER;$/;"	c
SUPPORTED_SAMPLE_FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^const SUPPORTED_SAMPLE_FORMAT: SampleFormat = SampleFormat::F32;$/;"	c
SUPPORTED_SAMPLE_FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^const SUPPORTED_SAMPLE_FORMAT: SampleFormat = SampleFormat::F32;$/;"	c
SUPPORTED_SAMPLE_FORMAT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^const SUPPORTED_SAMPLE_FORMAT: SampleFormat = SampleFormat::F32;$/;"	c
SampleFormat	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^pub enum SampleFormat {$/;"	g
SampleRate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub struct SampleRate(pub u32);$/;"	s
ScalarType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    type ScalarType = f32;$/;"	T
ScalarType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    type ScalarType = f64;$/;"	T
ScalarType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    type ScalarType: AvxNum<VectorType = Self>;$/;"	T
SerializerVisitor	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            struct SerializerVisitor<'a, S>(&'a mut S);$/;"	s
SetLoggerError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub struct SetLoggerError(());$/;"	s
SharedRb	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^pub struct SharedRb<T, C: Container<T>> {$/;"	s
SilenceAsioBuffer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^struct SilenceAsioBuffer {$/;"	s
SizedSample	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^pub trait SizedSample: Sample {$/;"	t
Source	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub trait Source {$/;"	t
Sse32Butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^enum Sse32Butterfly<T> {$/;"	g
Sse32Radix4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^pub struct Sse32Radix4<T> {$/;"	s
Sse64Butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^enum Sse64Butterfly<T> {$/;"	g
Sse64Radix4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^pub struct Sse64Radix4<T> {$/;"	s
SseArray	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^pub trait SseArray {$/;"	t
SseArrayMut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^pub trait SseArrayMut {$/;"	t
SseF32Butterfly1	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly1<T> {$/;"	s
SseF32Butterfly10	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly10<T> {$/;"	s
SseF32Butterfly11	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF32Butterfly11<T> {$/;"	s
SseF32Butterfly12	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly12<T> {$/;"	s
SseF32Butterfly13	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF32Butterfly13<T> {$/;"	s
SseF32Butterfly15	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly15<T> {$/;"	s
SseF32Butterfly16	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly16<T> {$/;"	s
SseF32Butterfly17	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF32Butterfly17<T> {$/;"	s
SseF32Butterfly19	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF32Butterfly19<T> {$/;"	s
SseF32Butterfly2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly2<T> {$/;"	s
SseF32Butterfly23	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF32Butterfly23<T> {$/;"	s
SseF32Butterfly29	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF32Butterfly29<T> {$/;"	s
SseF32Butterfly3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly3<T> {$/;"	s
SseF32Butterfly31	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF32Butterfly31<T> {$/;"	s
SseF32Butterfly32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly32<T> {$/;"	s
SseF32Butterfly4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly4<T> {$/;"	s
SseF32Butterfly5	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly5<T> {$/;"	s
SseF32Butterfly6	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly6<T> {$/;"	s
SseF32Butterfly7	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF32Butterfly7<T> {$/;"	s
SseF32Butterfly8	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly8<T> {$/;"	s
SseF32Butterfly9	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF32Butterfly9<T> {$/;"	s
SseF64Butterfly1	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly1<T> {$/;"	s
SseF64Butterfly10	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly10<T> {$/;"	s
SseF64Butterfly11	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF64Butterfly11<T> {$/;"	s
SseF64Butterfly12	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly12<T> {$/;"	s
SseF64Butterfly13	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF64Butterfly13<T> {$/;"	s
SseF64Butterfly15	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly15<T> {$/;"	s
SseF64Butterfly16	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly16<T> {$/;"	s
SseF64Butterfly17	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF64Butterfly17<T> {$/;"	s
SseF64Butterfly19	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF64Butterfly19<T> {$/;"	s
SseF64Butterfly2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly2<T> {$/;"	s
SseF64Butterfly23	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF64Butterfly23<T> {$/;"	s
SseF64Butterfly29	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF64Butterfly29<T> {$/;"	s
SseF64Butterfly3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly3<T> {$/;"	s
SseF64Butterfly31	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF64Butterfly31<T> {$/;"	s
SseF64Butterfly32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly32<T> {$/;"	s
SseF64Butterfly4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly4<T> {$/;"	s
SseF64Butterfly5	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly5<T> {$/;"	s
SseF64Butterfly6	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly6<T> {$/;"	s
SseF64Butterfly7	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^pub struct SseF64Butterfly7<T> {$/;"	s
SseF64Butterfly8	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly8<T> {$/;"	s
SseF64Butterfly9	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^pub struct SseF64Butterfly9<T> {$/;"	s
StaticConsumer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/alias.rs	/^pub type StaticConsumer<'a, T, const N: usize> = Consumer<T, &'a StaticRb<T, N>>;$/;"	T
StaticProducer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/alias.rs	/^pub type StaticProducer<'a, T, const N: usize> = Producer<T, &'a StaticRb<T, N>>;$/;"	T
StaticRb	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/alias.rs	/^pub type StaticRb<T, const N: usize> = SharedRb<T, [MaybeUninit<T>; N]>;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    type Stream = Stream;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^pub struct Stream {$/;"	s
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    type Stream = Stream;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^pub struct Stream {$/;"	s
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    type Stream = Stream;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^pub struct Stream {$/;"	s
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    type Stream = Stream;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^pub struct Stream {$/;"	s
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    type Stream = Stream;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^pub struct Stream {$/;"	s
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    type Stream = Stream;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^pub struct Stream {$/;"	s
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    type Stream = Stream;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^pub struct Stream;$/;"	s
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    type Stream = Stream;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^pub enum Stream {$/;"	g
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    type Stream = Stream;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^pub struct Stream {$/;"	s
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    type Stream = Stream;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^pub struct Stream {$/;"	s
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            type Stream = Stream;$/;"	T
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub struct Stream(StreamInner, crate::platform::NotSendSyncAcrossAllPlatforms);$/;"	s
Stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    type Stream: StreamTrait;$/;"	T
StreamConfig	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub struct StreamConfig {$/;"	s
StreamError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/error.rs	/^pub enum StreamError {$/;"	g
StreamId	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^pub struct StreamId(usize);$/;"	s
StreamInner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^struct StreamInner {$/;"	s
StreamInner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^struct StreamInner {$/;"	s
StreamInner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^struct StreamInner {$/;"	s
StreamInner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^pub struct StreamInner {$/;"	s
StreamInner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub enum StreamInner {$/;"	g
StreamInstant	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub struct StreamInstant {$/;"	s
StreamTrait	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^pub trait StreamTrait {$/;"	t
StreamType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^enum StreamType {$/;"	g
StreamVisitor	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            struct StreamVisitor<'a, 'b>(&'a mut value::Stream<'b>);$/;"	s
StreamWorkerContext	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^struct StreamWorkerContext {$/;"	s
Style	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^pub struct Style {$/;"	s
StyledValue	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^pub struct StyledValue<'a, T> {$/;"	s
SubtleStyle	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^type SubtleStyle = &'static str;$/;"	T
SubtleStyle	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^type SubtleStyle = StyledValue<'static, &'static str>;$/;"	T
SupportedBufferSize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub enum SupportedBufferSize {$/;"	g
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    type SupportedInputConfigs = SupportedInputConfigs;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^pub type SupportedInputConfigs = VecIntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^pub type SupportedInputConfigs = std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    type SupportedInputConfigs = SupportedInputConfigs;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/enumerate.rs	/^pub type SupportedInputConfigs = ::std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    type SupportedInputConfigs = SupportedInputConfigs;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/enumerate.rs	/^pub type SupportedInputConfigs = VecIntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    type SupportedInputConfigs = SupportedInputConfigs;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    type SupportedInputConfigs = SupportedInputConfigs;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^pub type SupportedInputConfigs = ::std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    type SupportedInputConfigs = SupportedInputConfigs;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^pub type SupportedInputConfigs = std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^pub type SupportedInputConfigs = std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    type SupportedInputConfigs = SupportedInputConfigs;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^pub struct SupportedInputConfigs;$/;"	s
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    type SupportedInputConfigs = SupportedInputConfigs;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^pub type SupportedInputConfigs = VecIntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    type SupportedInputConfigs = SupportedInputConfigs;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^pub type SupportedInputConfigs = std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    type SupportedInputConfigs = SupportedInputConfigs;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^pub type SupportedInputConfigs = ::std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            type SupportedInputConfigs = SupportedInputConfigs;$/;"	T
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub struct SupportedInputConfigs(SupportedInputConfigsInner);$/;"	s
SupportedInputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    type SupportedInputConfigs: Iterator<Item = SupportedStreamConfigRange>;$/;"	T
SupportedInputConfigsInner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        enum SupportedInputConfigsInner {$/;"	g
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    type SupportedOutputConfigs = SupportedOutputConfigs;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^pub type SupportedOutputConfigs = VecIntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^pub type SupportedOutputConfigs = std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    type SupportedOutputConfigs = SupportedOutputConfigs;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/enumerate.rs	/^pub type SupportedOutputConfigs = ::std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    type SupportedOutputConfigs = SupportedOutputConfigs;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/enumerate.rs	/^pub type SupportedOutputConfigs = VecIntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    type SupportedOutputConfigs = SupportedOutputConfigs;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    type SupportedOutputConfigs = SupportedOutputConfigs;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^pub type SupportedOutputConfigs = ::std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    type SupportedOutputConfigs = SupportedOutputConfigs;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^pub type SupportedOutputConfigs = std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^pub type SupportedOutputConfigs = std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    type SupportedOutputConfigs = SupportedOutputConfigs;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^pub struct SupportedOutputConfigs;$/;"	s
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    type SupportedOutputConfigs = SupportedOutputConfigs;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^pub type SupportedOutputConfigs = VecIntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    type SupportedOutputConfigs = SupportedOutputConfigs;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^pub type SupportedOutputConfigs = std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    type SupportedOutputConfigs = SupportedOutputConfigs;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^pub type SupportedOutputConfigs = ::std::vec::IntoIter<SupportedStreamConfigRange>;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            type SupportedOutputConfigs = SupportedOutputConfigs;$/;"	T
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub struct SupportedOutputConfigs(SupportedOutputConfigsInner);$/;"	s
SupportedOutputConfigs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    type SupportedOutputConfigs: Iterator<Item = SupportedStreamConfigRange>;$/;"	T
SupportedOutputConfigsInner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        enum SupportedOutputConfigsInner {$/;"	g
SupportedStreamConfig	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub struct SupportedStreamConfig {$/;"	s
SupportedStreamConfigRange	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^pub struct SupportedStreamConfigRange {$/;"	s
SupportedStreamConfigsError	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/error.rs	/^pub enum SupportedStreamConfigsError {$/;"	g
THE_BOOK_FOREWORD	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/message.rs	/^const THE_BOOK_FOREWORD: &str = r#"$/;"	c
TWIDDLES_PER_COLUMN	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^        const TWIDDLES_PER_COLUMN: usize = 15;$/;"	c
TWIDDLES_PER_COLUMN	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^        const TWIDDLES_PER_COLUMN: usize = 15;$/;"	c
TWIDDLES_PER_COLUMN	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^            const TWIDDLES_PER_COLUMN: usize = ROW_COUNT - 1;$/;"	c
TWIDDLES_PER_COLUMN	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^        const TWIDDLES_PER_COLUMN : usize = ROW_COUNT - 1;$/;"	c
TWIDDLES_PER_COLUMN	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^        const TWIDDLES_PER_COLUMN: usize = ROW_COUNT - 1;$/;"	c
TWIDDLE_COLS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^        const TWIDDLE_COLS: usize = $num_cols - $skip_cols;$/;"	c
TWIDDLE_COLS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^        const TWIDDLE_COLS: usize = $num_cols - $skip_cols;$/;"	c
TWIDDLE_ROWS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^        const TWIDDLE_ROWS: usize = $num_rows - 1;$/;"	c
TWIDDLE_ROWS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^        const TWIDDLE_ROWS: usize = $num_rows - 1;$/;"	c
TWIDDLE_VECTOR_COLS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^        const TWIDDLE_VECTOR_COLS: usize = TWIDDLE_COLS \/ 4;$/;"	c
TWIDDLE_VECTOR_COLS	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^        const TWIDDLE_VECTOR_COLS: usize = TWIDDLE_COLS \/ 2;$/;"	c
TWIDDLE_VECTOR_COUNT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^        const TWIDDLE_VECTOR_COUNT: usize = TWIDDLE_VECTOR_COLS * TWIDDLE_ROWS;$/;"	c
TWIDDLE_VECTOR_COUNT	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^        const TWIDDLE_VECTOR_COUNT: usize = TWIDDLE_VECTOR_COLS * TWIDDLE_ROWS;$/;"	c
Target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    type Target = Audio::WAVEFORMATEX;$/;"	T
Target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^pub enum Target {$/;"	g
Target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    type Target = B;$/;"	T
TestVisitor	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        struct TestVisitor {$/;"	s
Timestamp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^pub struct Timestamp {$/;"	s
TimestampPrecision	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^pub enum TimestampPrecision {$/;"	g
TimestampValue	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^        struct TimestampValue<'a>(&'a Timestamp);$/;"	s
ToKey	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^pub trait ToKey {$/;"	t
ToValue	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^pub trait ToValue {$/;"	t
TriggerReceiver	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^struct TriggerReceiver(libc::c_int);$/;"	s
TriggerSender	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^struct TriggerSender(libc::c_int);$/;"	s
UNINITIALIZED	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^const UNINITIALIZED: usize = 0;$/;"	c
USE_BUTTERFLY32_FROM	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^const USE_BUTTERFLY32_FROM: usize = 262144; \/\/ Use length 32 butterfly starting from this length$/;"	c
USE_BUTTERFLY32_FROM	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^const USE_BUTTERFLY32_FROM: usize = 262144; \/\/ Use length 32 butterfly starting from this length$/;"	c
Value	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^pub struct Value<'v> {$/;"	s
Value	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            type Value = Level;$/;"	T
Value	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            type Value = LevelFilter;$/;"	T
Var	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^struct Var<'a> {$/;"	s
VectorType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^    type VectorType = __m256;$/;"	T
VectorType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^    type VectorType = __m256d;$/;"	T
VectorType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^    type VectorType: AvxVector256<ScalarType = Self>;$/;"	T
VectorType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    type VectorType = float32x4_t;$/;"	T
VectorType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    type VectorType = float64x2_t;$/;"	T
VectorType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    type VectorType;$/;"	T
VectorType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    type VectorType = __m128;$/;"	T
VectorType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    type VectorType = __m128d;$/;"	T
VectorType	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    type VectorType;$/;"	T
VectorizedMultiplyMod	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^struct VectorizedMultiplyMod {$/;"	s
Visit	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^pub trait Visit<'v> {$/;"	t
Visitor	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub trait Visitor<'kvs> {$/;"	t
Visitor	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        struct Visitor<V>(V);$/;"	s
WaveFormat	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^enum WaveFormat {$/;"	g
WaveFormatExPtr	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^struct WaveFormatExPtr(*mut Audio::WAVEFORMATEX);$/;"	s
WriteStyle	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^pub enum WriteStyle {$/;"	g
__log_file	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! __log_file {$/;"	d
__log_format_args	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! __log_format_args {$/;"	d
__log_key	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! __log_key {$/;"	d
__log_line	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! __log_line {$/;"	d
__log_module_path	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! __log_module_path {$/;"	d
__private_api	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub mod __private_api {$/;"	m
__private_api_enabled	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn __private_api_enabled(level: Level, target: &str) -> bool {$/;"	f
__private_api_log	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn __private_api_log($/;"	f
_check	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn _check(_: &dyn Source) {}$/;"	f
_check	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn _check(_: &dyn Visitor) {}$/;"	f
add	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn add(&self, duration: Duration) -> Option<Self> {$/;"	f
add	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn add(left: Self, right: Self) -> Self {$/;"	f
add	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn add(left: Self, right: Self) -> Self;$/;"	f
add_disconnect_listener	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^fn add_disconnect_listener<E>($/;"	f
advance	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/parts.rs	/^fn advance(b: &mut Bencher) {$/;"	f
advance	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub unsafe fn advance(&mut self, count: usize) {$/;"	f
advance	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub unsafe fn advance(&mut self, count: usize) {$/;"	f
advance_head	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    unsafe fn advance_head(&self, count: usize) {$/;"	f
advance_postponed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/parts.rs	/^fn advance_postponed(b: &mut Bencher) {$/;"	f
advance_tail	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    unsafe fn advance_tail(&self, count: usize) {$/;"	f
apply_butterfly8_twiddle1	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^pub unsafe fn apply_butterfly8_twiddle1<V: AvxVector>(input: V, rotation: Rotation90<V>) -> V {$/;"	f
apply_butterfly8_twiddle3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^pub unsafe fn apply_butterfly8_twiddle3<V: AvxVector>(input: V, rotation: Rotation90<V>) -> V {$/;"	f
args	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn args(&mut self, args: fmt::Arguments<'a>) -> &mut RecordBuilder<'a> {$/;"	f
args	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn args(&self) -> &fmt::Arguments<'a> {$/;"	f
as_debug	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! as_debug {$/;"	d
as_display	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! as_display {$/;"	d
as_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! as_error {$/;"	d
as_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn as_inner(&self) -> &DeviceInner {$/;"	f
as_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn as_inner(&self) -> &DevicesInner {$/;"	f
as_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn as_inner(&self) -> &HostInner {$/;"	f
as_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn as_inner(&self) -> &StreamInner {$/;"	f
as_inner_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn as_inner_mut(&mut self) -> &mut DeviceInner {$/;"	f
as_inner_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn as_inner_mut(&mut self) -> &mut DevicesInner {$/;"	f
as_inner_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn as_inner_mut(&mut self) -> &mut HostInner {$/;"	f
as_inner_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn as_inner_mut(&mut self) -> &mut StreamInner {$/;"	f
as_list	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn as_list() {$/;"	f
as_list	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub fn as_list<S>(source: S) -> AsList<S>$/;"	f
as_list	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub mod as_list {$/;"	m
as_map	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn as_map() {$/;"	f
as_map	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub fn as_map<S>(source: S) -> AsMap<S>$/;"	f
as_map	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^pub mod as_map {$/;"	m
as_mut_ptr	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/storage.rs	/^    fn as_mut_ptr(&mut self) -> *mut MaybeUninit<T> {$/;"	f
as_mut_ptr	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^    pub fn as_mut_ptr(&self) -> *mut T {$/;"	f
as_mut_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/storage.rs	/^    fn as_mut_slice(&mut self) -> &mut [MaybeUninit<T>] {$/;"	f
as_mut_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/storage.rs	/^    fn as_mut_slice(&mut self) -> &mut [MaybeUninit<T>];$/;"	f
as_mut_slices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn as_mut_slices(&mut self) -> (&mut [T], &mut [T]) {$/;"	f
as_mut_slices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn as_mut_slices(&mut self) -> (&mut [T], &mut [T]) {$/;"	f
as_mut_uninit_slices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub unsafe fn as_mut_uninit_slices(&self) -> (&mut [MaybeUninit<T>], &mut [MaybeUninit<T>]) {$/;"	f
as_nanos	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    fn as_nanos(&self) -> i128 {$/;"	f
as_ptr	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    pub fn as_ptr(&self) -> *const Audio::WAVEFORMATEX {$/;"	f
as_ptr	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^    pub fn as_ptr(&self) -> *const T {$/;"	f
as_ref	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn as_ref(&self) -> &str {$/;"	f
as_serde	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! as_serde {$/;"	d
as_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn as_slice<T>(&self) -> Option<&[T]>$/;"	f
as_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/storage.rs	/^    pub unsafe fn as_slice(&self) -> &mut [MaybeUninit<T>] {$/;"	f
as_slice_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn as_slice_mut<T>(&mut self) -> Option<&mut [T]>$/;"	f
as_slices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn as_slices(&self) -> (&[T], &[T]) {$/;"	f
as_slices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn as_slices(&self) -> (&[T], &[T]) {$/;"	f
as_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    pub fn as_str(&self) -> &str {$/;"	f
as_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn as_str(&self) -> &'static str {$/;"	f
as_sval	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! as_sval {$/;"	d
as_uninit_slices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub unsafe fn as_uninit_slices(&self) -> (&[MaybeUninit<T>], &[MaybeUninit<T>]) {$/;"	f
asbd_from_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/mod.rs	/^fn asbd_from_config($/;"	f
asio_channel_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^unsafe fn asio_channel_slice<T>($/;"	f
asio_channel_slice_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^unsafe fn asio_channel_slice_mut<T>($/;"	f
asio_ns_to_double	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^fn asio_ns_to_double(val: sys::bindings::asio_import::ASIOTimeStamp) -> f64 {$/;"	f
assert_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^pub fn assert_f32<T: 'static>() {$/;"	f
assert_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^pub fn assert_f32<T: 'static>() {$/;"	f
assert_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^pub fn assert_f64<T: 'static>() {$/;"	f
assert_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^pub fn assert_f64<T: 'static>() {$/;"	f
assert_internally_consistent	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    fn assert_internally_consistent(prime_factors: &PrimeFactors) {$/;"	f
assert_is_log	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        fn assert_is_log<T: Log + ?Sized>() {}$/;"	f
audio_callback_fn	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^fn audio_callback_fn<D>($/;"	f
audio_context	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    pub fn audio_context(&self) -> &AudioContext {$/;"	f
audio_devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/enumerate.rs	/^unsafe fn audio_devices() -> Result<Vec<AudioDeviceID>, OSStatus> {$/;"	f
audio_test	/opt/work/rust/tuner/src/main.rs	/^    fn audio_test() {$/;"	f
audio_unit_from_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^fn audio_unit_from_device(device: &Device, input: bool) -> Result<AudioUnit, coreaudio::Error> {$/;"	f
available_hosts	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub fn available_hosts() -> Vec<HostId> {$/;"	f
avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^mod avx {$/;"	m
avx_planner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    pub mod avx_planner {$/;"	m
base_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn base_len(&self) -> usize {$/;"	f
bitreversed_transpose	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix3.rs	/^pub fn bitreversed_transpose<T: Copy>(height: usize, input: &[T], output: &mut [T]) {$/;"	f
bitreversed_transpose	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix4.rs	/^pub fn bitreversed_transpose<T: Copy>(height: usize, input: &[T], output: &mut [T]) {$/;"	f
blocking	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/message.rs	/^fn blocking() {$/;"	f
boilerplate_avx_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^macro_rules! boilerplate_avx_fft {$/;"	d
boilerplate_avx_fft_commondata	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^macro_rules! boilerplate_avx_fft_commondata {$/;"	d
boilerplate_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/common.rs	/^macro_rules! boilerplate_fft {$/;"	d
boilerplate_fft_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^macro_rules! boilerplate_fft_butterfly {$/;"	d
boilerplate_fft_neon_common_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^macro_rules! boilerplate_fft_neon_common_butterfly {$/;"	d
boilerplate_fft_neon_f32_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^macro_rules! boilerplate_fft_neon_f32_butterfly {$/;"	d
boilerplate_fft_neon_f64_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^macro_rules! boilerplate_fft_neon_f64_butterfly {$/;"	d
boilerplate_fft_neon_oop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^macro_rules! boilerplate_fft_neon_oop {$/;"	d
boilerplate_fft_oop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/common.rs	/^macro_rules! boilerplate_fft_oop {$/;"	d
boilerplate_fft_simd_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^macro_rules! boilerplate_fft_simd_butterfly {$/;"	d
boilerplate_fft_simd_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^macro_rules! boilerplate_fft_simd_butterfly {$/;"	d
boilerplate_fft_simd_butterfly_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^macro_rules! boilerplate_fft_simd_butterfly_with_scratch {$/;"	d
boilerplate_fft_simd_butterfly_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^macro_rules! boilerplate_fft_simd_butterfly_with_scratch {$/;"	d
boilerplate_fft_sse_common_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^macro_rules! boilerplate_fft_sse_common_butterfly {$/;"	d
boilerplate_fft_sse_f32_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^macro_rules! boilerplate_fft_sse_f32_butterfly {$/;"	d
boilerplate_fft_sse_f64_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^macro_rules! boilerplate_fft_sse_f64_butterfly {$/;"	d
boilerplate_fft_sse_oop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^macro_rules! boilerplate_fft_sse_oop {$/;"	d
boilerplate_mixedradix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^macro_rules! boilerplate_mixedradix {$/;"	d
boilerplate_sse_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^macro_rules! boilerplate_sse_fft {$/;"	d
boilerplate_sse_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^macro_rules! boilerplate_sse_fft {$/;"	d
bool	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn bool() -> impl Iterator<Item = Value<'static>> {$/;"	f
borrow	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn borrow(&self) -> &str {$/;"	f
boxed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^        pub fn boxed<E>(err: E) -> Self$/;"	f
broadcast_complex_elements	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn broadcast_complex_elements($/;"	f
broadcast_complex_elements	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn broadcast_complex_elements(value: Complex<Self::ScalarType>) -> Self {$/;"	f
broadcast_complex_elements	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn broadcast_complex_elements(value: Complex<Self::ScalarType>) -> Self;$/;"	f
broadcast_complex_elements	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn broadcast_complex_elements(value: Complex<f32>) -> Self {$/;"	f
broadcast_complex_elements	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn broadcast_complex_elements(value: Complex<f64>) -> Self {$/;"	f
broadcast_twiddle	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn broadcast_twiddle(index: usize, len: usize, direction: FftDirection) -> Self {$/;"	f
broadcast_twiddle	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn broadcast_twiddle(index: usize, len: usize, direction: FftDirection) -> Self;$/;"	f
btree_map	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn btree_map() {$/;"	f
buffer_duration_to_frames	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^fn buffer_duration_to_frames(buffer_duration: i64, sample_rate: u32) -> FrameCount {$/;"	f
buffer_size	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    fn buffer_size(&mut self, _: &jack::Client, size: jack::Frames) -> jack::Control {$/;"	f
buffer_size	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn buffer_size(&self) -> &SupportedBufferSize {$/;"	f
buffer_size_range_for_params	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^fn buffer_size_range_for_params($/;"	f
buffer_size_to_duration	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^fn buffer_size_to_duration(buffer_size: &BufferSize, sample_rate: u32) -> i64 {$/;"	f
buffer_time_step_secs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^fn buffer_time_step_secs(buffer_size_frames: usize, sample_rate: SampleRate) -> f64 {$/;"	f
build	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn build(&mut self) -> Filter {$/;"	f
build	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    pub fn build(&mut self) -> FormatFn {$/;"	f
build	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn build(&mut self) -> Logger {$/;"	f
build	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn build(&self) -> Metadata<'a> {$/;"	f
build	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn build(&self) -> Record<'a> {$/;"	f
build_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn build_fft(&mut self, recipe: &Recipe, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
build_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn build_fft(&mut self, recipe: &Recipe, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
build_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn build_fft(&mut self, recipe: &Recipe, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
build_input_stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^fn build_input_stream<D, E, C, T>($/;"	f
build_input_stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn build_input_stream<T, D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^    pub fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn build_input_stream_raw<D, E>($/;"	f
build_input_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn build_input_stream_raw<D, E>($/;"	f
build_new_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn build_new_fft(&mut self, recipe: &Recipe, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
build_new_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn build_new_fft(&mut self, recipe: &Recipe, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
build_new_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn build_new_fft(&mut self, recipe: &Recipe, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
build_output_stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^fn build_output_stream<D, E, C, T>($/;"	f
build_output_stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn build_output_stream<T, D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^    pub fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn build_output_stream_raw<D, E>($/;"	f
build_output_stream_raw	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn build_output_stream_raw<D, E>($/;"	f
build_stream_err	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^fn build_stream_err(e: sys::AsioError) -> BuildStreamError {$/;"	f
build_stream_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn build_stream_inner($/;"	f
builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn builder() -> Builder {$/;"	f
builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn builder() -> MetadataBuilder<'a> {$/;"	f
builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn builder() -> RecordBuilder<'a> {$/;"	f
builder_parse_env_overrides_existing_filters	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn builder_parse_env_overrides_existing_filters() {$/;"	f
butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn butterfly(butterfly_len: usize, radixes: Vec<u8>) -> Self {$/;"	f
butterfly_3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix3.rs	/^unsafe fn butterfly_3<T: FftNum>($/;"	f
butterfly_4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix4.rs	/^unsafe fn butterfly_4<T: FftNum>($/;"	f
butterfly_4_32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^unsafe fn butterfly_4_32<T: FftNum>($/;"	f
butterfly_4_32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^unsafe fn butterfly_4_32<T: FftNum>($/;"	f
butterfly_4_64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^unsafe fn butterfly_4_64<T: FftNum>($/;"	f
butterfly_4_64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^unsafe fn butterfly_4_64<T: FftNum>($/;"	f
bytes	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn bytes(&self) -> &[u8] {$/;"	f
bytes_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn bytes_mut(&mut self) -> &mut [u8] {$/;"	f
cached	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn cached(cached_len: usize) -> Self {$/;"	f
calc_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^macro_rules! calc_f32 {$/;"	d
calc_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^macro_rules! calc_f32 {$/;"	d
calc_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^macro_rules! calc_f64 {$/;"	d
calc_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^macro_rules! calc_f64 {$/;"	d
calc_sum	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^macro_rules! calc_sum {$/;"	d
calc_sum	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^macro_rules! calc_sum {$/;"	d
capacity	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn capacity(&self) -> usize {$/;"	f
capacity	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn capacity(&self) -> usize {$/;"	f
capacity	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/basic.rs	/^fn capacity() {$/;"	f
capacity_nonzero	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    fn capacity_nonzero(&self) -> NonZeroUsize;$/;"	f
capacity_nonzero	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^    fn capacity_nonzero(&self) -> NonZeroUsize {$/;"	f
capacity_nonzero	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^    fn capacity_nonzero(&self) -> NonZeroUsize {$/;"	f
capacity_nonzero	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^    fn capacity_nonzero(&self) -> NonZeroUsize {$/;"	f
capture_debug	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn capture_debug<T>(value: &'v T) -> Self$/;"	f
capture_display	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn capture_display<T>(value: &'v T) -> Self$/;"	f
capture_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn capture_error<T>(err: &'v T) -> Self$/;"	f
capture_serde	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn capture_serde<T>(value: &'v T) -> Self$/;"	f
capture_sval	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn capture_sval<T>(value: &'v T) -> Self$/;"	f
cast_slice_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^unsafe fn cast_slice_mut<T>(v: &mut [u8]) -> &mut [T] {$/;"	f
channels	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn channels(&self) -> ChannelCount {$/;"	f
char	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn char() -> impl Iterator<Item = Value<'static>> {$/;"	f
check_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^fn check_config($/;"	f
check_fft_algorithm	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^pub fn check_fft_algorithm<T: FftNum + Float + SampleUniform>($/;"	f
check_os_status	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/mod.rs	/^fn check_os_status(os_status: OSStatus) -> Result<(), BackendSpecificError> {$/;"	f
clear	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn clear(&mut self) -> usize {$/;"	f
clear	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn clear(&mut self) -> usize {$/;"	f
clear_pipe	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn clear_pipe(&self) {$/;"	f
clone	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn clone(&self) -> Level {$/;"	f
clone	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn clone(&self) -> LevelFilter {$/;"	f
cmp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn cmp(&self, other: &Self) -> cmp::Ordering {$/;"	f
cmp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn cmp(&self, other: &Level) -> cmp::Ordering {$/;"	f
cmp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn cmp(&self, other: &LevelFilter) -> cmp::Ordering {$/;"	f
cmp_default_heuristics	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn cmp_default_heuristics(&self, other: &Self) -> std::cmp::Ordering {$/;"	f
cmp_guid	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn cmp_guid(a: &GUID, b: &GUID) -> bool {$/;"	f
column_butterflies_and_transpose	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^    unsafe fn column_butterflies_and_transpose($/;"	f
column_butterflies_and_transpose	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^    unsafe fn column_butterflies_and_transpose($/;"	f
column_butterfly11	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly11(rows: [Self; 11], twiddles: [Self; 5]) -> [Self; 11] {$/;"	f
column_butterfly12	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly12($/;"	f
column_butterfly16	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly16($/;"	f
column_butterfly16_loadfn	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^macro_rules! column_butterfly16_loadfn{$/;"	d
column_butterfly2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly2(rows: [Self; 2]) -> [Self; 2] {$/;"	f
column_butterfly3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly3(rows: [Self; 3], twiddles: Self) -> [Self; 3] {$/;"	f
column_butterfly32_loadfn	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^macro_rules! column_butterfly32_loadfn{$/;"	d
column_butterfly4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly4(rows: [Self; 4], rotation: Rotation90<Self>) -> [Self; 4] {$/;"	f
column_butterfly4_negaterow3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly4_negaterow3($/;"	f
column_butterfly5	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly5(rows: [Self; 5], twiddles: [Self; 2]) -> [Self; 5] {$/;"	f
column_butterfly6	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly6(rows: [Self; 6], twiddles: Self) -> [Self; 6] {$/;"	f
column_butterfly6	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly6(rows: [Self; 6], twiddles: Self::FullVector) -> [Self; 6] {$/;"	f
column_butterfly7	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly7(rows: [Self; 7], twiddles: [Self; 3]) -> [Self; 7] {$/;"	f
column_butterfly8	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly8(rows: [Self; 8], rotation: Rotation90<Self>) -> [Self; 8] {$/;"	f
column_butterfly9	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn column_butterfly9($/;"	f
com_initialized	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/com.rs	/^pub fn com_initialized() {$/;"	f
commit	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^    pub fn commit(&mut self) {$/;"	f
compare_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn compare_complex(a: &[Complex<f64>], b: &[Complex<f64>]) -> f64 {$/;"	f
compare_exchange	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn compare_exchange($/;"	f
compare_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn compare_f64(a: &[f64], b: &[f64]) -> f64 {$/;"	f
compare_vectors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^pub fn compare_vectors<T: FftNum + Float>(vec1: &[Complex<T>], vec2: &[Complex<T>]) -> bool {$/;"	f
complex_to_real	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn complex_to_real() {$/;"	f
complex_to_real_errors_even	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn complex_to_real_errors_even() {$/;"	f
complex_to_real_errors_odd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn complex_to_real_errors_odd() {$/;"	f
compute	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn compute(len: usize) -> Self {$/;"	f
compute	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn compute(mut n: usize) -> Self {$/;"	f
compute_logarithm	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix3.rs	/^fn compute_logarithm(value: usize, base: usize) -> Option<usize> {$/;"	f
compute_twiddle	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^fn compute_twiddle<T: FftNum>(index: usize, fft_len: usize) -> Complex<T> {$/;"	f
compute_twiddle	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/twiddles.rs	/^pub fn compute_twiddle<T: FftNum>($/;"	f
config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn config(&self) -> StreamConfig {$/;"	f
config_to_waveformatextensible	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^fn config_to_waveformatextensible($/;"	f
configure_for_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^fn configure_for_device<D, C, I>($/;"	f
configure_for_recording	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^fn configure_for_recording(audio_unit: &mut AudioUnit) -> Result<(), coreaudio::Error> {$/;"	f
connect_to_system_inputs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    pub fn connect_to_system_inputs(&mut self) {$/;"	f
connect_to_system_outputs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    pub fn connect_to_system_outputs(&mut self) {$/;"	f
construct_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn construct_butterfly(&self, len: usize, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
construct_plan	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn construct_plan($/;"	f
contains_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/fft_cache.rs	/^    pub fn contains_fft(&self, len: usize, direction: FftDirection) -> bool {$/;"	f
copy_from_waveformatex_ptr	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    pub fn copy_from_waveformatex_ptr(ptr: *const Audio::WAVEFORMATEX) -> Option<Self> {$/;"	f
count	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            fn count(&self) -> usize {$/;"	f
count	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn count(&self) -> usize {$/;"	f
count	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn count() {$/;"	f
count	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn count(&self) -> usize {$/;"	f
count	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn count(&self) -> usize;$/;"	f
count	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn count() {$/;"	f
count	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/read_write.rs	/^fn count() {$/;"	f
create_audio_unit	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^fn create_audio_unit() -> Result<AudioUnit, coreaudio::Error> {$/;"	f
data	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    unsafe fn data(&self) -> &mut [MaybeUninit<T>];$/;"	f
data	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^    unsafe fn data(&self) -> &mut [MaybeUninit<T>] {$/;"	f
data	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^    unsafe fn data(&self) -> &mut [MaybeUninit<T>] {$/;"	f
data	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^    unsafe fn data(&self) -> &mut [MaybeUninit<T>] {$/;"	f
data_flow	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn data_flow(&self) -> Audio::EDataFlow {$/;"	f
data_flow_from_immendpoint	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^unsafe fn data_flow_from_immendpoint(endpoint: &Audio::IMMEndpoint) -> Audio::EDataFlow {$/;"	f
debug	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! debug {$/;"	d
debug_plan_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn debug_plan_fft(&self, len: usize, direction: FftDirection) -> MixedRadixPlan {$/;"	f
debug_plan_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn debug_plan_fft(&self, len: usize, direction: FftDirection) -> MixedRadixPlan;$/;"	f
default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/enumerate.rs	/^    fn default() -> Devices {$/;"	f
default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn default() -> Devices {$/;"	f
default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn default() -> Devices {$/;"	f
default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^    fn default() -> Self {$/;"	f
default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn default() -> Self {$/;"	f
default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn default() -> Self {$/;"	f
default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn default() -> Self {$/;"	f
default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn default() -> Self {$/;"	f
default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn default() -> Self {$/;"	f
default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/init.rs	/^    fn default() -> Self {$/;"	f
default_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn default_config($/;"	f
default_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn default_config($/;"	f
default_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    pub fn default_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_config_err	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^fn default_config_err(e: sys::AsioError) -> DefaultStreamConfigError {$/;"	f
default_config_error_from_os_status	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^        fn default_config_error_from_os_status($/;"	f
default_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^fn default_device(data_flow: Audio::EDataFlow) -> Option<Device> {$/;"	f
default_filter_or	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn default_filter_or<V>(mut self, default: V) -> Self$/;"	f
default_format	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn default_format(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_format	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn default_format(&mut self) -> &mut Self {$/;"	f
default_host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^    pub fn default_host() -> Host {$/;"	f
default_input_asbd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^fn default_input_asbd() -> Result<AudioStreamBasicDescription, coreaudio::Error> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^    pub fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    pub fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn default_input_config(&self) -> Result<crate::SupportedStreamConfig, crate::DefaultStreamConfigError> {$/;"	f
default_input_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn default_input_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError>;$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/enumerate.rs	/^pub fn default_input_device() -> Option<Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn default_input_device(&self) -> Option<Self::Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn default_input_device(&self) -> Option<Self::Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/enumerate.rs	/^pub fn default_input_device() -> Option<Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn default_input_device(&self) -> Option<Self::Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/enumerate.rs	/^pub fn default_input_device() -> Option<Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn default_input_device(&self) -> Option<Self::Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn default_input_device(&self) -> Option<Self::Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^fn default_input_device() -> Option<Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    pub fn default_input_device($/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    fn default_input_device(&self) -> Option<Self::Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn default_input_device(&self) -> Option<Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn default_input_device(&self) -> Option<Self::Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^pub fn default_input_device() -> Option<Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^    fn default_input_device(&self) -> Option<Self::Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn default_input_device(&self) -> Option<Self::Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^fn default_input_device() -> Option<Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn default_input_device(&self) -> Option<Self::Device> {$/;"	f
default_input_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn default_input_device(&self) -> Option<Self::Device>;$/;"	f
default_level_style	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn default_level_style(&self, level: Level) -> Style {$/;"	f
default_output_asbd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^fn default_output_asbd() -> Result<AudioStreamBasicDescription, coreaudio::Error> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^    pub fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    pub fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn default_output_config(&self) -> Result<crate::SupportedStreamConfig, crate::DefaultStreamConfigError> {$/;"	f
default_output_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn default_output_config(&self) -> Result<SupportedStreamConfig, DefaultStreamConfigError>;$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/enumerate.rs	/^pub fn default_output_device() -> Option<Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn default_output_device(&self) -> Option<Self::Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn default_output_device(&self) -> Option<Self::Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/enumerate.rs	/^pub fn default_output_device() -> Option<Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn default_output_device(&self) -> Option<Self::Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/enumerate.rs	/^pub fn default_output_device() -> Option<Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn default_output_device(&self) -> Option<Self::Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn default_output_device(&self) -> Option<Self::Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^fn default_output_device() -> Option<Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    pub fn default_output_device($/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    fn default_output_device(&self) -> Option<Self::Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn default_output_device(&self) -> Option<Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn default_output_device(&self) -> Option<Self::Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^pub fn default_output_device() -> Option<Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^    fn default_output_device(&self) -> Option<Self::Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn default_output_device(&self) -> Option<Self::Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^fn default_output_device() -> Option<Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn default_output_device(&self) -> Option<Self::Device> {$/;"	f
default_output_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn default_output_device(&self) -> Option<Self::Device>;$/;"	f
default_styled_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn default_styled_level(&self, level: Level) -> StyledValue<'static, Level> {$/;"	f
default_supported_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^fn default_supported_configs(is_output: bool) -> VecIntoIter<SupportedStreamConfigRange> {$/;"	f
default_write_style_or	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn default_write_style_or<V>(mut self, default: V) -> Self$/;"	f
deref	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn deref(&self) -> &B {$/;"	f
deref_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
deref_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn deref_mut(&mut self) -> &mut B {$/;"	f
derive_serialize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn derive_serialize() {$/;"	f
derive_stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn derive_stream() {$/;"	f
describe	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    fn describe() {}$/;"	f
deserialize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
design_butterfly_algorithm	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn design_butterfly_algorithm(&mut self, len: usize) -> Option<Arc<Recipe>> {$/;"	f
design_butterfly_algorithm	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn design_butterfly_algorithm(&mut self, len: usize) -> Option<Arc<Recipe>> {$/;"	f
design_butterfly_algorithm	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn design_butterfly_algorithm(&mut self, len: usize) -> Option<Arc<Recipe>> {$/;"	f
design_fft_for_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn design_fft_for_len(&mut self, len: usize) -> Arc<Recipe> {$/;"	f
design_fft_for_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn design_fft_for_len(&mut self, len: usize) -> Arc<Recipe> {$/;"	f
design_fft_for_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn design_fft_for_len(&mut self, len: usize) -> Arc<Recipe> {$/;"	f
design_fft_with_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn design_fft_with_factors(&mut self, len: usize, factors: PrimeFactors) -> Arc<Recipe> {$/;"	f
design_fft_with_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn design_fft_with_factors(&mut self, len: usize, factors: PrimeFactors) -> Arc<Recipe> {$/;"	f
design_fft_with_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn design_fft_with_factors(&mut self, len: usize, factors: PrimeFactors) -> Arc<Recipe> {$/;"	f
design_mixed_radix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn design_mixed_radix($/;"	f
design_mixed_radix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn design_mixed_radix($/;"	f
design_mixed_radix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn design_mixed_radix($/;"	f
design_prime	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn design_prime(&mut self, len: usize) -> Arc<Recipe> {$/;"	f
design_prime	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn design_prime(&mut self, len: usize) -> Arc<Recipe> {$/;"	f
design_prime	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn design_prime(&mut self, len: usize) -> Arc<Recipe> {$/;"	f
device_not_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^    fn device_not_available() -> Self {$/;"	f
device_not_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^    fn device_not_available() -> Self;$/;"	f
device_supported_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^fn device_supported_configs($/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn devices(&self) -> Result<Self::Devices, DevicesError> {$/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn devices(&self) -> Result<Self::Devices, DevicesError> {$/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn devices(&self) -> Result<Self::Devices, DevicesError> {$/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn devices(&self) -> Result<Self::Devices, DevicesError> {$/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn devices(&self) -> Result<Self::Devices, DevicesError> {$/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    fn devices(&self) -> Result<Self::Devices, DevicesError> {$/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn devices(&self) -> Result<Self::Devices, DevicesError> {$/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn devices(&self) -> Result<Self::Devices, DevicesError> {$/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^    fn devices(&self) -> Result<Self::Devices, DevicesError> {$/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn devices(&self) -> Result<Self::Devices, DevicesError> {$/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn devices(&self) -> Result<Self::Devices, crate::DevicesError> {$/;"	f
devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn devices(&self) -> Result<Self::Devices, DevicesError>;$/;"	f
dft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/dft.rs	/^    fn dft(signal: &[Complex<f32>], spectrum: &mut [Complex<f32>]) {$/;"	f
direction_of	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    pub fn direction_of(fft: &Butterfly3<T>) -> Self {$/;"	f
direction_of	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    pub fn direction_of(fft: &Butterfly6<T>) -> Self {$/;"	f
distinct_prime_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^pub fn distinct_prime_factors(mut n: u64) -> Vec<u64> {$/;"	f
div	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    fn div(self, rhs: T) -> Self {$/;"	f
divide_by	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn divide_by(&self, divisor: &PartialFactors) -> Option<PartialFactors> {$/;"	f
downcast_ref	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn downcast_ref<T: 'static>(&self) -> Option<&T> {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/property_listener.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/com.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^                fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^    fn drop(&mut self) {$/;"	f
drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/drop.rs	/^    fn drop(&mut self) {$/;"	f
duplicate_complex_components	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn duplicate_complex_components(self) -> (Self, Self) {$/;"	f
duplicate_complex_components	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn duplicate_complex_components(self) -> (Self, Self);$/;"	f
duplicate_hi_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub unsafe fn duplicate_hi_f32(values: float32x4_t) -> float32x4_t {$/;"	f
duplicate_hi_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub unsafe fn duplicate_hi_f32(values: __m128) -> __m128 {$/;"	f
duplicate_lo_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub unsafe fn duplicate_lo_f32(values: float32x4_t) -> float32x4_t {$/;"	f
duplicate_lo_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub unsafe fn duplicate_lo_f32(values: __m128) -> __m128 {$/;"	f
duration_since	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn duration_since(&self, earlier: &Self) -> Option<Duration> {$/;"	f
empty_full	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/basic.rs	/^fn empty_full() {$/;"	f
enabled	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn enabled(&self, metadata: &Metadata) -> bool {$/;"	f
enabled	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^fn enabled(directives: &[Directive], level: Level, target: &str) -> bool {$/;"	f
enabled	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn enabled(&self, metadata: &Metadata) -> bool {$/;"	f
enabled	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn enabled(&self, _: &Metadata) -> bool {$/;"	f
enabled	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn enabled(&self, metadata: &Metadata) -> bool {$/;"	f
enabled	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn enabled(&self, metadata: &Metadata) -> bool;$/;"	f
ensure_future_audio_client	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn ensure_future_audio_client($/;"	f
ensure_tests_cover_level_universe	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn ensure_tests_cover_level_universe() {$/;"	f
env_get_filter_reads_from_default_if_var_not_set	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn env_get_filter_reads_from_default_if_var_not_set() {$/;"	f
env_get_filter_reads_from_var_if_set	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn env_get_filter_reads_from_var_if_set() {$/;"	f
env_get_write_style_reads_from_default_if_var_not_set	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn env_get_write_style_reads_from_default_if_var_not_set() {$/;"	f
env_get_write_style_reads_from_var_if_set	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn env_get_write_style_reads_from_var_if_set() {$/;"	f
eq	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn eq(&self, other: &Device) -> bool {$/;"	f
eq	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn eq(&self, other: &Key<'ko>) -> bool {$/;"	f
eq	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn eq(&self, other: &Level) -> bool {$/;"	f
eq	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn eq(&self, other: &LevelFilter) -> bool {$/;"	f
eq_ignore_ascii_case	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^fn eq_ignore_ascii_case(a: &str, b: &str) -> bool {$/;"	f
err_fn	/opt/work/rust/tuner/src/main.rs	/^    fn err_fn(err: cpal::StreamError) {$/;"	f
err_fn	/opt/work/rust/tuner/src/main.rs	/^    pub fn err_fn(err: cpal::StreamError) {$/;"	f
error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! error {$/;"	d
error_fn	/opt/work/rust/tuner/src/main.rs	/^    fn error_fn(err: cpal::StreamError) {$/;"	f
expecting	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
extract_hi_hi_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub unsafe fn extract_hi_hi_f32(left: float32x4_t, right: float32x4_t) -> float32x4_t {$/;"	f
extract_hi_hi_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub unsafe fn extract_hi_hi_f32(left: __m128, right: __m128) -> __m128 {$/;"	f
extract_hi_lo_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub unsafe fn extract_hi_lo_f32(left: float32x4_t, right: float32x4_t) -> float32x4_t {$/;"	f
extract_hi_lo_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub unsafe fn extract_hi_lo_f32(left: __m128, right: __m128) -> __m128 {$/;"	f
extract_lo_hi_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub unsafe fn extract_lo_hi_f32(left: float32x4_t, right: float32x4_t) -> float32x4_t {$/;"	f
extract_lo_hi_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub unsafe fn extract_lo_hi_f32(left: __m128, right: __m128) -> __m128 {$/;"	f
extract_lo_lo_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub unsafe fn extract_lo_lo_f32(left: float32x4_t, right: float32x4_t) -> float32x4_t {$/;"	f
extract_lo_lo_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub unsafe fn extract_lo_lo_f32(left: __m128, right: __m128) -> __m128 {$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^            fn fft_direction(&self) -> FftDirection {$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    fn fft_direction(&self) -> FftDirection {$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^            fn fft_direction(&self) -> FftDirection {$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^            fn fft_direction(&self) -> FftDirection {$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^            fn fft_direction(&self) -> FftDirection {$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/common.rs	/^            fn fft_direction(&self) -> FftDirection {$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    fn fft_direction(&self) -> FftDirection;$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^            fn fft_direction(&self) -> FftDirection {$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^            fn fft_direction(&self) -> FftDirection {$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^            fn fft_direction(&self) -> FftDirection {$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^            fn fft_direction(&self) -> FftDirection {$/;"	f
fft_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^    fn fft_direction(&self) -> FftDirection {$/;"	f
fft_error_inplace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/common.rs	/^pub fn fft_error_inplace($/;"	f
fft_error_outofplace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/common.rs	/^pub fn fft_error_outofplace($/;"	f
file	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn file(&mut self, file: Option<&'a str>) -> &mut RecordBuilder<'a> {$/;"	f
file	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn file(&self) -> Option<&'a str> {$/;"	f
file_static	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn file_static(&mut self, file: Option<&'static str>) -> &mut RecordBuilder<'a> {$/;"	f
file_static	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn file_static(&self) -> Option<&'static str> {$/;"	f
fill_bluesteins_twiddles	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/twiddles.rs	/^pub fn fill_bluesteins_twiddles<T: FftNum>($/;"	f
filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn filter(&mut self, module: Option<&str>, level: LevelFilter) -> &mut Self {$/;"	f
filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn filter(&self) -> LevelFilter {$/;"	f
filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter(&mut self, module: Option<&str>, level: LevelFilter) -> &mut Self {$/;"	f
filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter(&self) -> LevelFilter {$/;"	f
filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter<E>(mut self, filter_env: E) -> Self$/;"	f
filter_beginning_longest_match	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn filter_beginning_longest_match() {$/;"	f
filter_info	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn filter_info() {$/;"	f
filter_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn filter_level(&mut self, level: LevelFilter) -> &mut Self {$/;"	f
filter_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter_level(&mut self, level: LevelFilter) -> &mut Self {$/;"	f
filter_module	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn filter_module(&mut self, module: &str, level: LevelFilter) -> &mut Self {$/;"	f
filter_module	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter_module(&mut self, module: &str, level: LevelFilter) -> &mut Self {$/;"	f
filter_or	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn filter_or<E, V>(mut self, filter_env: E, default: V) -> Self$/;"	f
finalize_bluesteins	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^    unsafe fn finalize_bluesteins($/;"	f
finalize_raders	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^    unsafe fn finalize_raders(&self, input: &[Complex<A>], output: &mut [Complex<A>]) {$/;"	f
finish_header	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn finish_header(&mut self) -> io::Result<()> {$/;"	f
float	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn float() -> impl Iterator<Item = Value<'static>> {$/;"	f
flush	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^                    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
flush	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn flush(&self) {}$/;"	f
flush	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn flush(&self) {$/;"	f
flush	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn flush(&self) {}$/;"	f
flush	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn flush(&self);$/;"	f
flush	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	f
fmadd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn fmadd(left: Self, right: Self, add: Self) -> Self {$/;"	f
fmadd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn fmadd(left: Self, right: Self, add: Self) -> Self;$/;"	f
fmaddsub	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn fmaddsub(left: Self, right: Self, add: Self) -> Self {$/;"	f
fmaddsub	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn fmaddsub(left: Self, right: Self, add: Self) -> Self;$/;"	f
fmsubadd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn fmsubadd(left: Self, right: Self, add: Self) -> Self {$/;"	f
fmsubadd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn fmsubadd(left: Self, right: Self, add: Self) -> Self;$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/regex.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/string.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^            fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^                fn fmt(&self, f: &mut fmt::Formatter)->fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> Result<(), ::std::fmt::Error> {$/;"	f
fmt_internal	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn fmt_internal(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fn	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    const fn new(v: usize) -> AtomicUsize {$/;"	c
fnmadd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn fnmadd(left: Self, right: Self, add: Self) -> Self {$/;"	f
fnmadd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn fnmadd(left: Self, right: Self, add: Self) -> Self;$/;"	f
forall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^        fn forall<T: Log + ?Sized>() {$/;"	f
format	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format<F: 'static>(&mut self, format: F) -> &mut Self$/;"	f
format_empty_target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_empty_target() {$/;"	f
format_from_waveformatex_ptr	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^unsafe fn format_from_waveformatex_ptr($/;"	f
format_indent	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_indent(&mut self, indent: Option<usize>) -> &mut Self {$/;"	f
format_indent_spaces	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_indent_spaces() {$/;"	f
format_indent_spaces_no_header	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_indent_spaces_no_header() {$/;"	f
format_indent_zero_spaces	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_indent_zero_spaces() {$/;"	f
format_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_level(&mut self, write: bool) -> &mut Self {$/;"	f
format_module_path	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_module_path(&mut self, write: bool) -> &mut Self {$/;"	f
format_no_header	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_no_header() {$/;"	f
format_no_target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_no_target() {$/;"	f
format_suffix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_suffix() {$/;"	f
format_suffix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_suffix(&mut self, suffix: &'static str) -> &mut Self {$/;"	f
format_suffix_with_indent	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_suffix_with_indent() {$/;"	f
format_target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_target() {$/;"	f
format_target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_target(&mut self, write: bool) -> &mut Self {$/;"	f
format_timestamp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_timestamp(&mut self, timestamp: Option<fmt::TimestampPrecision>) -> &mut Self {$/;"	f
format_timestamp_micros	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_timestamp_micros(&mut self) -> &mut Self {$/;"	f
format_timestamp_millis	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_timestamp_millis(&mut self) -> &mut Self {$/;"	f
format_timestamp_nanos	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_timestamp_nanos(&mut self) -> &mut Self {$/;"	f
format_timestamp_secs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn format_timestamp_secs(&mut self) -> &mut Self {$/;"	f
format_with_header	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn format_with_header() {$/;"	f
frames_to_duration	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn frames_to_duration(frames: usize, rate: crate::SampleRate) -> std::time::Duration {$/;"	f
frames_to_duration	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^fn frames_to_duration(frames: usize, rate: crate::SampleRate) -> std::time::Duration {$/;"	f
frames_to_duration	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/mod.rs	/^fn frames_to_duration(frames: usize, rate: crate::SampleRate) -> std::time::Duration {$/;"	f
frames_to_duration	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^fn frames_to_duration(frames: usize, rate: usize) -> std::time::Duration {$/;"	f
frames_to_duration	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^fn frames_to_duration(frames: usize, rate: crate::SampleRate) -> std::time::Duration {$/;"	f
frames_to_duration	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn frames_to_duration(frames: u32, rate: crate::SampleRate) -> std::time::Duration {$/;"	f
free_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn free_len(&self) -> usize {$/;"	f
free_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn free_len(&self) -> usize {$/;"	f
free_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn free_len(&self) -> usize {$/;"	f
free_space_as_slices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub unsafe fn free_space_as_slices($/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/enumerate.rs	/^    fn from(err: alsa::Error) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn from(err: alsa::Error) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/mod.rs	/^    fn from(err: coreaudio::Error) -> BuildStreamError {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/mod.rs	/^    fn from(err: coreaudio::Error) -> DefaultStreamConfigError {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/mod.rs	/^    fn from(err: coreaudio::Error) -> SupportedStreamConfigsError {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/convert.rs	/^    fn from(error: oboe::Error) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn from(device: Audio::IMMDevice) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^    fn from(error: windows::core::Error) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    fn from(conf: SupportedStreamConfig) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^                fn from(h: crate::host::$host_mod::Device) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^                fn from(h: crate::host::$host_mod::Devices) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^                fn from(h: crate::host::$host_mod::Host) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^                fn from(h: crate::host::$host_mod::Stream) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn from(d: DeviceInner) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn from(d: DevicesInner) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn from(h: HostInner) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn from(s: StreamInner) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn from(target: Target) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn from(filter_env: T) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^        fn from(err: io::Error) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    fn from(_: fmt::Error) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn from(s: &'k str) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^                fn from(value: $into_ty) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^                fn from(value: std::num::$into_ty) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        fn from(v: &'v String) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from(v: &'v std::num::NonZeroI128) -> Value<'v> {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from(v: &'v std::num::NonZeroU128) -> Value<'v> {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from(value: &'v i128) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from(value: &'v str) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from(value: &'v u128) -> Self {$/;"	f
from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/read_write.rs	/^fn from() {$/;"	f
from_any	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_any<T>(value: &'v T) -> Self$/;"	f
from_be	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^fn from_be<T: PrimInt>(t: T) -> T {$/;"	f
from_debug	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_debug<T>(value: &'v T) -> Self$/;"	f
from_default_env	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn from_default_env() -> Self {$/;"	f
from_display	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_display<T>(value: &'v T) -> Self$/;"	f
from_dyn_debug	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_dyn_debug(value: &'v dyn fmt::Debug) -> Self {$/;"	f
from_dyn_display	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_dyn_display(value: &'v dyn fmt::Display) -> Self {$/;"	f
from_dyn_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_dyn_error(err: &'v (dyn std::error::Error + 'static)) -> Self {$/;"	f
from_dyn_sval	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_dyn_sval(value: &'v dyn self::sval::value::Value) -> Self {$/;"	f
from_env	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn from_env(env: &str) -> Builder {$/;"	f
from_env	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn from_env<'a, E>(env: E) -> Self$/;"	f
from_env	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn from_env<'a, E>(env: E) -> Builder$/;"	f
from_immdevice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn from_immdevice(device: Audio::IMMDevice) -> Self {$/;"	f
from_le	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^fn from_le<T: PrimInt>(t: T) -> T {$/;"	f
from_nanos	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    fn from_nanos(nanos: i64) -> Self {$/;"	f
from_nanos_i128	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    fn from_nanos_i128(nanos: i128) -> Option<Self> {$/;"	f
from_raw_parts	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^    pub unsafe fn from_raw_parts(container: C, head: usize, tail: usize) -> Self {$/;"	f
from_raw_parts	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^    pub unsafe fn from_raw_parts(container: C, head: usize, tail: usize) -> Self {$/;"	f
from_secs_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    fn from_secs_f64(secs: f64) -> crate::StreamInstant {$/;"	f
from_serde	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_serde<T>(value: &'v T) -> Self$/;"	f
from_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    pub fn from_str(key: &'k str) -> Self {$/;"	f
from_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn from_str(level: &str) -> Result<Level, Self::Err> {$/;"	f
from_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn from_str(level: &str) -> Result<LevelFilter, Self::Err> {$/;"	f
from_sval	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn from_sval<T>(value: &'v T) -> Self$/;"	f
from_usize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn from_usize(u: usize) -> Option<Level> {$/;"	f
from_usize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn from_usize(u: usize) -> Option<LevelFilter> {$/;"	f
from_value_bag	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn from_value_bag<T>(value: T) -> Self$/;"	f
gather32_complex_avx2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn gather32_complex_avx2($/;"	f
gather32_complex_avx2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn gather32_complex_avx2(ptr: *const Complex<f32>, indexes: __m128i) -> Self {$/;"	f
gather32_complex_avx2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn gather32_complex_avx2(ptr: *const Complex<f64>, indexes: __m128i) -> Self {$/;"	f
gather64_complex_avx2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn gather64_complex_avx2($/;"	f
gather64_complex_avx2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn gather64_complex_avx2(ptr: *const Complex<f32>, indexes: __m128i) -> Self {$/;"	f
gather64_complex_avx2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn gather64_complex_avx2(ptr: *const Complex<f64>, indexes: __m128i) -> Self {$/;"	f
gather_complex_avx2_index32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn gather_complex_avx2_index32($/;"	f
gather_complex_avx2_index64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn gather_complex_avx2_index64($/;"	f
ge	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn ge(&self, other: &Level) -> bool {$/;"	f
ge	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn ge(&self, other: &LevelFilter) -> bool {$/;"	f
gen_butterfly_twiddles_interleaved_columns	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^macro_rules! gen_butterfly_twiddles_interleaved_columns {$/;"	d
gen_butterfly_twiddles_interleaved_columns	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^macro_rules! gen_butterfly_twiddles_interleaved_columns {$/;"	d
gen_butterfly_twiddles_separated_columns	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^macro_rules! gen_butterfly_twiddles_separated_columns {$/;"	d
gen_butterfly_twiddles_separated_columns	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^macro_rules! gen_butterfly_twiddles_separated_columns {$/;"	d
generate_sin	/opt/work/rust/tuner/src/main.rs	/^fn generate_sin(total_samples: usize, indata: &mut Vec<f32>, step: f32) {$/;"	f
get	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn get(&self) -> Option<String> {$/;"	f
get	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	f
get	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn get() {$/;"	f
get	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	f
get	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn get() {$/;"	f
get	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn get<'v>(&'v self, key: Key) -> Option<Value<'v>> {$/;"	f
get	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn get<'v>(&'v self, key: Key) -> Option<Value<'v>>;$/;"	f
get	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn get(&self) -> &'a str {$/;"	f
get	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/fft_cache.rs	/^    pub fn get(&self, len: usize, direction: FftDirection) -> Option<Arc<dyn Fft<T>>> {$/;"	f
get_audio_clock	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^unsafe fn get_audio_clock($/;"	f
get_audio_record_min_buffer_size	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/android_media.rs	/^pub fn get_audio_record_min_buffer_size(sample_rate: i32, channel_mask: i32, format: i32) -> i32 {$/;"	f
get_audio_track_min_buffer_size	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/android_media.rs	/^pub fn get_audio_track_min_buffer_size(sample_rate: i32, channel_mask: i32, format: i32) -> i32 {$/;"	f
get_available_frames	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn get_available_frames(stream: &StreamInner) -> Result<u32, StreamError> {$/;"	f
get_bin_frequency	/opt/work/rust/tuner/src/main.rs	/^fn get_bin_frequency(sample_interval_sec: f32, total_samples: f32) -> f32 {$/;"	f
get_client	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^fn get_client(name: &str, client_options: jack::ClientOptions) -> Result<jack::Client, String> {$/;"	f
get_client_options	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^fn get_client_options(start_server_automatically: bool) -> jack::ClientOptions {$/;"	f
get_distinct_factor_count	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_distinct_factor_count(&self) -> u32 {$/;"	f
get_dominate_freq	/opt/work/rust/tuner/src/main.rs	/^fn get_dominate_freq(spectrum: &mut Vec<Complex<f32>>, bin_freq: f32) -> f32 {$/;"	f
get_dominate_freq_old	/opt/work/rust/tuner/src/main.rs	/^pub fn get_dominate_freq_old(spectrum: &mut Vec<Complex<f32>>, bin_freq: f32) -> f32 {$/;"	f
get_filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn get_filter(&self) -> Option<String> {$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^            fn get_inplace_scratch_len(&self) -> usize {$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    fn get_inplace_scratch_len(&self) -> usize {$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^            fn get_inplace_scratch_len(&self) -> usize {$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^            fn get_inplace_scratch_len(&self) -> usize {$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^            fn get_inplace_scratch_len(&self) -> usize {$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/common.rs	/^            fn get_inplace_scratch_len(&self) -> usize {$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    fn get_inplace_scratch_len(&self) -> usize;$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^            fn get_inplace_scratch_len(&self) -> usize {$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^            fn get_inplace_scratch_len(&self) -> usize {$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^            fn get_inplace_scratch_len(&self) -> usize {$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^            fn get_inplace_scratch_len(&self) -> usize {$/;"	f
get_inplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^    fn get_inplace_scratch_len(&self) -> usize {$/;"	f
get_io_buffer_frame_size_range	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^fn get_io_buffer_frame_size_range($/;"	f
get_min_buffer_size	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/android_media.rs	/^fn get_min_buffer_size($/;"	f
get_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn get_mut($/;"	f
get_occupied_slices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/parts.rs	/^fn get_occupied_slices(b: &mut Bencher) {$/;"	f
get_or_create_input_stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^    fn get_or_create_input_stream($/;"	f
get_or_create_output_stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^    fn get_or_create_output_stream($/;"	f
get_other_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_other_factors(&self) -> &[PrimeFactor] {$/;"	f
get_other_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_other_factors(&self) -> usize {$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^            fn get_outofplace_scratch_len(&self) -> usize {$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    fn get_outofplace_scratch_len(&self) -> usize {$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^            fn get_outofplace_scratch_len(&self) -> usize {$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^            fn get_outofplace_scratch_len(&self) -> usize {$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^            fn get_outofplace_scratch_len(&self) -> usize {$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/common.rs	/^            fn get_outofplace_scratch_len(&self) -> usize {$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    fn get_outofplace_scratch_len(&self) -> usize;$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^            fn get_outofplace_scratch_len(&self) -> usize {$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^            fn get_outofplace_scratch_len(&self) -> usize {$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^            fn get_outofplace_scratch_len(&self) -> usize {$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^            fn get_outofplace_scratch_len(&self) -> usize {$/;"	f
get_outofplace_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^    fn get_outofplace_scratch_len(&self) -> usize {$/;"	f
get_power11	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_power11(&self) -> u32 {$/;"	f
get_power2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_power2(&self) -> u32 {$/;"	f
get_power3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_power3(&self) -> u32 {$/;"	f
get_power5	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_power5(&self) -> u32 {$/;"	f
get_power7	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_power7(&self) -> u32 {$/;"	f
get_power_of_three	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_power_of_three(&self) -> u32 {$/;"	f
get_power_of_two	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_power_of_two(&self) -> u32 {$/;"	f
get_product	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_product(&self) -> usize {$/;"	f
get_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn get_scratch_len(&self) -> usize {$/;"	f
get_scratch_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn get_scratch_len(&self) -> usize;$/;"	f
get_total_factor_count	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn get_total_factor_count(&self) -> u32 {$/;"	f
get_vacant_slices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/parts.rs	/^fn get_vacant_slices(b: &mut Bencher) {$/;"	f
get_write_style	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn get_write_style(&self) -> Option<String> {$/;"	f
gt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn gt(&self, other: &Level) -> bool {$/;"	f
gt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn gt(&self, other: &LevelFilter) -> bool {$/;"	f
hadd_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn hadd_complex(self) -> Complex<Self::ScalarType> {$/;"	f
hadd_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn hadd_complex(self) -> Complex<Self::ScalarType>;$/;"	f
half_root2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn half_root2() -> Self {$/;"	f
half_root2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn half_root2() -> Self; \/\/ an entire vector filled with 0.5.sqrt()$/;"	f
hash	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	f
hash	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn hash<H>(&self, state: &mut H)$/;"	f
hash_map	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn hash_map() {$/;"	f
head	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    fn head(&self) -> usize;$/;"	f
head	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^    fn head(&self) -> usize {$/;"	f
head	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^    fn head(&self) -> usize {$/;"	f
head	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^    fn head(&self) -> usize {$/;"	f
head_tail	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/basic.rs	/^fn head_tail<T>(ring_buffer: &HeapRb<T>) -> (usize, usize) {$/;"	f
hi	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn hi(input: Self::FullVector) -> Self {$/;"	f
hi	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn hi(input: Self::FullVector) -> Self;$/;"	f
hi	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn hi(self) -> Self::HalfVector {$/;"	f
hi	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn hi(self) -> Self::HalfVector;$/;"	f
host_from_id	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^        pub fn host_from_id(id: HostId) -> Result<Host, crate::HostUnavailable> {$/;"	f
host_time_to_stream_instant	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/mod.rs	/^fn host_time_to_stream_instant($/;"	f
id	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn id(&self) -> HostId {$/;"	f
immendpoint_from_immdevice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^unsafe fn immendpoint_from_immdevice(device: Audio::IMMDevice) -> Audio::IMMEndpoint {$/;"	f
imp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/atty.rs	/^mod imp {$/;"	m
impl_platform_host	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^macro_rules! impl_platform_host {$/;"	d
impl_styled_value_fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^macro_rules! impl_styled_value_fmt {$/;"	d
impl_to_value_nonzero_primitive	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! impl_to_value_nonzero_primitive {$/;"	d
impl_to_value_primitive	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! impl_to_value_primitive {$/;"	d
impl_value_to_primitive	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^macro_rules! impl_value_to_primitive {$/;"	d
info	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! info {$/;"	d
init	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn init(&mut self) {$/;"	f
init	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn init() {$/;"	f
init_from_env	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn init_from_env<'a, E>(env: E)$/;"	f
initialize_default_devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    fn initialize_default_devices(&mut self) {$/;"	f
input_device_with_name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    pub fn input_device_with_name(&mut self, name: &str) -> Option<Device> {$/;"	f
input_devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn input_devices(&self) -> Result<InputDevices<Self::Devices>, DevicesError> {$/;"	f
input_stream_worker	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn input_stream_worker($/;"	f
input_test	/opt/work/rust/tuner/src/main.rs	/^    fn input_test() {$/;"	f
input_timestamp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn input_timestamp($/;"	f
insert	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/fft_cache.rs	/^    pub fn insert(&mut self, fft: &Arc<dyn Fft<T>>) {$/;"	f
interleave_complex_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^macro_rules! interleave_complex_f32 {$/;"	d
interleave_complex_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^macro_rules! interleave_complex_f32 {$/;"	d
into	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/read_write.rs	/^fn into() {$/;"	f
into_abi	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    fn into_abi(self) -> Self::Abi {$/;"	f
into_color_choice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn into_color_choice(self) -> ColorChoice {$/;"	f
into_immediate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn into_immediate(self) -> Consumer<T, R> {$/;"	f
into_immediate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn into_immediate(self) -> Producer<T, R> {$/;"	f
into_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn into_inner(self) -> DeviceInner {$/;"	f
into_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn into_inner(self) -> DevicesInner {$/;"	f
into_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn into_inner(self) -> HostInner {$/;"	f
into_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn into_inner(self) -> StreamInner {$/;"	f
into_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/storage.rs	/^    pub fn into_inner(self) -> C {$/;"	f
into_postponed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn into_postponed(self) -> Consumer<T, RbWrap<RbReadCache<T, R>>> {$/;"	f
into_postponed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn into_postponed(self) -> PostponedProducer<T, R> {$/;"	f
into_raw_parts	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^    pub unsafe fn into_raw_parts(self) -> (C, usize, usize) {$/;"	f
into_raw_parts	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^    pub unsafe fn into_raw_parts(self) -> (C, usize, usize) {$/;"	f
into_rb_ref	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn into_rb_ref(self) -> R {$/;"	f
into_rb_ref	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn into_rb_ref(self) -> R {$/;"	f
into_termcolor	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn into_termcolor(self) -> termcolor::Color {$/;"	f
is	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn is<T: 'static>(&self) -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn is_available() -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn is_available() -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn is_available() -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn is_available() -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn is_available() -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    fn is_available() -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn is_available() -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn is_available() -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^    fn is_available() -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn is_available() -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn is_available() -> bool {$/;"	f
is_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn is_available() -> bool;$/;"	f
is_bluesteins	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn is_bluesteins(plan: &Recipe) -> bool {$/;"	f
is_bluesteins	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn is_bluesteins(plan: &Recipe) -> bool {$/;"	f
is_bluesteins	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn is_bluesteins(plan: &Recipe) -> bool {$/;"	f
is_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn is_butterfly(&self, len: usize) -> bool {$/;"	f
is_empty	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_empty	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/storage.rs	/^    fn is_empty(&self) -> bool {$/;"	f
is_float	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    pub fn is_float(&self) -> bool {$/;"	f
is_format_supported	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^pub unsafe fn is_format_supported($/;"	f
is_full	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn is_full(&self) -> bool {$/;"	f
is_full	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    fn is_full(&self) -> bool {$/;"	f
is_goodthomassmall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn is_goodthomassmall(plan: &Recipe) -> bool {$/;"	f
is_goodthomassmall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn is_goodthomassmall(plan: &Recipe) -> bool {$/;"	f
is_goodthomassmall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn is_goodthomassmall(plan: &Recipe) -> bool {$/;"	f
is_input	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    pub fn is_input(&self) -> bool {$/;"	f
is_int	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    pub fn is_int(&self) -> bool {$/;"	f
is_match	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/regex.rs	/^    pub fn is_match(&self, s: &str) -> bool {$/;"	f
is_match	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/string.rs	/^    pub fn is_match(&self, s: &str) -> bool {$/;"	f
is_mixedradix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn is_mixedradix(plan: &Recipe) -> bool {$/;"	f
is_mixedradix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn is_mixedradix(plan: &Recipe) -> bool {$/;"	f
is_mixedradix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn is_mixedradix(plan: &Recipe) -> bool {$/;"	f
is_mixedradixsmall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn is_mixedradixsmall(plan: &Recipe) -> bool {$/;"	f
is_mixedradixsmall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn is_mixedradixsmall(plan: &Recipe) -> bool {$/;"	f
is_mixedradixsmall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn is_mixedradixsmall(plan: &Recipe) -> bool {$/;"	f
is_output	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    pub fn is_output(&self) -> bool {$/;"	f
is_power_of_three	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn is_power_of_three(&self) -> bool {$/;"	f
is_prime	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn is_prime(&self) -> bool {$/;"	f
is_raders	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn is_raders(plan: &Recipe) -> bool {$/;"	f
is_raders	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn is_raders(plan: &Recipe) -> bool {$/;"	f
is_raders	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn is_raders(plan: &Recipe) -> bool {$/;"	f
is_send	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^        fn is_send<T: Send>() {}$/;"	f
is_supported_by_cpu	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^            pub fn is_supported_by_cpu() -> bool {$/;"	f
is_supported_by_cpu	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^            pub fn is_supported_by_cpu() -> bool {$/;"	f
is_test	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn is_test(&mut self, is_test: bool) -> &mut Self {$/;"	f
is_uint	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    pub fn is_uint(&self) -> bool {$/;"	f
is_webaudio_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^fn is_webaudio_available() -> bool {$/;"	f
is_webaudio_available	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^fn is_webaudio_available() -> bool {$/;"	f
iter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn iter() -> impl Iterator<Item = Self> {$/;"	f
iter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn iter(&self) -> impl Iterator<Item = &T> + '_ {$/;"	f
iter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn iter(&self) -> Chain<slice::Iter<T>, slice::Iter<T>> {$/;"	f
iter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/iter.rs	/^fn iter() {$/;"	f
iter_chunks	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^pub fn iter_chunks<T>($/;"	f
iter_chunks_zipped	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^pub fn iter_chunks_zipped<T>($/;"	f
iter_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn iter_mut(&mut self) -> impl Iterator<Item = &mut T> + '_ {$/;"	f
iter_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn iter_mut(&mut self) -> Chain<slice::IterMut<T>, slice::IterMut<T>> {$/;"	f
iter_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/iter.rs	/^fn iter_mut() {$/;"	f
key_from_string	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn key_from_string() {$/;"	f
key_values	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn key_values(&mut self, kvs: &'a dyn kv::Source) -> &mut RecordBuilder<'a> {$/;"	f
key_values	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn key_values(&self) -> &dyn kv::Source {$/;"	f
le	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn le(&self, other: &Level) -> bool {$/;"	f
le	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn le(&self, other: &LevelFilter) -> bool {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn len(&self) -> usize;$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/storage.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/storage.rs	/^    fn len(&self) -> usize;$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/storage.rs	/^    pub fn len(&self) -> NonZeroUsize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^            fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^            fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^            fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^            fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/common.rs	/^            fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    fn len(&self) -> usize;$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^            fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^            fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^            fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^            fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    pub fn len(&self) -> usize {$/;"	f
len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^    fn len(&self) -> usize {$/;"	f
len_remaining	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/basic.rs	/^fn len_remaining() {$/;"	f
level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn level(&mut self, arg: Level) -> &mut MetadataBuilder<'a> {$/;"	f
level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn level(&mut self, level: Level) -> &mut RecordBuilder<'a> {$/;"	f
level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn level(&self) -> Level {$/;"	f
level_bytes_tokens	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_bytes_tokens(variant: &'static [u8]) -> [Token; 3] {$/;"	f
level_filter_bytes_tokens	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_filter_bytes_tokens(variant: &'static [u8]) -> [Token; 3] {$/;"	f
level_filter_token	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_filter_token(variant: &'static str) -> Token {$/;"	f
level_filter_variant_tokens	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_filter_variant_tokens(variant: u32) -> [Token; 3] {$/;"	f
level_token	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_token(variant: &'static str) -> Token {$/;"	f
level_variant_tokens	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn level_variant_tokens(variant: u32) -> [Token; 3] {$/;"	f
line	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn line(&mut self, line: Option<u32>) -> &mut RecordBuilder<'a> {$/;"	f
line	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn line(&self) -> Option<u32> {$/;"	f
lo	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    pub unsafe fn lo(self) -> Rotation90<V::HalfVector> {$/;"	f
lo	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn lo(input: Self::FullVector) -> Self {$/;"	f
lo	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn lo(input: Self::FullVector) -> Self;$/;"	f
lo	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn lo(self) -> Self::HalfVector {$/;"	f
lo	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn lo(self) -> Self::HalfVector;$/;"	f
lo_rotation	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn lo_rotation(input: Rotation90<Self::FullVector>) -> Rotation90<Self> {$/;"	f
lo_rotation	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn lo_rotation(input: Rotation90<Self::FullVector>) -> Rotation90<Self>;$/;"	f
load	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn load(&self, _order: Ordering) -> usize {$/;"	f
load	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^    pub unsafe fn load(&self, index: usize) -> T {$/;"	f
load1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn load1_complex(&self, _index: usize) -> Self::VectorType {$/;"	f
load1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn load1_complex(&self, index: usize) -> Self::VectorType {$/;"	f
load1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn load1_complex(&self, index: usize) -> Self::VectorType;$/;"	f
load1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn load1_complex(&self, _index: usize) -> Self::VectorType {$/;"	f
load1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn load1_complex(&self, index: usize) -> Self::VectorType {$/;"	f
load1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn load1_complex(&self, index: usize) -> Self::VectorType;$/;"	f
load_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_complex(&self, index: usize) -> T::VectorType {$/;"	f
load_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_complex(&self, index: usize) -> T::VectorType;$/;"	f
load_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_complex(ptr: *const Complex<Self::ScalarType>) -> Self {$/;"	f
load_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_complex(ptr: *const Complex<Self::ScalarType>) -> Self;$/;"	f
load_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn load_complex(&self, index: usize) -> Self::VectorType {$/;"	f
load_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn load_complex(&self, index: usize) -> Self::VectorType;$/;"	f
load_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn load_complex(&self, index: usize) -> Self::VectorType {$/;"	f
load_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn load_complex(&self, index: usize) -> Self::VectorType;$/;"	f
load_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial1_complex($/;"	f
load_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial1_complex(ptr: *const Complex<Self::ScalarType>) -> Self::HalfVector {$/;"	f
load_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial1_complex(ptr: *const Complex<Self::ScalarType>) -> Self::HalfVector;$/;"	f
load_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn load_partial1_complex(&self, _index: usize) -> Self::VectorType {$/;"	f
load_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn load_partial1_complex(&self, index: usize) -> Self::VectorType {$/;"	f
load_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn load_partial1_complex(&self, index: usize) -> Self::VectorType;$/;"	f
load_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn load_partial1_complex(&self, _index: usize) -> Self::VectorType {$/;"	f
load_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn load_partial1_complex(&self, index: usize) -> Self::VectorType {$/;"	f
load_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn load_partial1_complex(&self, index: usize) -> Self::VectorType;$/;"	f
load_partial2_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial2_complex($/;"	f
load_partial2_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial2_complex(_ptr: *const Complex<Self::ScalarType>) -> Self::HalfVector {$/;"	f
load_partial2_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial2_complex(ptr: *const Complex<Self::ScalarType>) -> Self::HalfVector {$/;"	f
load_partial2_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial2_complex(ptr: *const Complex<Self::ScalarType>) -> Self::HalfVector;$/;"	f
load_partial3_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial3_complex(&self, index: usize) -> T::VectorType {$/;"	f
load_partial3_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial3_complex(&self, index: usize) -> T::VectorType;$/;"	f
load_partial3_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial3_complex(_ptr: *const Complex<Self::ScalarType>) -> Self {$/;"	f
load_partial3_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial3_complex(ptr: *const Complex<Self::ScalarType>) -> Self {$/;"	f
load_partial3_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn load_partial3_complex(ptr: *const Complex<Self::ScalarType>) -> Self;$/;"	f
log	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn log(&self, record: &Record) {$/;"	f
log	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn log(&self, _: &Record) {}$/;"	f
log	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn log(&self, record: &Record) {$/;"	f
log	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn log(&self, record: &Record);$/;"	f
log	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! log {$/;"	d
log_enabled	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! log_enabled {$/;"	d
logger	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn logger() -> &'static dyn Log {$/;"	f
lt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn lt(&self, other: &Level) -> bool {$/;"	f
lt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn lt(&self, other: &LevelFilter) -> bool {$/;"	f
main	/opt/work/rust/tuner/src/main.rs	/^fn main() {}$/;"	f
make_callback_info	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/input_callback.rs	/^    fn make_callback_info($/;"	f
make_callback_info	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/output_callback.rs	/^    fn make_callback_info($/;"	f
make_input_vec	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn make_input_vec(&self) -> Vec<Complex<T>> {$/;"	f
make_input_vec	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn make_input_vec(&self) -> Vec<Complex<T>>;$/;"	f
make_input_vec	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn make_input_vec(&self) -> Vec<T> {$/;"	f
make_input_vec	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn make_input_vec(&self) -> Vec<T>;$/;"	f
make_logger_filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn make_logger_filter(dirs: Vec<Directive>) -> Filter {$/;"	f
make_mixedradix_twiddle_chunk	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn make_mixedradix_twiddle_chunk($/;"	f
make_output_vec	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn make_output_vec(&self) -> Vec<Complex<T>> {$/;"	f
make_output_vec	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn make_output_vec(&self) -> Vec<Complex<T>>;$/;"	f
make_output_vec	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn make_output_vec(&self) -> Vec<T> {$/;"	f
make_output_vec	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn make_output_vec(&self) -> Vec<T>;$/;"	f
make_postponed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/parts.rs	/^fn make_postponed(b: &mut Bencher) {$/;"	f
make_rotation90	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn make_rotation90(direction: FftDirection) -> Rotation90<Self> {$/;"	f
make_rotation90	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn make_rotation90(direction: FftDirection) -> Rotation90<Self>;$/;"	f
make_scratch_vec	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn make_scratch_vec(&self) -> Vec<Complex<T>> {$/;"	f
make_scratch_vec	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn make_scratch_vec(&self) -> Vec<Complex<T>>;$/;"	f
map	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    macro_rules! map{$/;"	d
match_beginning	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn match_beginning() {$/;"	f
match_beginning_longest_match	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn match_beginning_longest_match() {$/;"	f
match_default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn match_default() {$/;"	f
match_full_path	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn match_full_path() {$/;"	f
matches	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn matches(&self, record: &Record) -> bool {$/;"	f
matches	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn matches(&self, record: &Record) -> bool {$/;"	f
max	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn max() -> Level {$/;"	f
max	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn max() -> LevelFilter {$/;"	f
max_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn max_level() -> LevelFilter {$/;"	f
max_sample_rate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn max_sample_rate(&self) -> SampleRate {$/;"	f
merge	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn merge(lo: Self, hi: Self) -> Self::FullVector {$/;"	f
merge	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn merge(lo: Self, hi: Self) -> Self::FullVector;$/;"	f
merge	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn merge(lo: Self::HalfVector, hi: Self::HalfVector) -> Self {$/;"	f
merge	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn merge(lo: Self::HalfVector, hi: Self::HalfVector) -> Self;$/;"	f
metadata	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn metadata(&mut self, metadata: Metadata<'a>) -> &mut RecordBuilder<'a> {$/;"	f
metadata	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn metadata(&self) -> &Metadata<'a> {$/;"	f
micros_to_stream_instant	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^fn micros_to_stream_instant(micros: u64) -> crate::StreamInstant {$/;"	f
min_sample_rate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn min_sample_rate(&self) -> SampleRate {$/;"	f
mixedradix_column_butterflies	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^macro_rules! mixedradix_column_butterflies {$/;"	d
mixedradix_gen_data	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^macro_rules! mixedradix_gen_data {$/;"	d
mixedradix_transpose	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^macro_rules! mixedradix_transpose{$/;"	d
modular_exponent	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^pub fn modular_exponent<T: PrimInt>(mut base: T, mut exponent: T, modulo: T) -> T {$/;"	f
module_path	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn module_path(&mut self, path: Option<&'a str>) -> &mut RecordBuilder<'a> {$/;"	f
module_path	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn module_path(&self) -> Option<&'a str> {$/;"	f
module_path_static	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn module_path_static(&mut self, path: Option<&'static str>) -> &mut RecordBuilder<'a> {$/;"	f
module_path_static	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn module_path_static(&self) -> Option<&'static str> {$/;"	f
modulus	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    fn modulus(&self) -> NonZeroUsize {$/;"	f
move_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/slice.rs	/^fn move_slice() {$/;"	f
move_slice_count	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/slice.rs	/^fn move_slice_count() {$/;"	f
msg	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^    pub fn msg(msg: &'static str) -> Self {$/;"	f
mul	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    fn mul(self, rhs: T) -> Self {$/;"	f
mul	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn mul(left: Self, right: Self) -> Self {$/;"	f
mul	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn mul(left: Self, right: Self) -> Self;$/;"	f
mul_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn mul_complex(left: Self, right: Self) -> Self {$/;"	f
mul_complex_conjugated	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^    unsafe fn mul_complex_conjugated<V: AvxVector>(left: V, right: V) -> V {$/;"	f
mul_complex_conjugated	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^unsafe fn mul_complex_conjugated<V: AvxVector>(left: V, right: V) -> V {$/;"	f
mul_complex_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub unsafe fn mul_complex_f32(left: float32x4_t, right: float32x4_t) -> float32x4_t {$/;"	f
mul_complex_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub unsafe fn mul_complex_f32(left: __m128, right: __m128) -> __m128 {$/;"	f
mul_complex_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub unsafe fn mul_complex_f64(left: float64x2_t, right: float64x2_t) -> float64x2_t {$/;"	f
mul_complex_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub unsafe fn mul_complex_f64(left: __m128d, right: __m128d) -> __m128d {$/;"	f
mul_rem	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^    unsafe fn mul_rem(&self, a: __m256i) -> __m256i {$/;"	f
mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^static mut LOGGER: &dyn Log = &NopLogger;$/;"	c
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^    pub fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    pub fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn name(&self) -> Result<String, DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn name(&self) -> Result<String, crate::DeviceNameError> {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            pub fn name(&self) -> &'static str {$/;"	f
name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn name(&self) -> Result<String, DeviceNameError>;$/;"	f
neg	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn neg(self) -> Self {$/;"	f
neg	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn neg(self) -> Self;$/;"	f
negate_hi_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub unsafe fn negate_hi_f32(values: __m128) -> __m128 {$/;"	f
neon	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^mod neon {$/;"	m
neon_planner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    pub mod neon_planner {$/;"	m
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/enumerate.rs	/^    pub fn new() -> Result<Self, DevicesError> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn new(poll_timeout: &Option<Duration>) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    pub fn new() -> Result<Self, crate::HostUnavailable> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^    pub fn new(asio: Arc<sys::Asio>) -> Result<Self, DevicesError> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    pub fn new() -> Result<Self, crate::HostUnavailable> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/enumerate.rs	/^    pub fn new() -> Result<Self, DevicesError> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn new(inner: StreamInner) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    pub fn new() -> Result<Self, crate::HostUnavailable> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/enumerate.rs	/^    pub fn new() -> Result<Self, DevicesError> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn new(inner: StreamInner) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    pub fn new() -> Result<Self, crate::HostUnavailable> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/property_listener.rs	/^    pub fn new<F: FnMut() -> () + 'static>($/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn new() -> Result<Self, DevicesError> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    pub fn new() -> Result<Self, crate::HostUnavailable> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    pub fn new() -> Result<Self, crate::HostUnavailable> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    fn new($/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    pub fn new(error_callback_ptr: ErrorCallbackPtr) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    pub fn new() -> Result<Self, DevicesError> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    pub fn new() -> Result<Self, crate::HostUnavailable> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/input_callback.rs	/^    pub fn new<D, E>(data_cb: D, error_cb: E) -> Self$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    pub fn new() -> Result<Self, crate::HostUnavailable> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/output_callback.rs	/^    pub fn new<D, E>(data_cb: D, error_cb: E) -> Self$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    pub fn new() -> Result<Self, DevicesError> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^    pub fn new() -> Result<Self, crate::HostUnavailable> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn new() -> Result<Self, DevicesError> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    pub fn new() -> Result<Self, crate::HostUnavailable> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    fn new(secs: i64, nanos: u32) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn new($/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn new() -> Builder {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/regex.rs	/^    pub fn new(spec: &str) -> Result<Filter, String> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/string.rs	/^    pub fn new(spec: &str) -> Result<Filter, String> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn new<E>(name: E) -> Self$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn new() -> Builder {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn new() -> MetadataBuilder<'a> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn new() -> RecordBuilder<'a> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    pub fn new(length: usize, fft_planner: &mut FftPlanner<T>) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub unsafe fn new(target: R) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub unsafe fn new(target: R) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^    pub unsafe fn new(rb_ref: R) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/init.rs	/^    pub fn new(capacity: usize) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/storage.rs	/^    pub fn new(container: C) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/drop.rs	/^    fn new(set: &'a RefCell<BTreeSet<i32>>, id: i32) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/bluesteins_algorithm.rs	/^    pub fn new(len: usize, inner_fft: Arc<dyn Fft<T>>) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    pub fn new(direction: FftDirection) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/dft.rs	/^    pub fn new(len: usize, direction: FftDirection) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    pub fn new(mut width_fft: Arc<dyn Fft<T>>, mut height_fft: Arc<dyn Fft<T>>) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    pub fn new(width_fft: Arc<dyn Fft<T>>, height_fft: Arc<dyn Fft<T>>) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/mixed_radix.rs	/^    pub fn new(width_fft: Arc<dyn Fft<T>>, height_fft: Arc<dyn Fft<T>>) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/raders_algorithm.rs	/^    pub fn new(inner_fft: Arc<dyn Fft<T>>) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix3.rs	/^    pub fn new(len: usize, direction: FftDirection) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix4.rs	/^    pub fn new(len: usize, direction: FftDirection) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^    pub fn new(slice: &[T]) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^    pub fn new(slice: &mut [T]) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^            pub fn new(direction: FftDirection) -> Result<Self, ()> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^            pub fn new(direction: FftDirection) -> Result<Self, ()> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^    pub fn new(len: usize, inner_fft: Arc<dyn Fft<T>>) -> Result<Self, ()> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^        pub fn new(inner_fft: Arc<dyn Fft<T>>) -> Result<Self, ()> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn new(base: MixedRadixBase, radixes: Vec<u8>) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    pub fn new() -> Result<Self, ()> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^    pub fn new(inner_fft: Arc<dyn Fft<T>>) -> Result<Self, ()> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^    unsafe fn new(b: u32, divisor: u32) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/fft_cache.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^            pub fn new() -> Result<Self, ()> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^            fn new($/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    pub fn new(direction: FftDirection) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    pub fn new() -> Result<Self, ()> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^    pub fn new(direction: FftDirection) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^    pub fn new(len: usize, direction: FftDirection) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^    pub fn new(positive: bool) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    pub fn new() -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    pub fn new(direction: FftDirection) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    pub fn new() -> Result<Self, ()> {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^    pub fn new(direction: FftDirection) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^    pub fn new(len: usize, direction: FftDirection) -> Self {$/;"	f
new	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^    pub fn new(positive: bool) -> Self {$/;"	f
new	/opt/work/rust/tuner/src/main.rs	/^    fn new(total_samples: usize) -> FftControl {$/;"	f
new	/opt/work/rust/tuner/src/main.rs	/^    pub fn new() -> AudioInput {$/;"	f
new_device	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    fn new_device($/;"	f
new_input	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn new_input<D, E>($/;"	f
new_input	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    pub fn new_input<D, E>($/;"	f
new_output	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn new_output<D, E>($/;"	f
new_output	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    pub fn new_output<D, E>($/;"	f
new_postponed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub unsafe fn new_postponed(target: R) -> Self {$/;"	f
new_postponed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub unsafe fn new_postponed(target: R) -> Self {$/;"	f
new_transmuted	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^    pub unsafe fn new_transmuted<U>(slice: &[U]) -> Self {$/;"	f
new_transmuted	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^    pub unsafe fn new_transmuted<U>(slice: &mut [U]) -> Self {$/;"	f
new_with_avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^    unsafe fn new_with_avx(direction: FftDirection) -> Self {$/;"	f
new_with_avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^    unsafe fn new_with_avx(direction: FftDirection) -> Self {$/;"	f
new_with_avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^    unsafe fn new_with_avx(len: usize, inner_fft: Arc<dyn Fft<T>>) -> Self {$/;"	f
new_with_avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^    unsafe fn new_with_avx(inner_fft: Arc<dyn Fft<T>>) -> Self {$/;"	f
new_with_avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^    unsafe fn new_with_avx(inner_fft: Arc<dyn Fft<T>>) -> Self {$/;"	f
new_with_default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    fn new_with_default<E, V>(name: E, default: V) -> Self$/;"	f
next	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/enumerate.rs	/^    fn next(&mut self) -> Option<Device> {$/;"	f
next	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^    fn next(&mut self) -> Option<Device> {$/;"	f
next	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/enumerate.rs	/^    fn next(&mut self) -> Option<Device> {$/;"	f
next	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/enumerate.rs	/^    fn next(&mut self) -> Option<Device> {$/;"	f
next	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn next(&mut self) -> Option<Device> {$/;"	f
next	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn next(&mut self) -> Option<Device> {$/;"	f
next	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn next(&mut self) -> Option<SupportedStreamConfigRange> {$/;"	f
next	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn next(&mut self) -> Option<Device> {$/;"	f
next	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn next(&mut self) -> Option<Device> {$/;"	f
next	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn next(&mut self) -> Option<Self::Item> {$/;"	f
next	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    fn next(&mut self) -> Option<T> {$/;"	f
no_match	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn no_match() {$/;"	f
occupied_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    fn occupied_len(&self) -> usize {$/;"	f
occupied_ranges	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    fn occupied_ranges(&self) -> (Range<usize>, Range<usize>) {$/;"	f
occupied_slices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    unsafe fn occupied_slices(&self) -> (&mut [MaybeUninit<T>], &mut [MaybeUninit<T>]) {$/;"	f
ok_or	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^fn ok_or<T, E>(t: Option<T>, e: E) -> Result<T, E> {$/;"	f
old	/opt/work/rust/tuner/src/main.rs	/^pub fn old() {$/;"	f
on_audio_ready	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/input_callback.rs	/^    fn on_audio_ready($/;"	f
on_audio_ready	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/output_callback.rs	/^    fn on_audio_ready($/;"	f
on_error_after_close	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/input_callback.rs	/^    fn on_error_after_close($/;"	f
on_error_after_close	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/output_callback.rs	/^    fn on_error_after_close($/;"	f
on_error_before_close	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/input_callback.rs	/^    fn on_error_before_close($/;"	f
on_error_before_close	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/output_callback.rs	/^    fn on_error_before_close($/;"	f
open	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn open(name: &str) -> Result<Self, alsa::Error> {$/;"	f
opposite_direction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    pub fn opposite_direction(&self) -> FftDirection {$/;"	f
output_device_with_name	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    pub fn output_device_with_name(&mut self, name: &str) -> Option<Device> {$/;"	f
output_devices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn output_devices(&self) -> Result<OutputDevices<Self::Devices>, DevicesError> {$/;"	f
output_stream_worker	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn output_stream_worker($/;"	f
output_timestamp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn output_timestamp($/;"	f
pairwise_complex_mul_assign_conjugated	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^pub unsafe fn pairwise_complex_mul_assign_conjugated<T: AvxNum>($/;"	f
pairwise_complex_mul_conjugated	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^pub unsafe fn pairwise_complex_mul_conjugated<T: AvxNum>($/;"	f
pairwise_complex_multiply_conjugated	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^    unsafe fn pairwise_complex_multiply_conjugated($/;"	f
parallel_fft2_contiguous_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^unsafe fn parallel_fft2_contiguous_f32(left: float32x4_t, right: float32x4_t) -> [float32x4_t; 2] {$/;"	f
parallel_fft2_contiguous_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^unsafe fn parallel_fft2_contiguous_f32(left: __m128, right: __m128) -> [__m128; 2] {$/;"	f
parse	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    pub fn parse(&mut self, filters: &str) -> &mut Self {$/;"	f
parse_default	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default() {$/;"	f
parse_default_bare_level_debug_lc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_debug_lc() {$/;"	f
parse_default_bare_level_debug_mixed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_debug_mixed() {$/;"	f
parse_default_bare_level_debug_uc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_debug_uc() {$/;"	f
parse_default_bare_level_error_lc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_error_lc() {$/;"	f
parse_default_bare_level_error_uc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_error_uc() {$/;"	f
parse_default_bare_level_info_lc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_info_lc() {$/;"	f
parse_default_bare_level_info_uc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_info_uc() {$/;"	f
parse_default_bare_level_off_lc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_off_lc() {$/;"	f
parse_default_bare_level_off_uc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_off_uc() {$/;"	f
parse_default_bare_level_trace_lc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_trace_lc() {$/;"	f
parse_default_bare_level_trace_uc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_trace_uc() {$/;"	f
parse_default_bare_level_warn_lc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_warn_lc() {$/;"	f
parse_default_bare_level_warn_uc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_default_bare_level_warn_uc() {$/;"	f
parse_default_env	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn parse_default_env(&mut self) -> &mut Self {$/;"	f
parse_env	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn parse_env<'a, E>(&mut self, env: E) -> &mut Self$/;"	f
parse_filters	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn parse_filters(&mut self, filters: &str) -> &mut Self {$/;"	f
parse_spec	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^fn parse_spec(spec: &str) -> (Vec<Directive>, Option<inner::Filter>) {$/;"	f
parse_spec_blank_level_isolated	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_blank_level_isolated() {$/;"	f
parse_spec_blank_level_isolated_blank_comma	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_blank_level_isolated_blank_comma() {$/;"	f
parse_spec_blank_level_isolated_comma_blank	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_blank_level_isolated_comma_blank() {$/;"	f
parse_spec_blank_level_isolated_comma_only	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_blank_level_isolated_comma_only() {$/;"	f
parse_spec_empty_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_empty_level() {$/;"	f
parse_spec_empty_level_isolated	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_empty_level_isolated() {$/;"	f
parse_spec_empty_with_filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_empty_with_filter() {$/;"	f
parse_spec_global	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_global() {$/;"	f
parse_spec_global_bare_warn_lc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_global_bare_warn_lc() {$/;"	f
parse_spec_global_bare_warn_mixed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_global_bare_warn_mixed() {$/;"	f
parse_spec_global_bare_warn_uc	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_global_bare_warn_uc() {$/;"	f
parse_spec_invalid_crate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_invalid_crate() {$/;"	f
parse_spec_invalid_crate_filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_invalid_crate_filter() {$/;"	f
parse_spec_invalid_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_invalid_level() {$/;"	f
parse_spec_string_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_string_level() {$/;"	f
parse_spec_valid	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_valid() {$/;"	f
parse_spec_valid_filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn parse_spec_valid_filter() {$/;"	f
parse_write_style	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^fn parse_write_style(spec: &str) -> WriteStyle {$/;"	f
parse_write_style	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn parse_write_style(&mut self, write_style: &str) -> &mut Self {$/;"	f
parse_write_style_invalid	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn parse_write_style_invalid() {$/;"	f
parse_write_style_valid	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    fn parse_write_style_valid() {$/;"	f
partial_cmp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn partial_cmp(&self, other: &Key<'ko>) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn partial_cmp(&self, other: &Level) -> Option<cmp::Ordering> {$/;"	f
partial_cmp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn partial_cmp(&self, other: &LevelFilter) -> Option<cmp::Ordering> {$/;"	f
partition_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn partition_factors(mut self) -> (Self, Self) {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn pause(&self) -> Result<(), PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn pause(&self) -> Result<(), PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^    pub fn pause(&self) -> Result<(), PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn pause(&self) -> Result<(), PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn pause(&self) -> Result<(), PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn pause(&self) -> Result<(), PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    fn pause(&self) -> Result<(), PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn pause(&self) -> Result<(), PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn pause(&self) -> Result<(), PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^    fn pause(&self) -> Result<(), PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn pause(&self) -> Result<(), PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn pause(&self) -> Result<(), crate::PauseStreamError> {$/;"	f
pause	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn pause(&self) -> Result<(), PauseStreamError>;$/;"	f
perform_column_butterflies	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^        unsafe fn perform_column_butterflies(&self, buffer: &mut [Complex<A>]) {$/;"	f
perform_column_butterflies	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^    unsafe fn perform_column_butterflies(&self, buffer: &mut [Complex<A>]) {$/;"	f
perform_fft_contiguous	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    pub unsafe fn perform_fft_contiguous($/;"	f
perform_fft_contiguous	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    unsafe fn perform_fft_contiguous($/;"	f
perform_fft_contiguous	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    unsafe fn perform_fft_contiguous($/;"	f
perform_fft_contiguous	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    unsafe fn perform_fft_contiguous($/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, input: [float32x4_t; 16]) -> [float32x4_t; 16] {$/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, input: [float32x4_t; 8]) -> [float32x4_t; 8] {$/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, input: [float64x2_t; 16]) -> [float64x2_t; 16] {$/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, input: [float64x2_t; 32]) -> [float64x2_t; 32] {$/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, values: [float32x4_t; 4]) -> [float32x4_t; 4] {$/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, values: [float64x2_t; 8]) -> [float64x2_t; 8] {$/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, input: [__m128; 16]) -> [__m128; 16] {$/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, input: [__m128; 8]) -> [__m128; 8] {$/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, input: [__m128d; 16]) -> [__m128d; 16] {$/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, input: [__m128d; 32]) -> [__m128d; 32] {$/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, values: [__m128; 4]) -> [__m128; 4] {$/;"	f
perform_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    unsafe fn perform_fft_direct(&self, values: [__m128d; 8]) -> [__m128d; 8] {$/;"	f
perform_fft_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^    unsafe fn perform_fft_f32($/;"	f
perform_fft_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^    unsafe fn perform_fft_f64($/;"	f
perform_fft_inplace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/bluesteins_algorithm.rs	/^    fn perform_fft_inplace(&self, input: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
perform_fft_inplace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    fn perform_fft_inplace(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
perform_fft_inplace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/mixed_radix.rs	/^    fn perform_fft_inplace(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
perform_fft_inplace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/raders_algorithm.rs	/^    fn perform_fft_inplace(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
perform_fft_inplace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^            fn perform_fft_inplace($/;"	f
perform_fft_inplace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^            fn perform_fft_inplace($/;"	f
perform_fft_inplace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^    fn perform_fft_inplace(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
perform_fft_inplace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^        fn perform_fft_inplace(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
perform_fft_inplace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^    fn perform_fft_inplace(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/bluesteins_algorithm.rs	/^    fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/dft.rs	/^    fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/mixed_radix.rs	/^    fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/raders_algorithm.rs	/^    fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix3.rs	/^    fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix4.rs	/^    fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^            fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^            fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^    fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^        fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^    fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^    unsafe fn perform_fft_out_of_place($/;"	f
perform_fft_out_of_place	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^    unsafe fn perform_fft_out_of_place($/;"	f
perform_fft_strided	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    unsafe fn perform_fft_strided($/;"	f
perform_fft_strided	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    unsafe fn perform_fft_strided(left: &mut Complex<T>, right: &mut Complex<T>) {$/;"	f
perform_parallel_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    unsafe fn perform_parallel_fft_direct(&self, input: [float32x4_t; 16]) -> [float32x4_t; 16] {$/;"	f
perform_parallel_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    unsafe fn perform_parallel_fft_direct(&self, values: [float32x4_t; 8]) -> [float32x4_t; 8] {$/;"	f
perform_parallel_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    unsafe fn perform_parallel_fft_direct(&self, input: [__m128; 16]) -> [__m128; 16] {$/;"	f
perform_parallel_fft_direct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    unsafe fn perform_parallel_fft_direct(&self, values: [__m128; 8]) -> [__m128; 8] {$/;"	f
plan_and_construct_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn plan_and_construct_fft(&mut self, len: usize, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
plan_and_construct_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn plan_and_construct_fft(&mut self, len: usize, direction: FftDirection) -> Arc<dyn Fft<T>>;$/;"	f
plan_bluesteins	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn plan_bluesteins($/;"	f
plan_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn plan_fft($/;"	f
plan_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    pub fn plan_fft(&mut self, len: usize, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^            pub fn plan_fft(&mut self, _len: usize, _direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    pub fn plan_fft(&mut self, len: usize, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    pub fn plan_fft(&mut self, len: usize, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    pub fn plan_fft(&mut self, len: usize, direction: FftDirection) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft_forward	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    pub fn plan_fft_forward(&mut self, len: usize) -> Arc<dyn RealToComplex<T>> {$/;"	f
plan_fft_forward	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    pub fn plan_fft_forward(&mut self, len: usize) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft_forward	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^            pub fn plan_fft_forward(&mut self, _len: usize) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft_forward	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    pub fn plan_fft_forward(&mut self, len: usize) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft_forward	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    pub fn plan_fft_forward(&mut self, len: usize) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft_forward	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    pub fn plan_fft_forward(&mut self, len: usize) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft_inverse	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    pub fn plan_fft_inverse(&mut self, len: usize) -> Arc<dyn ComplexToReal<T>> {$/;"	f
plan_fft_inverse	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    pub fn plan_fft_inverse(&mut self, len: usize) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft_inverse	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^            pub fn plan_fft_inverse(&mut self, _len: usize) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft_inverse	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    pub fn plan_fft_inverse(&mut self, len: usize) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft_inverse	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    pub fn plan_fft_inverse(&mut self, len: usize) -> Arc<dyn Fft<T>> {$/;"	f
plan_fft_inverse	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    pub fn plan_fft_inverse(&mut self, len: usize) -> Arc<dyn Fft<T>> {$/;"	f
plan_mixed_radix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn plan_mixed_radix($/;"	f
plan_mixed_radix_base	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn plan_mixed_radix_base(&self, len: usize, factors: &PartialFactors) -> MixedRadixPlan {$/;"	f
plan_power12_power6	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn plan_power12_power6(radix_factors: &PartialFactors) -> (u32, u32) {$/;"	f
platform_impl	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^mod platform_impl {$/;"	m
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn play(&self) -> Result<(), PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn play(&self) -> Result<(), PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^    pub fn play(&self) -> Result<(), PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn play(&self) -> Result<(), PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn play(&self) -> Result<(), PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn play(&self) -> Result<(), PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    fn play(&self) -> Result<(), PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn play(&self) -> Result<(), PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn play(&self) -> Result<(), PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^    fn play(&self) -> Result<(), PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn play(&self) -> Result<(), PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn play(&self) -> Result<(), crate::PlayStreamError> {$/;"	f
play	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn play(&self) -> Result<(), PlayStreamError>;$/;"	f
play_440	/opt/work/rust/tuner/src/main.rs	/^    fn play_440() {$/;"	f
poll_descriptors_and_prepare_buffer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn poll_descriptors_and_prepare_buffer($/;"	f
pop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn pop(&mut self) -> Option<T> {$/;"	f
pop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn pop(&mut self) -> Option<T> {$/;"	f
pop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/access.rs	/^fn pop() {$/;"	f
pop_empty	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/access.rs	/^fn pop_empty() {$/;"	f
pop_empty	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/basic.rs	/^fn pop_empty() {$/;"	f
pop_full	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/access.rs	/^fn pop_full() {$/;"	f
pop_iter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn pop_iter(&mut self) -> PopIterator<'_, T, R> {$/;"	f
pop_iter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn pop_iter(&mut self) -> PopIterator<'_, T, RbWrap<Self>> {$/;"	f
pop_iter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/iter.rs	/^fn pop_iter() {$/;"	f
pop_iter_x1000	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/iter.rs	/^fn pop_iter_x1000(b: &mut Bencher) {$/;"	f
pop_return	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/access.rs	/^fn pop_return() {$/;"	f
pop_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn pop_slice(&mut self, elems: &mut [T]) -> usize {$/;"	f
pop_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn pop_slice(&mut self, elems: &mut [T])$/;"	f
pop_slice_panic	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/slice.rs	/^fn pop_slice_panic() {$/;"	f
postponed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn postponed(&mut self) -> Consumer<T, RbWrap<RbReadCache<T, &R::Rb>>> {$/;"	f
postponed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn postponed(&mut self) -> PostponedProducer<T, &R::Rb> {$/;"	f
prepare_bluesteins	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^    unsafe fn prepare_bluesteins(&self, input: &[Complex<A>], inner_fft_buffer: &mut [Complex<A>]) {$/;"	f
prepare_raders	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^    unsafe fn prepare_raders(&self, input: &[Complex<A>], output: &mut [Complex<A>]) {$/;"	f
primitive_root	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^pub fn primitive_root(prime: u64) -> Option<u64> {$/;"	f
print_stats	/opt/work/rust/tuner/src/main.rs	/^    fn print_stats($/;"	f
process	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    fn process(&mut self, _: &jack::Client, process_scope: &jack::ProcessScope) -> jack::Control {$/;"	f
process	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn process(&self, input: &mut [Complex<T>], output: &mut [T]) -> Res<()> {$/;"	f
process	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn process(&self, input: &mut [Complex<T>], output: &mut [T]) -> Res<()>;$/;"	f
process	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn process(&self, input: &mut [T], output: &mut [Complex<T>]) -> Res<()> {$/;"	f
process	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn process(&self, input: &mut [T], output: &mut [Complex<T>]) -> Res<()>;$/;"	f
process	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    fn process(&self, buffer: &mut [Complex<T>]) {$/;"	f
process_commands	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn process_commands(run_context: &mut RunContext) -> Result<bool, StreamError> {$/;"	f
process_commands_and_await_signal	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn process_commands_and_await_signal($/;"	f
process_input	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn process_input($/;"	f
process_input	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn process_input($/;"	f
process_input_callback	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^            unsafe fn process_input_callback<A, D, F>($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^            fn process_outofplace_with_scratch($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    fn process_outofplace_with_scratch($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^            fn process_outofplace_with_scratch($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^            fn process_outofplace_with_scratch($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^            fn process_outofplace_with_scratch($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/common.rs	/^            fn process_outofplace_with_scratch($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    fn process_outofplace_with_scratch($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^            fn process_outofplace_with_scratch($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^            fn process_outofplace_with_scratch($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^            fn process_outofplace_with_scratch($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^            fn process_outofplace_with_scratch($/;"	f
process_outofplace_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^    fn process_outofplace_with_scratch($/;"	f
process_output	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn process_output($/;"	f
process_output	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn process_output($/;"	f
process_output_callback	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^            unsafe fn process_output_callback<A, D, F>($/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn process_with_scratch($/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^            fn process_with_scratch(&self, buffer: &mut [Complex<T>], _scratch: &mut [Complex<T>]) {$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    fn process_with_scratch(&self, _buffer: &mut [Complex<T>], _scratch: &mut [Complex<T>]) {}$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^            fn process_with_scratch(&self, buffer: &mut [Complex<T>], _scratch: &mut [Complex<T>]) {$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^            fn process_with_scratch(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^            fn process_with_scratch(&self, buffer: &mut [Complex<T>], _scratch: &mut [Complex<T>]) {$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^            fn process_with_scratch(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/mod.rs	/^            fn process_with_scratch(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/common.rs	/^            fn process_with_scratch(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    fn process_with_scratch(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]);$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^            fn process_with_scratch(&self, buffer: &mut [Complex<T>], _scratch: &mut [Complex<T>]) {$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^            fn process_with_scratch(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^            fn process_with_scratch(&self, buffer: &mut [Complex<T>], _scratch: &mut [Complex<T>]) {$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^            fn process_with_scratch(&self, buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
process_with_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^    fn process_with_scratch(&self, _buffer: &mut [Complex<T>], scratch: &mut [Complex<T>]) {$/;"	f
product	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn product(&self) -> usize {$/;"	f
product_power2power3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn product_power2power3(&self) -> usize {$/;"	f
push	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn push(&mut self, elem: T) -> Result<(), T> {$/;"	f
push	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn push(&mut self, elem: T) -> Result<(), T> {$/;"	f
push	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/access.rs	/^fn push() {$/;"	f
push	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/basic.rs	/^fn push() {$/;"	f
push	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/overwrite.rs	/^fn push() {$/;"	f
push_command	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^    fn push_command(&self, command: Command) {$/;"	f
push_iter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn push_iter<I: Iterator<Item = T>>(&mut self, iter: &mut I) -> usize {$/;"	f
push_iter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn push_iter<I: Iterator<Item = T>>(&mut self, iter: &mut I) {$/;"	f
push_iter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/overwrite.rs	/^fn push_iter() {$/;"	f
push_iter_overwrite	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn push_iter_overwrite<I: Iterator<Item = T>>(&mut self, iter: I) {$/;"	f
push_iter_x1000	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/iter.rs	/^fn push_iter_x1000(b: &mut Bencher) {$/;"	f
push_overwrite	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn push_overwrite(&mut self, elem: T) -> Option<T> {$/;"	f
push_pop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/access.rs	/^fn push_pop() {$/;"	f
push_pop_all	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/basic.rs	/^fn push_pop_all() {$/;"	f
push_pop_local	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/base.rs	/^fn push_pop_local(b: &mut Bencher) {$/;"	f
push_pop_one	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/basic.rs	/^fn push_pop_one() {$/;"	f
push_pop_shared	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/base.rs	/^fn push_pop_shared(b: &mut Bencher) {$/;"	f
push_pop_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/message.rs	/^fn push_pop_slice() {$/;"	f
push_pop_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/slice.rs	/^fn push_pop_slice() {$/;"	f
push_pop_x100_immediate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/base.rs	/^fn push_pop_x100_immediate(b: &mut Bencher) {$/;"	f
push_pop_x100_postponed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/base.rs	/^fn push_pop_x100_postponed(b: &mut Bencher) {$/;"	f
push_radix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn push_radix(&mut self, radix: u8) {$/;"	f
push_radix_power	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn push_radix_power(&mut self, radix: u8, power: u32) {$/;"	f
push_return	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/access.rs	/^fn push_return() {$/;"	f
push_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn push_slice(&mut self, elems: &[T]) -> usize {$/;"	f
push_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn push_slice(&mut self, elems: &[T])$/;"	f
push_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/overwrite.rs	/^fn push_slice() {$/;"	f
push_slice_overwrite	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn push_slice_overwrite(&mut self, elems: &[T])$/;"	f
push_slice_panic	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/slice.rs	/^fn push_slice_panic() {$/;"	f
random_signal	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^pub fn random_signal<T: FftNum + SampleUniform>(length: usize) -> Vec<Complex<T>> {$/;"	f
rb	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn rb(&self) -> &R::Rb {$/;"	f
rb	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn rb(&self) -> &R::Rb {$/;"	f
read	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    fn read(&mut self, buffer: &mut [u8]) -> io::Result<usize> {$/;"	f
read_complex_to_array	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^macro_rules! read_complex_to_array {$/;"	d
read_complex_to_array	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^macro_rules! read_complex_to_array {$/;"	d
read_from	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn read_from<P: Read>($/;"	f
read_from_write_into	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/message.rs	/^fn read_from_write_into() {$/;"	f
read_partial1_complex_to_array	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^macro_rules! read_partial1_complex_to_array {$/;"	d
read_partial1_complex_to_array	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^macro_rules! read_partial1_complex_to_array {$/;"	d
read_write	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/message.rs	/^fn read_write() {$/;"	f
real_to_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn real_to_complex() {$/;"	f
record_n_play	/opt/work/rust/tuner/src/main.rs	/^    fn record_n_play() {$/;"	f
reindex_input	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    fn reindex_input(&self, source: &[Complex<T>], destination: &mut [Complex<T>]) {$/;"	f
reindex_output	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    fn reindex_output(&self, source: &[Complex<T>], destination: &mut [Complex<T>]) {$/;"	f
release	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^    pub fn release(mut self) -> R {$/;"	f
remove	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/property_listener.rs	/^    pub fn remove(mut self) -> Result<(), BuildStreamError> {$/;"	f
remove_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    pub fn remove_factors(mut self, factor: PrimeFactor) -> Option<Self> {$/;"	f
remove_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/property_listener.rs	/^    fn remove_inner(&mut self) -> Result<(), BuildStreamError> {$/;"	f
replan_with_cache	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn replan_with_cache(&self, plan: MixedRadixPlan, direction: FftDirection) -> MixedRadixPlan {$/;"	f
reset	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn reset(&mut self) -> io::Result<()> {$/;"	f
reverse_bits	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix3.rs	/^pub fn reverse_bits(value: usize, reversal_iters: usize) -> usize {$/;"	f
reverse_bits	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix4.rs	/^pub fn reverse_bits(value: usize, bitpairs: usize) -> usize {$/;"	f
reverse_complex_and_negate_hi_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub unsafe fn reverse_complex_and_negate_hi_f32(values: float32x4_t) -> float32x4_t {$/;"	f
reverse_complex_elements	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn reverse_complex_elements(self) -> Self {$/;"	f
reverse_complex_elements	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn reverse_complex_elements(self) -> Self;$/;"	f
reverse_complex_elements_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub unsafe fn reverse_complex_elements_f32(values: float32x4_t) -> float32x4_t {$/;"	f
reverse_complex_elements_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub unsafe fn reverse_complex_elements_f32(values: __m128) -> __m128 {$/;"	f
rotate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^    pub unsafe fn rotate(&self, values: float64x2_t) -> float64x2_t {$/;"	f
rotate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^    pub unsafe fn rotate(&self, values: __m128d) -> __m128d {$/;"	f
rotate90	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn rotate90(self, rotation: Rotation90<Self>) -> Self {$/;"	f
rotate_90	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/twiddles.rs	/^pub fn rotate_90<T: FftNum>(value: Complex<T>, direction: FftDirection) -> Complex<T> {$/;"	f
rotate_both	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^    pub unsafe fn rotate_both(&self, values: float32x4_t) -> float32x4_t {$/;"	f
rotate_both	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^    pub unsafe fn rotate_both(&self, values: __m128) -> __m128 {$/;"	f
rotate_hi	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^    pub unsafe fn rotate_hi(&self, values: float32x4_t) -> float32x4_t {$/;"	f
rotate_hi	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^    pub unsafe fn rotate_hi(&self, values: __m128) -> __m128 {$/;"	f
row_butterflies	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^    unsafe fn row_butterflies($/;"	f
row_butterflies	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^    unsafe fn row_butterflies($/;"	f
run_input	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn run_input($/;"	f
run_output	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn run_output($/;"	f
sample_format	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn sample_format(&self) -> SampleFormat {$/;"	f
sample_rate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    fn sample_rate(&mut self, _: &jack::Client, srate: jack::Frames) -> jack::Control {$/;"	f
sample_rate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn sample_rate(&self) -> SampleRate {$/;"	f
sample_size	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/samples_formats.rs	/^    pub fn sample_size(&self) -> usize {$/;"	f
send_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    fn send_error(&mut self, description: String) {$/;"	f
separate_interleaved_complex_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^macro_rules! separate_interleaved_complex_f32 {$/;"	d
separate_interleaved_complex_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^macro_rules! separate_interleaved_complex_f32 {$/;"	d
serde_support	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^mod serde_support {$/;"	m
serde_support	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^mod serde_support {$/;"	m
serialize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    pub fn serialize<T, S>(source: &T, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn serialize<S>(&self, s: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
set_bg	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_bg(&mut self, color: Color) -> &mut Style {$/;"	f
set_bold	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_bold(&mut self, yes: bool) -> &mut Style {$/;"	f
set_boxed_logger	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn set_boxed_logger(logger: Box<dyn Log>) -> Result<(), SetLoggerError> {$/;"	f
set_color	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn set_color(&mut self, spec: &ColorSpec) -> io::Result<()> {$/;"	f
set_color	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_color(&mut self, color: Color) -> &mut Style {$/;"	f
set_connect_automatically	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    pub fn set_connect_automatically(&mut self, do_connect: bool) {$/;"	f
set_dimmed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_dimmed(&mut self, yes: bool) -> &mut Style {$/;"	f
set_head	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    unsafe fn set_head(&self, value: usize);$/;"	f
set_head	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^    unsafe fn set_head(&self, value: usize) {$/;"	f
set_head	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^    unsafe fn set_head(&self, value: usize) {$/;"	f
set_head	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^    unsafe fn set_head(&self, value: usize) {$/;"	f
set_hw_params_from_format	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn set_hw_params_from_format($/;"	f
set_intense	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn set_intense(&mut self, yes: bool) -> &mut Style {$/;"	f
set_logger	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn set_logger(logger: &'static dyn Log) -> Result<(), SetLoggerError> {$/;"	f
set_logger_inner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^fn set_logger_inner<F>(make_logger: F) -> Result<(), SetLoggerError>$/;"	f
set_logger_racy	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub unsafe fn set_logger_racy(logger: &'static dyn Log) -> Result<(), SetLoggerError> {$/;"	f
set_max_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^pub fn set_max_level(level: LevelFilter) {$/;"	f
set_sample_rate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^fn set_sample_rate($/;"	f
set_start_server_automatically	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/mod.rs	/^    pub fn set_start_server_automatically(&mut self, do_start_server: bool) {$/;"	f
set_sw_params_from_format	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn set_sw_params_from_format($/;"	f
set_tail	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    unsafe fn set_tail(&self, value: usize);$/;"	f
set_tail	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^    unsafe fn set_tail(&self, value: usize) {$/;"	f
set_tail	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^    unsafe fn set_tail(&self, value: usize) {$/;"	f
set_tail	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^    unsafe fn set_tail(&self, value: usize) {$/;"	f
set_timeout	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^fn set_timeout<D>($/;"	f
shutdown	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    fn shutdown(&mut self, _status: jack::ClientStatus, reason: &str) {$/;"	f
signed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn signed() -> impl Iterator<Item = Value<'static>> {$/;"	f
single	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/drop.rs	/^fn single() {$/;"	f
size_hint	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
size_hint	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	f
skip	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn skip(&mut self, count: usize) -> usize {$/;"	f
skip	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/rb.rs	/^    fn skip(&mut self, count: usize) -> usize {$/;"	f
skip	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/skip.rs	/^fn skip() {$/;"	f
skip_drop	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/skip.rs	/^fn skip_drop() {$/;"	f
skip_internal	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    unsafe fn skip_internal(&self, count_or_all: Option<usize>) -> usize {$/;"	f
skip_panic	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/skip.rs	/^fn skip_panic() {$/;"	f
slice_assume_init_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/utils.rs	/^pub unsafe fn slice_assume_init_mut<T>(slice: &mut [MaybeUninit<T>]) -> &mut [T] {$/;"	f
slice_assume_init_ref	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/utils.rs	/^pub unsafe fn slice_assume_init_ref<T>(slice: &[MaybeUninit<T>]) -> &[T] {$/;"	f
slice_x10	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/slice.rs	/^fn slice_x10(b: &mut Bencher) {$/;"	f
slice_x100	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/slice.rs	/^fn slice_x100(b: &mut Bencher) {$/;"	f
slice_x1000	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/benchmarks/slice.rs	/^fn slice_x1000(b: &mut Bencher) {$/;"	f
solo_fft2_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^unsafe fn solo_fft2_f32(values: float32x4_t) -> float32x4_t {$/;"	f
solo_fft2_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^unsafe fn solo_fft2_f32(values: __m128) -> __m128 {$/;"	f
source_is_object_safe	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn source_is_object_safe() {$/;"	f
split	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^    pub fn split(self) -> (Producer<T, Rc<Self>>, Consumer<T, Rc<Self>>)$/;"	f
split	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^    pub fn split(self) -> (Producer<T, Arc<Self>>, Consumer<T, Arc<Self>>)$/;"	f
split	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn split(input: Self::FullVector) -> (Self, Self) {$/;"	f
split	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn split(self) -> (Self::HalfVector, Self::HalfVector) {$/;"	f
split_capacity	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/basic.rs	/^fn split_capacity() {$/;"	f
split_ref	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^    pub fn split_ref(&mut self) -> (Producer<T, &Self>, Consumer<T, &Self>)$/;"	f
split_ref	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^    pub fn split_ref(&mut self) -> (Producer<T, &Self>, Consumer<T, &Self>)$/;"	f
split_threads	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/basic.rs	/^fn split_threads() {$/;"	f
sse	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^mod sse {$/;"	m
sse_planner	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/lib.rs	/^    pub mod sse_planner {$/;"	m
std_fmt_impls	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^mod std_fmt_impls {$/;"	m
std_support	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/error.rs	/^mod std_support {$/;"	m
std_support	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^mod std_support {$/;"	m
std_support	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^mod std_support {$/;"	m
std_support	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^mod std_support {$/;"	m
store	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn store(&self, val: usize, _order: Ordering) {$/;"	f
store	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^    pub unsafe fn store(&self, value: T, index: usize) {$/;"	f
store_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_complex(&mut self, data: T::VectorType, index: usize) {$/;"	f
store_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_complex(&mut self, data: T::VectorType, index: usize);$/;"	f
store_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_complex(ptr: *mut Complex<Self::ScalarType>, data: Self) {$/;"	f
store_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_complex(ptr: *mut Complex<Self::ScalarType>, data: Self);$/;"	f
store_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn store_complex(&self, vector: Self::VectorType, index: usize) {$/;"	f
store_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn store_complex(&self, vector: Self::VectorType, index: usize);$/;"	f
store_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn store_complex(&self, vector: Self::VectorType, index: usize) {$/;"	f
store_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn store_complex(&self, vector: Self::VectorType, index: usize);$/;"	f
store_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_partial1_complex($/;"	f
store_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_partial1_complex(ptr: *mut Complex<Self::ScalarType>, data: Self::HalfVector) {$/;"	f
store_partial1_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_partial1_complex(ptr: *mut Complex<Self::ScalarType>, data: Self::HalfVector);$/;"	f
store_partial2_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_partial2_complex($/;"	f
store_partial2_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_partial2_complex(ptr: *mut Complex<Self::ScalarType>, data: Self::HalfVector) {$/;"	f
store_partial2_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_partial2_complex(ptr: *mut Complex<Self::ScalarType>, data: Self::HalfVector);$/;"	f
store_partial3_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_partial3_complex(&mut self, data: T::VectorType, index: usize) {$/;"	f
store_partial3_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_partial3_complex(&mut self, data: T::VectorType, index: usize);$/;"	f
store_partial3_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_partial3_complex(_ptr: *mut Complex<Self::ScalarType>, _data: Self) {$/;"	f
store_partial3_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_partial3_complex(ptr: *mut Complex<Self::ScalarType>, data: Self) {$/;"	f
store_partial3_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn store_partial3_complex(ptr: *mut Complex<Self::ScalarType>, data: Self);$/;"	f
store_partial_hi_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn store_partial_hi_complex(&self, _vector: Self::VectorType, _index: usize) {$/;"	f
store_partial_hi_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn store_partial_hi_complex(&self, vector: Self::VectorType, index: usize) {$/;"	f
store_partial_hi_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn store_partial_hi_complex(&self, vector: Self::VectorType, index: usize);$/;"	f
store_partial_hi_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn store_partial_hi_complex(&self, _vector: Self::VectorType, _index: usize) {$/;"	f
store_partial_hi_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn store_partial_hi_complex(&self, vector: Self::VectorType, index: usize) {$/;"	f
store_partial_hi_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn store_partial_hi_complex(&self, vector: Self::VectorType, index: usize);$/;"	f
store_partial_lo_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn store_partial_lo_complex(&self, _vector: Self::VectorType, _index: usize) {$/;"	f
store_partial_lo_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn store_partial_lo_complex(&self, vector: Self::VectorType, index: usize) {$/;"	f
store_partial_lo_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    unsafe fn store_partial_lo_complex(&self, vector: Self::VectorType, index: usize);$/;"	f
store_partial_lo_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn store_partial_lo_complex(&self, _vector: Self::VectorType, _index: usize) {$/;"	f
store_partial_lo_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn store_partial_lo_complex(&self, vector: Self::VectorType, index: usize) {$/;"	f
store_partial_lo_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^    unsafe fn store_partial_lo_complex(&self, vector: Self::VectorType, index: usize);$/;"	f
str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn str() -> impl Iterator<Item = Value<'static>> {$/;"	f
stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^        fn stream(&self, stream: &mut value::Stream) -> value::Result {$/;"	f
stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn stream(&self, stream: &mut value::Stream) -> value::Result {$/;"	f
stream	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn stream(&self, stream: &mut self::sval::value::Stream) -> self::sval::value::Result {$/;"	f
stream_config_from_asbd	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^fn stream_config_from_asbd(asbd: AudioStreamBasicDescription) -> SupportedStreamConfig {$/;"	f
stream_instant	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/convert.rs	/^pub fn stream_instant<T: oboe::AudioStreamSafe + ?Sized>(stream: &mut T) -> StreamInstant {$/;"	f
stream_instant	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn stream_instant(stream: &StreamInner) -> Result<crate::StreamInstant, StreamError> {$/;"	f
stream_timestamp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn stream_timestamp($/;"	f
style	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn style(&self) -> Style {$/;"	f
sub	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn sub(&self, duration: Duration) -> Option<Self> {$/;"	f
sub	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn sub(left: Self, right: Self) -> Self {$/;"	f
sub	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn sub(left: Self, right: Self) -> Self;$/;"	f
subtle_style	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn subtle_style(&self, text: &'static str) -> SubtleStyle {$/;"	f
supported_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn supported_configs($/;"	f
supported_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn supported_configs($/;"	f
supported_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    pub fn supported_configs(&self) -> Vec<SupportedStreamConfigRange> {$/;"	f
supported_formats	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn supported_formats(&self) -> Result<SupportedInputConfigs, SupportedStreamConfigsError> {$/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^    pub fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    pub fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn supported_input_configs($/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn supported_input_configs(&self) -> Result<Self::SupportedInputConfigs, crate::SupportedStreamConfigsError> {$/;"	f
supported_input_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn supported_input_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/device.rs	/^    pub fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/mod.rs	/^    fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/ios/mod.rs	/^    fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/mod.rs	/^    fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^    fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/device.rs	/^    fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/null/mod.rs	/^    fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/mod.rs	/^    fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/device.rs	/^    pub fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^    fn supported_output_configs($/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/platform/mod.rs	/^            fn supported_output_configs(&self) -> Result<Self::SupportedOutputConfigs, crate::SupportedStreamConfigsError> {$/;"	f
supported_output_configs	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^    fn supported_output_configs($/;"	f
supports_input	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^        fn supports_input<D: DeviceTrait>(device: &D) -> bool {$/;"	f
supports_output	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/traits.rs	/^        fn supports_output<D: DeviceTrait>(device: &D) -> bool {$/;"	f
sval_support	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^mod sval_support {$/;"	m
sval_support	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^mod sval_support {$/;"	m
swap_complex_components	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn swap_complex_components(self) -> Self {$/;"	f
swap_complex_components	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn swap_complex_components(self) -> Self;$/;"	f
sync	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn sync(&mut self) {$/;"	f
sync	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    pub fn sync(&mut self) {$/;"	f
sync	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^    pub fn sync(&mut self) {$/;"	f
system_time_to_stream_instant	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^fn system_time_to_stream_instant($/;"	f
tail	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    fn tail(&self) -> usize;$/;"	f
tail	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/cache.rs	/^    fn tail(&self) -> usize {$/;"	f
tail	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/local.rs	/^    fn tail(&self) -> usize {$/;"	f
tail	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/shared.rs	/^    fn tail(&self) -> usize {$/;"	f
take	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn take(&mut self, name: &str, stream_type: alsa::Direction) -> Result<alsa::PCM, alsa::Error> {$/;"	f
target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn target(&mut self, target: fmt::Target) -> &mut Self {$/;"	f
target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn target(&mut self, target: &'a str) -> &mut MetadataBuilder<'a> {$/;"	f
target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn target(&mut self, target: &'a str) -> &mut RecordBuilder<'a> {$/;"	f
target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn target(&self) -> &'a str {$/;"	f
temp_buffer_to_data	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^fn temp_buffer_to_data(temp_input_buffer: &mut Vec<f32>, total_buffer_size: usize) -> Data {$/;"	f
test_3adix3_with_length	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix3.rs	/^    fn test_3adix3_with_length(len: usize, direction: FftDirection) {$/;"	f
test_avx_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^    macro_rules! test_avx_butterfly {$/;"	d
test_avx_butterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^    macro_rules! test_avx_butterfly {$/;"	d
test_avx_mixed_radix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^    macro_rules! test_avx_mixed_radix {$/;"	d
test_bluesteins_avx_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^    fn test_bluesteins_avx_f32() {$/;"	f
test_bluesteins_avx_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^    fn test_bluesteins_avx_f64() {$/;"	f
test_bluesteins_avx_with_length	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^    fn test_bluesteins_avx_with_length<T: AvxNum + Float + SampleUniform>($/;"	f
test_bluesteins_scalar	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/bluesteins_algorithm.rs	/^    fn test_bluesteins_scalar() {$/;"	f
test_bluesteins_with_length	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/bluesteins_algorithm.rs	/^    fn test_bluesteins_with_length(len: usize, direction: FftDirection) {$/;"	f
test_butterfly_32_func	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    macro_rules! test_butterfly_32_func {$/;"	d
test_butterfly_32_func	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^    macro_rules! test_butterfly_32_func {$/;"	d
test_butterfly_32_func	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    macro_rules! test_butterfly_32_func {$/;"	d
test_butterfly_32_func	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^    macro_rules! test_butterfly_32_func {$/;"	d
test_butterfly_64_func	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    macro_rules! test_butterfly_64_func {$/;"	d
test_butterfly_64_func	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^    macro_rules! test_butterfly_64_func {$/;"	d
test_butterfly_64_func	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    macro_rules! test_butterfly_64_func {$/;"	d
test_butterfly_64_func	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^    macro_rules! test_butterfly_64_func {$/;"	d
test_butterfly_func	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^    macro_rules! test_butterfly_func {$/;"	d
test_calc_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^    fn test_calc_f32() {$/;"	f
test_calc_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^    fn test_calc_f32() {$/;"	f
test_calc_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^    fn test_calc_f64() {$/;"	f
test_calc_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^    fn test_calc_f64() {$/;"	f
test_capture_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_capture_error() {$/;"	f
test_capture_fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_capture_fmt() {$/;"	f
test_capture_serde	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_capture_serde() {$/;"	f
test_capture_sval	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_capture_sval() {$/;"	f
test_cmp_default_heuristics	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^fn test_cmp_default_heuristics() {$/;"	f
test_cross_cmp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_cross_cmp() {$/;"	f
test_cross_eq	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_cross_eq() {$/;"	f
test_dft_correct	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/dft.rs	/^    fn test_dft_correct(input: &[Complex<f32>], expected_output: &[Complex<f32>]) {$/;"	f
test_dft_known_len_2	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/dft.rs	/^    fn test_dft_known_len_2() {$/;"	f
test_dft_known_len_3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/dft.rs	/^    fn test_dft_known_len_3() {$/;"	f
test_dft_known_len_4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/dft.rs	/^    fn test_dft_known_len_4() {$/;"	f
test_dft_known_len_6	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/dft.rs	/^    fn test_dft_known_len_6() {$/;"	f
test_distinct_prime_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    fn test_distinct_prime_factors() {$/;"	f
test_downcast_ref	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_downcast_ref() {$/;"	f
test_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^    fn test_error() -> Result<(), Box<dyn Error>> {$/;"	f
test_error_trait	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_error_trait() {$/;"	f
test_foreign_impl	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_foreign_impl() {$/;"	f
test_good_thomas	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    fn test_good_thomas() {$/;"	f
test_good_thomas_inner_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    fn test_good_thomas_inner_scratch() {$/;"	f
test_good_thomas_small	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    fn test_good_thomas_small() {$/;"	f
test_good_thomas_small_with_lengths	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    fn test_good_thomas_small_with_lengths(width: usize, height: usize, direction: FftDirection) {$/;"	f
test_good_thomas_with_lengths	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    fn test_good_thomas_with_lengths(width: usize, height: usize, direction: FftDirection) {$/;"	f
test_impl_fft_planner_send	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn test_impl_fft_planner_send<T: FftNum>() {$/;"	f
test_level_as_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_level_as_str() {$/;"	f
test_level_case_insensitive	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_case_insensitive() {$/;"	f
test_level_de_bytes	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_de_bytes() {$/;"	f
test_level_de_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_de_error() {$/;"	f
test_level_de_variant_index	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_de_variant_index() {$/;"	f
test_level_filter_as_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_level_filter_as_str() {$/;"	f
test_level_filter_case_insensitive	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_filter_case_insensitive() {$/;"	f
test_level_filter_de_bytes	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_filter_de_bytes() {$/;"	f
test_level_filter_de_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_filter_de_error() {$/;"	f
test_level_filter_de_variant_index	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_filter_de_variant_index() {$/;"	f
test_level_filter_ser_de	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_filter_ser_de() {$/;"	f
test_level_from_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_level_from_str() {$/;"	f
test_level_ser_de	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^    fn test_level_ser_de() {$/;"	f
test_level_show	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_level_show() {$/;"	f
test_levelfilter_from_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_levelfilter_from_str() {$/;"	f
test_levelfilter_show	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_levelfilter_show() {$/;"	f
test_load_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    fn test_load_f64() {$/;"	f
test_matches_dft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/dft.rs	/^    fn test_matches_dft() {$/;"	f
test_metadata_builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_metadata_builder() {$/;"	f
test_metadata_convenience_builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_metadata_convenience_builder() {$/;"	f
test_mixed_radix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/mixed_radix.rs	/^    fn test_mixed_radix() {$/;"	f
test_mixed_radix_inner_scratch	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/mixed_radix.rs	/^    fn test_mixed_radix_inner_scratch() {$/;"	f
test_mixed_radix_small	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/mixed_radix.rs	/^    fn test_mixed_radix_small() {$/;"	f
test_mixed_radix_small_with_lengths	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/mixed_radix.rs	/^    fn test_mixed_radix_small_with_lengths(width: usize, height: usize, direction: FftDirection) {$/;"	f
test_mixed_radix_with_lengths	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/mixed_radix.rs	/^    fn test_mixed_radix_with_lengths(width: usize, height: usize, direction: FftDirection) {$/;"	f
test_modular_exponent	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    fn test_modular_exponent() {$/;"	f
test_mul_complex_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^    fn test_mul_complex_f32() {$/;"	f
test_mul_complex_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    fn test_mul_complex_f32() {$/;"	f
test_mul_complex_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^    fn test_mul_complex_f32() {$/;"	f
test_mul_complex_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^    fn test_mul_complex_f64() {$/;"	f
test_mul_complex_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    fn test_mul_complex_f64() {$/;"	f
test_mul_complex_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^    fn test_mul_complex_f64() {$/;"	f
test_neon_fft_cache	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn test_neon_fft_cache() {$/;"	f
test_neon_radix4_32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^    fn test_neon_radix4_32() {$/;"	f
test_neon_radix4_32_with_length	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^    fn test_neon_radix4_32_with_length(len: usize, direction: FftDirection) {$/;"	f
test_neon_radix4_64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^    fn test_neon_radix4_64() {$/;"	f
test_neon_radix4_64_with_length	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^    fn test_neon_radix4_64_with_length(len: usize, direction: FftDirection) {$/;"	f
test_neon_recipe_cache	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn test_neon_recipe_cache() {$/;"	f
test_output_mapping	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^    fn test_output_mapping() {$/;"	f
test_pack	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^    fn test_pack() {$/;"	f
test_pack	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    fn test_pack() {$/;"	f
test_pack	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^    fn test_pack() {$/;"	f
test_parallel_fft2_32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    fn test_parallel_fft2_32() {$/;"	f
test_parallel_fft4_32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^    fn test_parallel_fft4_32() {$/;"	f
test_partial_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    fn test_partial_factors() {$/;"	f
test_partial_factors_divide_by	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    fn test_partial_factors_divide_by() {$/;"	f
test_partition_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    fn test_partition_factors() {$/;"	f
test_plan_neon_bluestein_vs_rader	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn test_plan_neon_bluestein_vs_rader() {$/;"	f
test_plan_neon_butterflies	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn test_plan_neon_butterflies() {$/;"	f
test_plan_neon_goodthomasbutterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn test_plan_neon_goodthomasbutterfly() {$/;"	f
test_plan_neon_largepoweroftwo	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn test_plan_neon_largepoweroftwo() {$/;"	f
test_plan_neon_mixedradix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn test_plan_neon_mixedradix() {$/;"	f
test_plan_neon_mixedradixsmall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn test_plan_neon_mixedradixsmall() {$/;"	f
test_plan_neon_trivial	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^    fn test_plan_neon_trivial() {$/;"	f
test_plan_scalar_bluestein_vs_rader	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn test_plan_scalar_bluestein_vs_rader() {$/;"	f
test_plan_scalar_butterflies	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn test_plan_scalar_butterflies() {$/;"	f
test_plan_scalar_goodthomasbutterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn test_plan_scalar_goodthomasbutterfly() {$/;"	f
test_plan_scalar_largepoweroftwo	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn test_plan_scalar_largepoweroftwo() {$/;"	f
test_plan_scalar_mixedradix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn test_plan_scalar_mixedradix() {$/;"	f
test_plan_scalar_mixedradixsmall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn test_plan_scalar_mixedradixsmall() {$/;"	f
test_plan_scalar_trivial	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn test_plan_scalar_trivial() {$/;"	f
test_plan_sse_bluestein_vs_rader	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn test_plan_sse_bluestein_vs_rader() {$/;"	f
test_plan_sse_butterflies	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn test_plan_sse_butterflies() {$/;"	f
test_plan_sse_goodthomasbutterfly	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn test_plan_sse_goodthomasbutterfly() {$/;"	f
test_plan_sse_largepoweroftwo	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn test_plan_sse_largepoweroftwo() {$/;"	f
test_plan_sse_mixedradix	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn test_plan_sse_mixedradix() {$/;"	f
test_plan_sse_mixedradixsmall	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn test_plan_sse_mixedradixsmall() {$/;"	f
test_plan_sse_trivial	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn test_plan_sse_trivial() {$/;"	f
test_plan_zero_avx	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^    fn test_plan_zero_avx() {$/;"	f
test_plan_zero_scalar	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn test_plan_zero_scalar() {$/;"	f
test_prime_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    fn test_prime_factors() {$/;"	f
test_primitive_root	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    fn test_primitive_root() {$/;"	f
test_raders	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/raders_algorithm.rs	/^    fn test_raders() {$/;"	f
test_raders_avx_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^    fn test_raders_avx_f32() {$/;"	f
test_raders_avx_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^    fn test_raders_avx_f64() {$/;"	f
test_raders_with_length	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/raders_algorithm.rs	/^    fn test_raders_with_length(len: usize, direction: FftDirection) {$/;"	f
test_raders_with_length	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^    fn test_raders_with_length<T: AvxNum + Float + SampleUniform>($/;"	f
test_radix3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix3.rs	/^    fn test_radix3() {$/;"	f
test_radix4	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix4.rs	/^    fn test_radix4() {$/;"	f
test_radix4_with_length	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix4.rs	/^    fn test_radix4_with_length(len: usize, direction: FftDirection) {$/;"	f
test_real_fft	/opt/work/rust/tuner/src/main.rs	/^    pub fn test_real_fft() {$/;"	f
test_record_builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_record_builder() {$/;"	f
test_record_complete_builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_record_complete_builder() {$/;"	f
test_record_convenience_builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_record_convenience_builder() {$/;"	f
test_record_key_values_builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_record_key_values_builder() {$/;"	f
test_record_key_values_get_coerce	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_record_key_values_get_coerce() {$/;"	f
test_remove_factors	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^    fn test_remove_factors() {$/;"	f
test_rotate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/twiddles.rs	/^    fn test_rotate() {$/;"	f
test_rust_fft	/opt/work/rust/tuner/src/main.rs	/^    pub fn test_rust_fft() {$/;"	f
test_scalar_fft_cache	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn test_scalar_fft_cache() {$/;"	f
test_scalar_recipe_cache	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^    fn test_scalar_recipe_cache() {$/;"	f
test_solo_fft2_32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^    fn test_solo_fft2_32() {$/;"	f
test_sse_fft_cache	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn test_sse_fft_cache() {$/;"	f
test_sse_radix4_32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^    fn test_sse_radix4_32() {$/;"	f
test_sse_radix4_32_with_length	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^    fn test_sse_radix4_32_with_length(len: usize, direction: FftDirection) {$/;"	f
test_sse_radix4_64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^    fn test_sse_radix4_64() {$/;"	f
test_sse_radix4_64_with_length	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^    fn test_sse_radix4_64_with_length(len: usize, direction: FftDirection) {$/;"	f
test_sse_recipe_cache	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^    fn test_sse_recipe_cache() {$/;"	f
test_store_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^    fn test_store_f64() {$/;"	f
test_stream_instant	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^fn test_stream_instant() {$/;"	f
test_to_bool	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_bool() {$/;"	f
test_to_char	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_char() {$/;"	f
test_to_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_to_level() {$/;"	f
test_to_level_filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn test_to_level_filter() {$/;"	f
test_to_number	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_number() {$/;"	f
test_to_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_str() {$/;"	f
test_to_value_display	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_value_display() {$/;"	f
test_to_value_structured	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_to_value_structured() {$/;"	f
test_transpose	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^    fn test_transpose() {$/;"	f
test_visit_borrowed_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_visit_borrowed_str() {$/;"	f
test_visit_integer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn test_visit_integer() {$/;"	f
tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^mod tests {$/;"	m
tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^mod tests {$/;"	m
tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^mod tests {$/;"	m
tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^mod tests {$/;"	m
tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^mod tests {$/;"	m
tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    mod tests {$/;"	m
tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^mod tests {$/;"	m
tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^mod tests {$/;"	m
tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^mod tests {$/;"	m
tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^mod tests {$/;"	m
tests	/opt/work/rust/tuner/src/main.rs	/^pub mod tests {$/;"	m
timespec_diff_nanos	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn timespec_diff_nanos(a: libc::timespec, b: libc::timespec) -> i64 {$/;"	f
timespec_to_nanos	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn timespec_to_nanos(ts: libc::timespec) -> i64 {$/;"	f
timestamp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn timestamp(&self) -> InputStreamTimestamp {$/;"	f
timestamp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn timestamp(&self) -> OutputStreamTimestamp {$/;"	f
timestamp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp(&self) -> Timestamp {$/;"	f
timestamp_micros	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_micros(&self) -> Timestamp {$/;"	f
timestamp_millis	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_millis(&self) -> Timestamp {$/;"	f
timestamp_nanos	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_nanos(&self) -> Timestamp {$/;"	f
timestamp_seconds	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/humantime/extern_impl.rs	/^    pub fn timestamp_seconds(&self) -> Timestamp {$/;"	f
to_ascii_uppercase	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    fn to_ascii_uppercase(c: u8) -> u8 {$/;"	f
to_be	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^fn to_be<T: PrimInt>(t: T) -> T {$/;"	f
to_borrowed_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn to_borrowed_error(&self) -> Option<&(dyn std::error::Error + 'static)> {$/;"	f
to_borrowed_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn to_borrowed_str(&self) -> Option<&str> {$/;"	f
to_builder	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn to_builder(&self) -> RecordBuilder {$/;"	f
to_key	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^        fn to_key(&self) -> Key {$/;"	f
to_key	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn to_key(&self) -> Key {$/;"	f
to_key	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/key.rs	/^    fn to_key(&self) -> Key;$/;"	f
to_le	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/asio/stream.rs	/^fn to_le<T: PrimInt>(t: T) -> T {$/;"	f
to_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn to_level(&self) -> Option<Level> {$/;"	f
to_level_filter	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^    pub fn to_level_filter(&self) -> LevelFilter {$/;"	f
to_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        pub fn to_str(&self) -> Option<Cow<str>> {$/;"	f
to_stream_instant	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/convert.rs	/^pub fn to_stream_instant(duration: Duration) -> StreamInstant {$/;"	f
to_value	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^                fn to_value(&self) -> Value {$/;"	f
to_value	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^        fn to_value(&self) -> Value {$/;"	f
to_value	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value {$/;"	f
to_value	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn to_value(&self) -> Value;$/;"	f
trace	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! trace {$/;"	d
transaction	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/tests/drop.rs	/^fn transaction() {$/;"	f
transfer	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/transfer.rs	/^pub fn transfer<T, Rs: RbRef, Rd: RbRef>($/;"	f
transpose	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^    unsafe fn transpose(&self, input: &[Complex<A>], output: &mut [Complex<A>]) {$/;"	f
transpose11_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose11_packed(rows: [Self; 11]) -> [Self; 11] {$/;"	f
transpose11_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose11_packed(rows: [Self; 11]) -> [Self; 11];$/;"	f
transpose12_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose12_packed(rows: [Self; 12]) -> [Self; 12] {$/;"	f
transpose12_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose12_packed(rows: [Self; 12]) -> [Self; 12];$/;"	f
transpose16_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose16_packed(rows: [Self; 16]) -> [Self; 16] {$/;"	f
transpose16_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose16_packed(rows: [Self; 16]) -> [Self; 16];$/;"	f
transpose2_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose2_packed(rows: [Self; 2]) -> [Self; 2] {$/;"	f
transpose2_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose2_packed(rows: [Self; 2]) -> [Self; 2];$/;"	f
transpose3_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose3_packed(rows: [Self; 3]) -> [Self; 3] {$/;"	f
transpose3_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose3_packed(rows: [Self; 3]) -> [Self; 3];$/;"	f
transpose4_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose4_packed(rows: [Self; 4]) -> [Self; 4] {$/;"	f
transpose4_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose4_packed(rows: [Self; 4]) -> [Self; 4];$/;"	f
transpose5_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose5_packed(rows: [Self; 5]) -> [Self; 5] {$/;"	f
transpose5_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose5_packed(rows: [Self; 5]) -> [Self; 5];$/;"	f
transpose6_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose6_packed(rows: [Self; 6]) -> [Self; 6] {$/;"	f
transpose6_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose6_packed(rows: [Self; 6]) -> [Self; 6];$/;"	f
transpose7_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose7_packed(rows: [Self; 7]) -> [Self; 7] {$/;"	f
transpose7_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose7_packed(rows: [Self; 7]) -> [Self; 7];$/;"	f
transpose8_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose8_packed(rows: [Self; 8]) -> [Self; 8] {$/;"	f
transpose8_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose8_packed(rows: [Self; 8]) -> [Self; 8];$/;"	f
transpose9_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose9_packed(rows: [Self; 9]) -> [Self; 9] {$/;"	f
transpose9_packed	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn transpose9_packed(rows: [Self; 9]) -> [Self; 9];$/;"	f
transpose_12x4_to_4x12_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_utils.rs	/^pub unsafe fn transpose_12x4_to_4x12_f32($/;"	f
transpose_12x6_to_6x12_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_utils.rs	/^pub unsafe fn transpose_12x6_to_6x12_f32($/;"	f
transpose_2x2_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_utils.rs	/^pub unsafe fn transpose_2x2_f64(rows: [__m256d; 2]) -> [__m256d; 2] {$/;"	f
transpose_3x3_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_utils.rs	/^pub unsafe fn transpose_3x3_f64($/;"	f
transpose_3x4_to_4x3_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_utils.rs	/^pub unsafe fn transpose_3x4_to_4x3_f64($/;"	f
transpose_3x6_to_6x3_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_utils.rs	/^pub unsafe fn transpose_3x6_to_6x3_f64($/;"	f
transpose_4x2_to_2x4_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_utils.rs	/^pub unsafe fn transpose_4x2_to_2x4_f64(rows0: [__m256d; 2], rows1: [__m256d; 2]) -> [__m256d; 4] {$/;"	f
transpose_4x4_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_utils.rs	/^pub unsafe fn transpose_4x4_f32(rows: [__m256; 4]) -> [__m256; 4] {$/;"	f
transpose_4x4_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_utils.rs	/^pub unsafe fn transpose_4x4_f64($/;"	f
transpose_4x6_to_6x4_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_utils.rs	/^pub unsafe fn transpose_4x6_to_6x4_f32(rows: [__m256; 6]) -> ([__m256; 4], [__m256; 4]) {$/;"	f
transpose_6x4_to_4x6_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_utils.rs	/^pub unsafe fn transpose_6x4_to_4x6_f64($/;"	f
transpose_6x6_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_utils.rs	/^pub unsafe fn transpose_6x6_f64($/;"	f
transpose_8x4_to_4x8_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_utils.rs	/^pub unsafe fn transpose_8x4_to_4x8_f32(rows0: [__m256; 4], rows1: [__m256; 4]) -> [__m256; 8] {$/;"	f
transpose_8x4_to_4x8_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_utils.rs	/^pub unsafe fn transpose_8x4_to_4x8_f64($/;"	f
transpose_8x8_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_utils.rs	/^pub unsafe fn transpose_8x8_f32($/;"	f
transpose_9x3_to_3x9_emptycolumn1_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_utils.rs	/^pub unsafe fn transpose_9x3_to_3x9_emptycolumn1_f32($/;"	f
transpose_9x3_to_3x9_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_utils.rs	/^pub unsafe fn transpose_9x3_to_3x9_f64($/;"	f
transpose_9x4_to_4x9_emptycolumn1_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_utils.rs	/^pub unsafe fn transpose_9x4_to_4x9_emptycolumn1_f32($/;"	f
transpose_9x6_to_6x9_emptycolumn1_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_utils.rs	/^pub unsafe fn transpose_9x6_to_6x9_emptycolumn1_f32($/;"	f
transpose_complex_2x2_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^pub unsafe fn transpose_complex_2x2_f32(left: float32x4_t, right: float32x4_t) -> [float32x4_t; 2] {$/;"	f
transpose_complex_2x2_f32	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^pub unsafe fn transpose_complex_2x2_f32(left: __m128, right: __m128) -> [__m128; 2] {$/;"	f
transpose_small	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^pub unsafe fn transpose_small<T: Copy>(width: usize, height: usize, input: &[T], output: &mut [T]) {$/;"	f
transppose_diagnostic	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/test_utils.rs	/^fn transppose_diagnostic<T: FftNum + Float>(expected: &[Complex<T>], actual: &[Complex<T>]) {$/;"	f
trigger	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^fn trigger() -> (TriggerSender, TriggerReceiver) {$/;"	f
try_init	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn try_init(&mut self) -> Result<(), SetLoggerError> {$/;"	f
try_init	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn try_init() -> Result<(), SetLoggerError> {$/;"	f
try_init_from_env	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^pub fn try_init_from_env<'a, E>(env: E) -> Result<(), SetLoggerError>$/;"	f
try_open	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn try_open($/;"	f
try_status_or_return	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/coreaudio/macos/enumerate.rs	/^    macro_rules! try_status_or_return {$/;"	d
uninit_array	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/utils.rs	/^pub fn uninit_array<T, const N: usize>() -> [MaybeUninit<T>; N] {$/;"	f
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/bluesteins_algorithm.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/butterflies.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/dft.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/good_thomas_algorithm.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/mixed_radix.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/raders_algorithm.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix3.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/algorithm/radix4.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx32_butterflies.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx64_butterflies.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_bluesteins.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_mixed_radix.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_raders.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/math_utils.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_butterflies.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_common.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_planner.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_prime_butterflies.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_radix4.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_utils.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/plan.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_butterflies.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_common.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_planner.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_prime_butterflies.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_radix4.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_utils.rs	/^mod unit_tests {$/;"	m
unit_tests	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/twiddles.rs	/^mod unit_tests {$/;"	m
unpack_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn unpack_complex(rows: [Self; 2]) -> [Self; 2] {$/;"	f
unpackhi_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn unpackhi_complex(_rows: [Self; 2]) -> Self {$/;"	f
unpackhi_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn unpackhi_complex(rows: [Self; 2]) -> Self {$/;"	f
unpackhi_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn unpackhi_complex(rows: [Self; 2]) -> Self;$/;"	f
unpacklo_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn unpacklo_complex(_rows: [Self; 2]) -> Self {$/;"	f
unpacklo_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn unpacklo_complex(rows: [Self; 2]) -> Self {$/;"	f
unpacklo_complex	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn unpacklo_complex(rows: [Self; 2]) -> Self;$/;"	f
unsigned	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn unsigned() -> impl Iterator<Item = Value<'static>> {$/;"	f
vacant_len	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    fn vacant_len(&self) -> usize {$/;"	f
vacant_ranges	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    fn vacant_ranges(&self) -> (Range<usize>, Range<usize>) {$/;"	f
vacant_slices	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/ring_buffer/base.rs	/^    unsafe fn vacant_slices(&self) -> (&mut [MaybeUninit<T>], &mut [MaybeUninit<T>]) {$/;"	f
valid_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/emscripten/mod.rs	/^fn valid_config(conf: &StreamConfig, sample_format: SampleFormat) -> bool {$/;"	f
valid_config	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/webaudio/mod.rs	/^fn valid_config(conf: &StreamConfig, sample_format: SampleFormat) -> bool {$/;"	f
value	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    pub fn value<T>(&self, value: T) -> StyledValue<T> {$/;"	f
visit	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^            fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error> {$/;"	f
visit	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error> {$/;"	f
visit	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error> {$/;"	f
visit	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit<'kvs>(&'kvs self, visitor: &mut dyn Visitor<'kvs>) -> Result<(), Error>;$/;"	f
visit	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    pub fn visit(&self, visitor: impl Visit<'v>) -> Result<(), Error> {$/;"	f
visit_any	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_any(&mut self, value: Value) -> Result<(), Error> {$/;"	f
visit_any	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_any(&mut self, value: ValueBag) -> Result<(), value_bag::Error> {$/;"	f
visit_any	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_any(&mut self, value: Value) -> Result<(), Error> {$/;"	f
visit_any	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_any(&mut self, value: Value) -> Result<(), Error>;$/;"	f
visit_bool	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_bool(&mut self, value: bool) -> Result<(), value_bag::Error> {$/;"	f
visit_bool	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_bool(&mut self, value: bool) -> Result<(), Error> {$/;"	f
visit_borrowed_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_borrowed_error($/;"	f
visit_borrowed_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_borrowed_error($/;"	f
visit_borrowed_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_borrowed_str(&mut self, value: &'v str) -> Result<(), Error> {$/;"	f
visit_borrowed_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_borrowed_str(&mut self, value: &'v str) -> Result<(), value_bag::Error> {$/;"	f
visit_borrowed_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_borrowed_str(&mut self, value: &'v str) -> Result<(), Error> {$/;"	f
visit_bytes	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	f
visit_char	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_char(&mut self, value: char) -> Result<(), value_bag::Error> {$/;"	f
visit_char	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_char(&mut self, value: char) -> Result<(), Error> {$/;"	f
visit_enum	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_enum<A>(self, value: A) -> Result<Self::Value, A::Error>$/;"	f
visit_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_error($/;"	f
visit_error	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_error(&mut self, err: &(dyn std::error::Error + 'static)) -> Result<(), Error> {$/;"	f
visit_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_f64(&mut self, value: f64) -> Result<(), value_bag::Error> {$/;"	f
visit_f64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_f64(&mut self, value: f64) -> Result<(), Error> {$/;"	f
visit_i128	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_i128(&mut self, value: i128) -> Result<(), value_bag::Error> {$/;"	f
visit_i128	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_i128(&mut self, value: i128) -> Result<(), Error> {$/;"	f
visit_i64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_i64(&mut self, value: i64) -> Result<(), value_bag::Error> {$/;"	f
visit_i64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_i64(&mut self, value: i64) -> Result<(), Error> {$/;"	f
visit_pair	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^                fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn visit_pair(&mut self, _: Key<'kvs>, _: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^        fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error> {$/;"	f
visit_pair	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visit_pair(&mut self, key: Key<'kvs>, value: Value<'kvs>) -> Result<(), Error>;$/;"	f
visit_pair	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/lib.rs	/^            fn visit_pair($/;"	f
visit_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_str(&mut self, value: &str) -> Result<(), value_bag::Error> {$/;"	f
visit_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_str(&mut self, value: &str) -> Result<(), Error> {$/;"	f
visit_str	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_u128	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_u128(&mut self, value: u128) -> Result<(), value_bag::Error> {$/;"	f
visit_u128	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_u128(&mut self, value: u128) -> Result<(), Error> {$/;"	f
visit_u64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_u64(&mut self, value: u64) -> Result<(), Error> {$/;"	f
visit_u64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^            fn visit_u64(&mut self, value: u64) -> Result<(), value_bag::Error> {$/;"	f
visit_u64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/value.rs	/^    fn visit_u64(&mut self, value: u64) -> Result<(), Error> {$/;"	f
visit_u64	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/serde.rs	/^            fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	f
visitor_is_object_safe	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/kv/source.rs	/^    fn visitor_is_object_safe() {$/;"	f
wait_for_handle_signal	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/stream.rs	/^fn wait_for_handle_signal(handles: &[Foundation::HANDLE]) -> Result<usize, BackendSpecificError> {$/;"	f
wakeup	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/alsa/mod.rs	/^    fn wakeup(&self) {$/;"	f
warn	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/log-0.4.17/src/macros.rs	/^macro_rules! warn {$/;"	d
windows_err_to_cpal_err	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^fn windows_err_to_cpal_err<E: ErrDeviceNotAvailable>(e: windows::core::Error) -> E {$/;"	f
windows_err_to_cpal_err_message	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/wasapi/mod.rs	/^fn windows_err_to_cpal_err_message<E: ErrDeviceNotAvailable>($/;"	f
with_attached	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/oboe/android_media.rs	/^fn with_attached<F, R>(closure: F) -> JResult<R>$/;"	f
with_max_sample_rate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn with_max_sample_rate(self) -> SupportedStreamConfig {$/;"	f
with_sample_rate	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/lib.rs	/^    pub fn with_sample_rate(self, sample_rate: SampleRate) -> SupportedStreamConfig {$/;"	f
workaround_transmute	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^pub unsafe fn workaround_transmute<T, U>(slice: &[T]) -> &[U] {$/;"	f
workaround_transmute_mut	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/array_utils.rs	/^pub unsafe fn workaround_transmute_mut<T, U>(slice: &mut [T]) -> &mut [U] {$/;"	f
wrap_fft	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_planner.rs	/^fn wrap_fft<T: FftNum>(butterfly: impl Fft<T> + 'static) -> Arc<dyn Fft<T>> {$/;"	f
write	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^                    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	f
write	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write(fmt: DefaultFormat) -> String {$/;"	f
write	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write(mut self, record: &Record) -> io::Result<()> {$/;"	f
write	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/producer.rs	/^    fn write(&mut self, buffer: &[u8]) -> io::Result<usize> {$/;"	f
write_args	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_args(&mut self, record: &Record) -> io::Result<()> {$/;"	f
write_complex_to_array	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^macro_rules! write_complex_to_array {$/;"	d
write_complex_to_array	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^macro_rules! write_complex_to_array {$/;"	d
write_complex_to_array_strided	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^macro_rules! write_complex_to_array_strided {$/;"	d
write_complex_to_array_strided	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^macro_rules! write_complex_to_array_strided {$/;"	d
write_fmt	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/termcolor/extern_impl.rs	/^    fn write_fmt<F>(&self, f: F) -> fmt::Result$/;"	f
write_header_value	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_header_value<T>(&mut self, value: T) -> io::Result<()>$/;"	f
write_into	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/consumer.rs	/^    pub fn write_into<P: Write>($/;"	f
write_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_level(&mut self, record: &Record) -> io::Result<()> {$/;"	f
write_module_path	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_module_path(&mut self, record: &Record) -> io::Result<()> {$/;"	f
write_partial_lo_complex_to_array	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/neon/neon_vector.rs	/^macro_rules! write_partial_lo_complex_to_array {$/;"	d
write_partial_lo_complex_to_array	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/sse/sse_vector.rs	/^macro_rules! write_partial_lo_complex_to_array {$/;"	d
write_record	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_record(record: Record, fmt: DefaultFormat) -> String {$/;"	f
write_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/utils.rs	/^pub fn write_slice<'a, T: Copy>(dst: &'a mut [MaybeUninit<T>], src: &[T]) -> &'a mut [T] {$/;"	f
write_style	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/writer/mod.rs	/^    pub fn write_style(&self) -> WriteStyle {$/;"	f
write_style	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn write_style(&mut self, write_style: fmt::WriteStyle) -> &mut Self {$/;"	f
write_style	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn write_style<E>(mut self, write_style_env: E) -> Self$/;"	f
write_style_or	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/lib.rs	/^    pub fn write_style_or<E, V>(mut self, write_style_env: E, default: V) -> Self$/;"	f
write_target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_target(&mut self, record: &Record) -> io::Result<()> {$/;"	f
write_target	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_target(target: &str, fmt: DefaultFormat) -> String {$/;"	f
write_timestamp	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/fmt/mod.rs	/^    fn write_timestamp(&mut self) -> io::Result<()> {$/;"	f
write_uninit_slice	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.3.2/src/utils.rs	/^pub unsafe fn write_uninit_slice<'a, T: Copy>($/;"	f
xor	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn xor(left: Self, right: Self) -> Self {$/;"	f
xor	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn xor(left: Self, right: Self) -> Self;$/;"	f
xrun	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/cpal-0.15.0/src/host/jack/stream.rs	/^    fn xrun(&mut self, _: &jack::Client) -> jack::Control {$/;"	f
zero	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn zero() -> Self {$/;"	f
zero	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn zero() -> Self;$/;"	f
zero_extend	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn zero_extend(self) -> Self::FullVector {$/;"	f
zero_extend	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/rustfft-6.1.0/src/avx/avx_vector.rs	/^    unsafe fn zero_extend(self) -> Self::FullVector;$/;"	f
zero_level	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.10.0/src/filter/mod.rs	/^    fn zero_level() {$/;"	f
zip3	/home/daren/.cargo/registry/src/github.com-1ecc6299db9ec823/realfft-3.2.0/src/lib.rs	/^fn zip3<A, B, C>(a: A, b: B, c: C) -> impl Iterator<Item = (A::Item, B::Item, C::Item)>$/;"	f
